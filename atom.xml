<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sojiro's Blog]]></title>
  <link href="http://sojiro14.github.io/atom.xml" rel="self"/>
  <link href="http://sojiro14.github.io/"/>
  <updated>2016-06-30T04:19:14+09:00</updated>
  <id>http://sojiro14.github.io/</id>
  <author>
    <name><![CDATA[Sojiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DockerでRails環境を構築した手順]]></title>
    <link href="http://sojiro14.github.io/blog/2016/06/26/docker-rails-setup-tutorial/"/>
    <updated>2016-06-26T03:45:48+09:00</updated>
    <id>http://sojiro14.github.io/blog/2016/06/26/docker-rails-setup-tutorial</id>
    <content type="html"><![CDATA[<p>とある経緯で Docker を使って Rails の環境をセットアップした手順です。</p>

<h1>setting files</h1>

<p>まずは用意した file から。</p>

<h2>docker-compose.yml</h2>

<figure class='code'><figcaption><span>docker-compose.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># not use datastore container now</span>
</span><span class='line'><span class="c1">#datastore:</span>
</span><span class='line'><span class="c1">#  build: Dockerfiles/datastore</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">mysql</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">mysql:5.6.26</span>
</span><span class='line'>  <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">MYSQL_ROOT_PASSWORD</span><span class="p-Indicator">:</span> <span class="s">&#39;pass&#39;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="s">&#39;3306:3306&#39;</span>
</span><span class='line'><span class="c1">#  volumes_from:</span>
</span><span class='line'><span class="c1">#    - datastore</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">nginx</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">build</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Dockerfiles/nginx</span>
</span><span class='line'>  <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="s">&#39;8080:80&#39;</span>
</span><span class='line'><span class="c1">#  volumes_from:</span>
</span><span class='line'><span class="c1">#    - datastore</span>
</span><span class='line'>  <span class="l-Scalar-Plain">links</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">web</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">web</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">build</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">.</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">bundle exec unicorn -c config/unicorn.rb</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#  volumes_from:</span>
</span><span class='line'><span class="c1">#    - datastore</span>
</span><span class='line'>  <span class="l-Scalar-Plain">volumes</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">.:/usr/src/app</span>
</span><span class='line'>  <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">3000:3000</span>
</span><span class='line'>  <span class="l-Scalar-Plain">links</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">mysql</span>
</span><span class='line'>  <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">RAILS_ENV</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">development</span>
</span><span class='line'>    <span class="l-Scalar-Plain">MYSQL_ROOT_PASSWORD</span><span class="p-Indicator">:</span> <span class="s">&#39;pass&#39;</span>
</span><span class='line'>    <span class="l-Scalar-Plain">DATABASE_URL</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">mysql2://root:pass@mysql:3306</span>
</span><span class='line'>    <span class="l-Scalar-Plain">SECRET_KEY_BASE</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">hogehoge</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Dockerfile</h2>

<figure class='code'><figcaption><span>Dockerfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='dockerfile'><span class='line'><span class="k">FROM</span> rails:onbuild
</span></code></pre></td></tr></table></div></figure>


<h2>Dockerfiles/nginx/Dockerfile</h2>

<figure class='code'><figcaption><span>Dockerfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='dockerfile'><span class='line'><span class="k">FROM</span> nginx:1.7.9
</span><span class='line'>
</span><span class='line'>COPY nginx.conf /etc/nginx/nginx.conf
</span></code></pre></td></tr></table></div></figure>


<h2>Dockerfiles/nginx/nginx.conf</h2>

<figure class='code'><figcaption><span>nginx.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>user  nginx<span class="p">;</span>
</span><span class='line'>worker_processes  1<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>error_log  /var/log/nginx/error.log warn<span class="p">;</span>
</span><span class='line'>pid        /var/run/nginx.pid<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>events <span class="o">{</span>
</span><span class='line'>  worker_connections 1024<span class="p">;</span> <span class="c"># increase if you have lots of clients</span>
</span><span class='line'>  accept_mutex off<span class="p">;</span> <span class="c"># &quot;on&quot; if nginx worker_processes &gt; 1</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>http <span class="o">{</span>
</span><span class='line'>  include mime.types<span class="p">;</span>
</span><span class='line'>  default_type application/octet-stream<span class="p">;</span>
</span><span class='line'>  log_format  main  <span class="s1">&#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span>
</span><span class='line'>                    <span class="s1">&#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span>
</span><span class='line'>                    <span class="s1">&#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  access_log  /var/log/nginx/access.log  main<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  sendfile on<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  tcp_nopush on<span class="p">;</span> <span class="c"># off may be better for *some* Comet/long-poll stuff</span>
</span><span class='line'>  tcp_nodelay off<span class="p">;</span> <span class="c"># on may be better for some Comet/long-poll stuff</span>
</span><span class='line'>
</span><span class='line'>  gzip on<span class="p">;</span>
</span><span class='line'>  gzip_http_version 1.0<span class="p">;</span>
</span><span class='line'>  gzip_proxied any<span class="p">;</span>
</span><span class='line'>  gzip_min_length 500<span class="p">;</span>
</span><span class='line'>  gzip_disable <span class="s2">&quot;MSIE [1-6]\.&quot;</span><span class="p">;</span>
</span><span class='line'>  gzip_types text/plain text/html text/xml text/css
</span><span class='line'>             text/comma-separated-values
</span><span class='line'>             text/javascript application/x-javascript
</span><span class='line'>             application/atom+xml<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  upstream app_server <span class="o">{</span>
</span><span class='line'>    <span class="c"># for UNIX domain socket setups:</span>
</span><span class='line'>    <span class="c"># server unix:/path/to/.unicorn.sock fail_timeout=0;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># for TCP setups, point these to your backend servers</span>
</span><span class='line'>    <span class="c"># server 192.168.0.7:8080 fail_timeout=0;</span>
</span><span class='line'>    server rails:3000 <span class="nv">fail_timeout</span><span class="o">=</span>0<span class="p">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  server <span class="o">{</span>
</span><span class='line'>    listen       80<span class="p">;</span>
</span><span class='line'>    server_name  localhost<span class="p">;</span>
</span><span class='line'>    client_max_body_size 4G<span class="p">;</span>
</span><span class='line'>    keepalive_timeout 5<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># path for static files</span>
</span><span class='line'>    root /usr/your_app/home/system/public<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    try_files <span class="nv">$uri</span>/index.html <span class="nv">$uri</span>.html <span class="nv">$uri</span> @app<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    location @app <span class="o">{</span>
</span><span class='line'>      proxy_set_header X-Forwarded-For <span class="nv">$proxy_add_x_forwarded_for</span><span class="p">;</span>
</span><span class='line'>      proxy_set_header Host <span class="nv">$http_host</span><span class="p">;</span>
</span><span class='line'>      proxy_redirect off<span class="p">;</span>
</span><span class='line'>      proxy_pass http://app_server<span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># Rails error pages</span>
</span><span class='line'>    error_page <span class="m">500</span> <span class="m">502</span> <span class="m">503</span> <span class="m">504</span> /500.html<span class="p">;</span>
</span><span class='line'>    <span class="nv">location</span> <span class="o">=</span> /500.html <span class="o">{</span>
</span><span class='line'>      root /usr/your_app/home/system/public<span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Setup Tutorial</h1>

<h2>Download Tools</h2>

<h3>VirtualBox</h3>

<p><a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></p>

<p>please install version >= 5.x</p>

<h3>Homebrew</h3>

<p><a href="http://brew.sh/index_ja.html">http://brew.sh/index_ja.html</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>/usr/bin/ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Docker Tools</h3>

<h4>Docker</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install docker
</span></code></pre></td></tr></table></div></figure>


<h4>Docker Machine</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install docker-machine
</span></code></pre></td></tr></table></div></figure>


<h4>Docker Compose</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install docker-compose
</span></code></pre></td></tr></table></div></figure>


<h2>Download Application</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ~/path/to/workspace
</span><span class='line'><span class="nv">$ </span>git clone git@github.com:your/App.git your_app
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>your_app
</span></code></pre></td></tr></table></div></figure>


<h2>Setup Docker Machine</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker-machine create --driver virtualbox dev
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>docker-machine ls
</span><span class='line'>NAME   ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER    ERRORS
</span><span class='line'>dev    -        virtualbox   Running   tcp://192.168.99.100:2376           v1.10.0
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">eval</span> <span class="s2">&quot;$(docker-machine env dev)&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;eval &quot;$(docker-machine env dev)&quot;&#39;</span> &gt;&gt; ~/.bashrc
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker-machine start dev
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>docker-machine ip dev
</span><span class='line'>192.168.99.100
</span></code></pre></td></tr></table></div></figure>


<h2>Setup Application</h2>

<h3>Build Docker Images and Start Containers</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ~/path/to/workspace/your_app</span>
</span><span class='line'><span class="nv">$ </span>docker-compose build
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>docker-compose up
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>please open another tab</p>

<h3>Setup DB</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker-compose run web rake db:create
</span><span class='line'><span class="nv">$ </span>docker-compose run web rake db:migrate
</span></code></pre></td></tr></table></div></figure>


<h2>Access Application</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker-machine ip dev
</span><span class='line'>192.168.99.100
</span></code></pre></td></tr></table></div></figure>


<p>access to <code>192.168.99.100:3000</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Plenv で Perl を管理する]]></title>
    <link href="http://sojiro14.github.io/blog/2016/03/05/management-perl-versions-by-plenv/"/>
    <updated>2016-03-05T07:14:26+09:00</updated>
    <id>http://sojiro14.github.io/blog/2016/03/05/management-perl-versions-by-plenv</id>
    <content type="html"><![CDATA[<p>Perl をバージョンごと、あるいはプロジェクトごとに管理するためのツールである plenv の導入手順メモ</p>

<h2>plenv をインストールする</h2>

<h3>homebrew の update</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew update
</span><span class='line'>Updated Homebrew from c0fae05 to bfe20af.
</span><span class='line'>No changes to formulae.
</span></code></pre></td></tr></table></div></figure>


<p>先ほど <a href="http://blog.sojiro.me/blog/2016/03/05/management-ruby-versions-by-rbenv/">rbenv をインストールする手順</a> で同じことをやったばかりなので更新なし</p>

<h3>plenv と perl-build のインストール</h3>

<p>これも <a href="http://blog.sojiro.me/blog/2016/03/05/management-ruby-versions-by-rbenv/">どこか</a> で見たような手順</p>

<p><code>perl-build</code> は <code>plenv</code> のプラグイン</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install plenv perl-build
</span><span class='line'><span class="o">==</span>&gt; Downloading https://github.com/tokuhirom/plenv/archive/2.2.0.tar.gz
</span><span class='line'><span class="o">==</span>&gt; Downloading from https://codeload.github.com/tokuhirom/plenv/tar.gz/2.2.0
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h2>plenv init</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;eval &quot;$(plenv init -)&quot;&#39;</span> &gt;&gt; ~/.bash_profile
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bash_profile
</span></code></pre></td></tr></table></div></figure>


<p> <code>plenv init -</code> でやっていることは以下の通り</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>plenv init -
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;/Your/Home/Directory/.plenv/shims:${PATH}&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PLENV_SHELL</span><span class="o">=</span>bash
</span><span class='line'><span class="nb">source</span> <span class="s1">&#39;/usr/local/Cellar/plenv/2.2.0/libexec/../completions/plenv.bash&#39;</span>
</span><span class='line'>
</span><span class='line'>plenv<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">local command</span>
</span><span class='line'>
</span><span class='line'><span class="nb">  command</span><span class="o">=</span><span class="s2">&quot;$1&quot;</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$#&quot;</span> -gt <span class="m">0</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>    <span class="nb">shift</span>
</span><span class='line'><span class="nb">  </span><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">case</span> <span class="s2">&quot;$command&quot;</span> in
</span><span class='line'>  rehash<span class="p">|</span>shell<span class="o">)</span>
</span><span class='line'>    <span class="nb">eval</span> <span class="s2">&quot;`plenv &quot;</span>sh-<span class="nv">$command</span><span class="s2">&quot; &quot;</span><span class="nv">$@</span><span class="s2">&quot;`&quot;</span><span class="p">;;</span>
</span><span class='line'>  *<span class="o">)</span>
</span><span class='line'>    <span class="nb">command </span>plenv <span class="s2">&quot;$command&quot;</span> <span class="s2">&quot;$@&quot;</span><span class="p">;;</span>
</span><span class='line'>  <span class="k">esac</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>perl のインストール</h2>

<p>インストールできる perl のバージョンを確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>plenv install -l
</span><span class='line'>Available versions:
</span><span class='line'> 5.6.0
</span><span class='line'> 5.6.1-TRIAL1
</span><span class='line'> 5.6.1-TRIAL2
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>最新の安定版であるバージョン <code>5.22.1</code> をインストールする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>plenv install 5.22.1
</span><span class='line'>Installing 5.22.1 as 5.22.1
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>インストールされたバージョンを確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>plenv versions
</span><span class='line'>* system <span class="o">(</span><span class="nb">set </span>by /My/Home/Directory/.plenv/version<span class="o">)</span>
</span><span class='line'>  5.22.1
</span></code></pre></td></tr></table></div></figure>


<h2>使用する perl を設定</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>plenv global 5.22.1
</span><span class='line'><span class="nv">$ </span>plenv versions
</span><span class='line'>  system
</span><span class='line'>* 5.22.1 <span class="o">(</span><span class="nb">set </span>by /My/Home/Directory/.plenv/version<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>perl に cpanm をインストールする</h2>

<p>現在使用している perl に <code>cpanm</code> をインストールする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>plenv install-cpanm
</span><span class='line'>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
</span><span class='line'>                                 Dload  Upload   Total   Spent    Left  Speed
</span><span class='line'><span class="m">100</span>   <span class="m">314</span>    <span class="m">0</span>   <span class="m">314</span>    <span class="m">0</span>     <span class="m">0</span>   <span class="m">2078</span>      <span class="m">0</span> --:--:-- --:--:-- --:--:--  2079
</span><span class='line'><span class="m">100</span>  296k  <span class="m">100</span>  296k    <span class="m">0</span>     <span class="m">0</span>   367k      <span class="m">0</span> --:--:-- --:--:-- --:--:-- 2135k
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p> <code>cpanm</code> のパスが変わっていることを確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>which cpanm
</span><span class='line'>/My/Home/Directory/.plenv/shims/cpanm
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="https://github.com/tokuhirom/plenv">plenv</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rbenv で Ruby を管理する]]></title>
    <link href="http://sojiro14.github.io/blog/2016/03/05/management-ruby-versions-by-rbenv/"/>
    <updated>2016-03-05T06:22:42+09:00</updated>
    <id>http://sojiro14.github.io/blog/2016/03/05/management-ruby-versions-by-rbenv</id>
    <content type="html"><![CDATA[<p>Ruby をバージョンごと、あるいはプロジェクトごとに管理するためのツールである rbenv の導入手順メモ</p>

<h2>rbenv をインストールする</h2>

<h3>homebrew の update</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew update
</span><span class='line'>Updated Homebrew from b369c25 to c0fae05.
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h3>rbenv と ruby-build のインストール</h3>

<p> <code>rbenv</code> と同時に <code>ruby-build</code> もインストールする</p>

<p> <code>ruby-build</code> は <code>rbenv</code> のプラグインで <code>rbenv install</code> コマンドを提供する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install rbenv ruby-build
</span><span class='line'><span class="o">==</span>&gt; Installing dependencies <span class="k">for</span> rbenv: autoconf, pkg-config, openssl, ruby-build
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h2>rbenv init</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;eval &quot;$(rbenv init -)&quot;&#39;</span> &gt;&gt; ~/.bash_profile
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bash_profile
</span></code></pre></td></tr></table></div></figure>


<p> <code>rbenv init -</code> でやっていることは以下の通り</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbenv init -
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;/Your/Home/Directory/.rbenv/shims:${PATH}&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">RBENV_SHELL</span><span class="o">=</span>bash
</span><span class='line'><span class="nb">source</span> <span class="s1">&#39;/usr/local/Cellar/rbenv/1.0.0/libexec/../completions/rbenv.bash&#39;</span>
</span><span class='line'><span class="nb">command </span>rbenv rehash 2&gt;/dev/null
</span><span class='line'>rbenv<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="nb">local command</span>
</span><span class='line'><span class="nb">  command</span><span class="o">=</span><span class="s2">&quot;$1&quot;</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$#&quot;</span> -gt <span class="m">0</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>    <span class="nb">shift</span>
</span><span class='line'><span class="nb">  </span><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">case</span> <span class="s2">&quot;$command&quot;</span> in
</span><span class='line'>  rehash<span class="p">|</span>shell<span class="o">)</span>
</span><span class='line'>    <span class="nb">eval</span> <span class="s2">&quot;$(rbenv &quot;</span>sh-<span class="nv">$command</span><span class="s2">&quot; &quot;</span><span class="nv">$@</span><span class="s2">&quot;)&quot;</span><span class="p">;;</span>
</span><span class='line'>  *<span class="o">)</span>
</span><span class='line'>    <span class="nb">command </span>rbenv <span class="s2">&quot;$command&quot;</span> <span class="s2">&quot;$@&quot;</span><span class="p">;;</span>
</span><span class='line'>  <span class="k">esac</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ruby のインストール</h2>

<p>インストールできる ruby のバージョンを確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbenv install -l
</span><span class='line'>Available versions:
</span><span class='line'>  1.8.6-p383
</span><span class='line'>  1.8.6-p420
</span><span class='line'>  1.8.7-p249
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>バージョン <code>2.2.0</code> をインストールする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbenv install 2.2.0
</span><span class='line'>Downloading ruby-2.2.0.tar.bz2...
</span><span class='line'>-&gt; https://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.0.tar.bz2
</span><span class='line'>Installing ruby-2.2.0...
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>インストールされたバージョンを確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbenv versions
</span><span class='line'>* system <span class="o">(</span><span class="nb">set </span>by /My/Home/Directory/.rbenv/version<span class="o">)</span>
</span><span class='line'>  2.2.0
</span></code></pre></td></tr></table></div></figure>


<h2>使用する ruby を設定</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rbenv global 2.2.0
</span><span class='line'><span class="nv">$ </span>rbenv versions
</span><span class='line'>  system
</span><span class='line'>* 2.2.0 <span class="o">(</span><span class="nb">set </span>by /My/Home/Directory/.rbenv/version<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>ブログを管理しているディレクトリは system ruby にしておく</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>git/blog/
</span><span class='line'><span class="nv">$ </span>rbenv <span class="nb">local </span>system
</span><span class='line'><span class="nv">$ </span>rbenv versions
</span><span class='line'>* system <span class="o">(</span><span class="nb">set </span>by /My/Home/Directory/git/blog/.ruby-version<span class="o">)</span>
</span><span class='line'>  2.2.0
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span>
</span><span class='line'><span class="nv">$ </span>rbenv versions
</span><span class='line'>  system
</span><span class='line'>* 2.2.0 <span class="o">(</span><span class="nb">set </span>by /My/Home/Directory/.rbenv/version<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="https://github.com/rbenv/rbenv">rbenv</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minil を使った Changes ファイルの更新]]></title>
    <link href="http://sojiro14.github.io/blog/2016/02/21/how-to-write-changes-with-minil/"/>
    <updated>2016-02-21T01:24:33+09:00</updated>
    <id>http://sojiro14.github.io/blog/2016/02/21/how-to-write-changes-with-minil</id>
    <content type="html"><![CDATA[<p>CPAN モジュールの bug fix を行ったので修正版をリリース。</p>

<p> <code>minil</code> 様様と思いながら <code>minil release</code> コマンドを打つのだが、
いつも Changes ファイルの更新のところで、どこに何を書けば良いのだっけ？となってしまうのでここにメモしておくことにした。</p>

<h2>{{$NEXT}} の下に書く</h2>

<p>今回のリリースだとこうなった</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Revision history for Perl extension JSON-MergePatch
</span><span class='line'>
</span><span class='line'>{\{$NEXT}}
</span><span class='line'>
</span><span class='line'>    - (bug fix) diff() :when the same hash-refs are present in the hash values of source and target (thanks bessarabov)
</span><span class='line'>    - refactoring
</span><span class='line'>
</span><span class='line'>0.02 2015-09-13T09:08:20Z
</span><span class='line'>
</span><span class='line'>    - use JSON::MaybeXS and fix keys arg
</span><span class='line'>
</span><span class='line'>0.01 2015-07-02T18:29:20Z
</span><span class='line'>
</span><span class='line'>    - original version</span></code></pre></td></tr></table></div></figure>


<p> <code>{{$NEXT}}</code> となっているところにバージョンやら日付やらが入る。</p>

<h2>参照</h2>

<p><a href="http://perldoc.jp/docs/modules/Minilla-v0.6.4/lib/Minilla/Tutorial.pod#Make32a32new32build">Minilla チュートリアルドキュメント</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chef のリモート実行]]></title>
    <link href="http://sojiro14.github.io/blog/2015/11/14/the-second-step-of-chef/"/>
    <updated>2015-11-14T23:08:53+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/11/14/the-second-step-of-chef</id>
    <content type="html"><![CDATA[<p><a href="http://blog.sojiro.me/blog/2015/11/01/the-first-step-of-chef/">前回</a> 対象サーバで直接 Chef を実行してみました。</p>

<p>今回は手元からリモートのサーバに対して Chef を実行する仕組みを試してみます。</p>

<h2>knife-solo のインストール</h2>

<p>手元のクックブックをリモートのサーバに転送して <code>chef-solo</code> コマンドを実行するまでの一連の作業を実行できる <code>knife-solo</code> コマンドをインストールする</p>

<p> <code>knife-solo</code> コマンドは gem でインストールできる。手元の Mac OS でインストール</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo gem install knife-solo
</span><span class='line'>...
</span><span class='line'>Thanks <span class="k">for</span> installing knife-solo!
</span><span class='line'>...
</span><span class='line'><span class="m">36</span> gems installed
</span></code></pre></td></tr></table></div></figure>


<h2>Berkshelf のインストール</h2>

<p>クックブックの依存関係を管理する <code>Berkshelf</code> というツールもこのタイミングでインストールする。これは <code>knife-solo</code> が他の gem のインストール状況によってデフォルトのオプションが変わるため</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo gem install berkshelf
</span><span class='line'>...
</span><span class='line'><span class="m">25</span> gems installed
</span></code></pre></td></tr></table></div></figure>


<h2>ローカルにリポジトリを作る</h2>

<p>まずはローカルにリポジトリを作る</p>

<p>Vagrantfile があるディレクトリで以下のコマンドを実行して作成する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>knife solo init .
</span><span class='line'>/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/specification.rb:2007:in <span class="sb">`</span>raise_if_conflicts<span class="err">&#39;</span>: Unable to activate rspec-3.0.0, because rspec-core-3.4.0 conflicts with rspec-core <span class="o">(</span>~&gt; 3.0.0<span class="o">)</span>, rspec-expectations-3.4.0 conflicts with rspec-expectations <span class="o">(</span>~&gt; 3.0.0<span class="o">)</span>, rspec-mocks-3.4.0 conflicts with rspec-mocks <span class="o">(</span>~&gt; 3.0.0<span class="o">)</span> <span class="o">(</span>Gem::LoadError<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>エラーが発生した</p>

<p>rspec と rspec-core のバージョンが合っていなかったので rspec を update する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo gem update rspec
</span><span class='line'>...
</span><span class='line'>Gems updated: rspec rspec-collection_matchers
</span></code></pre></td></tr></table></div></figure>


<p>再度リポジトリの作成を実行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>knife solo init .
</span><span class='line'>WARNING: No knife configuration file found
</span><span class='line'>Creating kitchen...
</span><span class='line'>Creating knife.rb in kitchen...
</span><span class='line'>Creating cupboards...
</span><span class='line'>Setting up Berkshelf...
</span></code></pre></td></tr></table></div></figure>


<p>これで実行ディレクトリ内に様々な雛形ディレクトリ、ファイルが作成された</p>

<h2>リモートのサーバに Chef Solo をインストールする</h2>

<p>今回リモートサーバとして想定する Vagrant の環境に対して SSH の設定を以下のようにしておく</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant ssh-config --host testhost &gt;&gt; ~/.ssh/config
</span></code></pre></td></tr></table></div></figure>


<p>以下のコマンドで Chef Solo をリモートサーバに対してインストール</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>knife solo bootstrap testhost
</span><span class='line'>Bootstrapping Chef...
</span><span class='line'>...
</span><span class='line'>Thank you <span class="k">for</span> installing Chef!
</span><span class='line'>...
</span><span class='line'>Chef Client finished, 0/0 resources updated in <span class="m">06</span> seconds
</span></code></pre></td></tr></table></div></figure>


<p>今回は前回 Chef Solo をインストールした環境に対して打ったので最終的な結果は <code>0/0 resources updated</code> になっている</p>

<h2>クックブックの作成</h2>

<p>ローカルにクックブックを作成する。今回は git をインストールするためのクックブックを作る</p>

<p>自作のクックブックは site-cookbooks 以下に置くことが慣例になっているので出力先に site-cookbooks を指定している</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>knife cookbook create git -o site-cookbooks
</span></code></pre></td></tr></table></div></figure>


<p>これで site-cookbooks 以下に git クックブックの雛形が出来上がる</p>

<h2>レシピの編集</h2>

<p>レシピの雛形 <code>site-cookbooks/git/recipes/default.rb</code> を編集していく</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim site-cookbooks/git/recipes/default.rb
</span><span class='line'><span class="nv">$ </span>cat site-cookbooks/git/recipes/default.rb
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Cookbook Name:: git</span>
</span><span class='line'><span class="c"># Recipe:: default</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Copyright 2015, YOUR_COMPANY_NAME</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># All rights reserved - Do Not Redistribute</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'>package <span class="s2">&quot;git&quot;</span> <span class="k">do</span>
</span><span class='line'>    action :install
</span><span class='line'>end
</span></code></pre></td></tr></table></div></figure>


<h2>Node オブジェクトの編集</h2>

<p>Chef で管理する Node （サーバ）の状態を記述し、それぞれの Node に対してどのクックブックが適用されるかを設定する Node オブジェクトを編集する</p>

<p>Node オブジェクトは <code>knife solo bootstrap testhost</code> 実行時に <code>nodes/testhost.json</code> として作成されている</p>

<p>今回はここに先ほど作成した git クックブックの適用を記述する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim nodes/testhost.json
</span><span class='line'><span class="nv">$ </span>cat nodes/testhost.json
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;run_list&quot;</span>: <span class="o">[</span>
</span><span class='line'>    <span class="s2">&quot;recipe[git]&quot;</span>
</span><span class='line'>  <span class="o">]</span>,
</span><span class='line'>  <span class="s2">&quot;automatic&quot;</span>: <span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;ipaddress&quot;</span>: <span class="s2">&quot;testhost&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>クックブックの実行</h2>

<p>準備が整ったのでいよいよクックブックをリモートサーバに対して実行する</p>

<p>以下のコマンドで実行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>knife solo cook testhost
</span><span class='line'>Running Chef on testhost...
</span><span class='line'>...
</span><span class='line'>Chef Client finished, 0/1 resources updated in <span class="m">07</span> seconds
</span></code></pre></td></tr></table></div></figure>


<p>これも同じく前回の環境ですでに git をインストール済みなので <code>0/1 resources updated</code> として正常に実行された</p>

<p>これでリモートへの Chef 実行完了！</p>

<h2>参照</h2>

<ul>
<li><a href="http://www.amazon.co.jp/gp/product/477416500X/ref=as_li_tf_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=477416500X&amp;linkCode=as2&amp;tag=sojiro14-22">Chef 実践入門</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初めてのChef]]></title>
    <link href="http://sojiro14.github.io/blog/2015/11/01/the-first-step-of-chef/"/>
    <updated>2015-11-01T02:17:51+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/11/01/the-first-step-of-chef</id>
    <content type="html"><![CDATA[<p>Chef を使ってみます。
Vagrant で環境をつくっておいてそこで色々試してみます。</p>

<p>今回はゲスト側でクックブック、レシピを作って実行してみます。</p>

<h2>Chef のインストール</h2>

<p> <code>vagrant ssh</code> で Vagrant の環境に入って Chef をインストールする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -L https://www.opscode.com/chef/install.sh <span class="p">|</span> sudo bash
</span><span class='line'>...
</span><span class='line'>Thank you <span class="k">for</span> installing Chef!
</span></code></pre></td></tr></table></div></figure>


<p>Chef Solo がインストールされているか確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chef-solo -v
</span><span class='line'>Chef: 12.5.1
</span></code></pre></td></tr></table></div></figure>


<h2>クックブックを作る</h2>

<p>Chef をインストールすると <code>knife</code> というコマンドもインストールされる。
この <code>knife</code> コマンドを使ってクックブックを作る</p>

<p>今回は git をインストールするための git クックブックを作る</p>

<p>コマンドは以下のように指定する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>knife cookbooks create <span class="o">[</span>クックブック名<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>今回は出力先を指定する <code>-o</code> オプションを指定</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo knife cookbook create git -o /var/chef/cookbooks
</span></code></pre></td></tr></table></div></figure>


<p>このコマンドで git という名前のクックブックが作成され、 <code>/var/chef/cookbooks/git/recipes/default.rb</code> にレシピの雛形が作られる</p>

<h2>レシピの編集</h2>

<p>レシピの雛形に git をインストールするレシピを書く</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo vi /var/chef/cookbooks/git/recipes/default.rb
</span><span class='line'><span class="nv">$ </span>cat /var/chef/cookbooks/git/recipes/default.rb
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Cookbook Name:: git</span>
</span><span class='line'><span class="c"># Recipe:: default</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Copyright 2015, YOUR_COMPANY_NAME</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># All rights reserved - Do Not Redistribute</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'>
</span><span class='line'>package <span class="s2">&quot;git&quot;</span> <span class="k">do</span>
</span><span class='line'>  action :install
</span><span class='line'>end
</span></code></pre></td></tr></table></div></figure>


<h2>クックブックの実行</h2>

<p>作成したクックブックを実行する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo chef-solo -o git
</span><span class='line'>...
</span><span class='line'>Compiling Cookbooks...
</span><span class='line'>Converging <span class="m">1</span> resources
</span><span class='line'>Recipe: git::default
</span><span class='line'>  * yum_package<span class="o">[</span>git<span class="o">]</span> action install
</span><span class='line'>    - install version 1.7.1-3.el6_4.1 of package git
</span><span class='line'>
</span><span class='line'>Running handlers:
</span><span class='line'>Running handlers <span class="nb">complete</span>
</span><span class='line'>Chef Client finished, 1/1 resources updated in <span class="m">38</span> seconds
</span></code></pre></td></tr></table></div></figure>


<p>git がインストールされたか確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git --version
</span><span class='line'>git version 1.7.1
</span></code></pre></td></tr></table></div></figure>


<h2>Chef の特徴</h2>

<h3>OS の違いを吸収してくれる</h3>

<p>上記 git の例ではこちらで指定していないにも関わらず、実行した環境が CentOS であることを解釈して yum パッケージでインストールが行われた</p>

<p>実行された環境の OS 毎の違いを吸収してくれる</p>

<h3>冪等性が担保されている</h3>

<p>先ほどのクックブックをもう一度実行してみる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo chef-solo -o git
</span><span class='line'>...
</span><span class='line'>Chef Client finished, 0/1 resources updated in <span class="m">07</span> seconds
</span></code></pre></td></tr></table></div></figure>


<p>今回は何もせずに正常に終了したことが分かる</p>

<p>Chef ではクックブックを何度実行しても、クックブックに規定された状態になる冪等性が担保されている</p>

<h2>参照</h2>

<ul>
<li><a href="http://www.amazon.co.jp/gp/product/477416500X/ref=as_li_tf_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=477416500X&amp;linkCode=as2&amp;tag=sojiro14-22">Chef 実践入門</a></li>
</ul>


<p>余談: Chef に関する記事は web 上にも色々ありますが、 Chef は用途によって様々なツール、使い方があり、基本的な用語や概念などを理解できていないと思わぬところでハマってしまいがちです。 <a href="http://www.amazon.co.jp/gp/product/477416500X/ref=as_li_tf_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=477416500X&amp;linkCode=as2&amp;tag=sojiro14-22">Chef 実践入門</a> は Chef に関して体系的に理解できるので最初にサラッと読んでしまうのが近道だと感じました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[InnoDBにおけるSQL別ロックの挙動]]></title>
    <link href="http://sojiro14.github.io/blog/2015/10/27/how-locks-behave-by-sqls-on-innodb/"/>
    <updated>2015-10-27T21:17:32+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/10/27/how-locks-behave-by-sqls-on-innodb</id>
    <content type="html"><![CDATA[<p>研修時代に書いた InnoDB に関するメモ第二弾。</p>

<p>ロックの挙動に関しては基礎の基礎でちょっと考えれば分かるものの、開発しているとふとしたところで考慮が漏れていたりするので注意したい。</p>

<h2>SELECT &hellip; FROM</h2>

<p>一貫性読み取りであり、データベースのスナップショットを読み取り、トランザクションの遮断レベルが SERIALIZABLE に設定されなければロックは設定しません。SERIALIZABLE レベルの場合、検索時に直面したインデックスレコード上に共有ネクストキーロックが設定されます。</p>

<h2>SELECT &hellip; FROM &hellip; LOCK IN SHARE MODE</h2>

<p><em>検索時に直面したすべてのインデックスレコード上</em>に <strong>共有ネクストキーロック</strong> が設定されます。</p>

<h2>SELECT &hellip; FROM &hellip; FOR UPDATE</h2>

<p><em>検索で特定されたインデックスレコード</em>に対し、 <strong>排他ネクストキーロック</strong> が設定され、ほかのセッションが SELECT &hellip; FROM &hellip; LOCK IN SHARE MODE を実行したり、特定のトランザクション遮断レベルで読み取りを行ったりできないようにします。 <strong>ただし、ギャップロックの部分に関しては共有ロックとなります</strong> 。</p>

<h2>UPDATE &hellip; WHERE &hellip;</h2>

<p><em>検索が直面するすべてのレコード上</em>に <strong>排他ネクストキーロック</strong> を設定します。</p>

<h2>DELETE FROM &hellip; WHERE &hellip;</h2>

<p><em>検索が直面するすべてのレコード上</em>に <strong>排他ネクストキーロック</strong> を設定します。</p>

<h2>INSERT</h2>

<p><strong>挿入される行に排他ロック</strong> を設定します。このロックはネクストキーロックではなくインデックスレコードロックである (つまりギャップロックが存在しない) ため、ほかのセッションは挿入行の前にあるギャップへの挿入を自由に行えます。</p>

<h2>参照</h2>

<ul>
<li><a href="http://www.amazon.co.jp/gp/product/4873116384/ref=as_li_tf_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=4873116384&amp;linkCode=as2&amp;tag=sojiro14-22">実践ハイパフォーマンスMySQL 第3版</a></li>
<li><a href="ftp://ftp.ntu.edu.tw/MySQL/doc/refman/5.1-olh/ja/innodb-locks-set.html">ftp://ftp.ntu.edu.tw/MySQL/doc/refman/5.1-olh/ja/innodb-locks-set.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[InnoDBにおけるロックの種類]]></title>
    <link href="http://sojiro14.github.io/blog/2015/10/25/kinds-of-locks-of-innodb/"/>
    <updated>2015-10-25T23:02:53+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/10/25/kinds-of-locks-of-innodb</id>
    <content type="html"><![CDATA[<p>MySQL でよく使う InnoDB のロックについて研修時代に書いたメモ。</p>

<h2>種類</h2>

<ul>
<li>レコードロック: <strong>インデックスレコードの</strong> ロック</li>
<li>ギャップロック: インデックスレコード間にあるギャップのロック、先頭のインデックスレコードの前や末尾のインデックスレコードの後にあるギャップのロック、のいずれか</li>
<li>ネクストキーロック: インデックスレコードに対するレコードロックと、そのインデックスレコードの前、または後ろにあるギャップに対するギャップロックとを組み合わせたもの</li>
</ul>


<h2>InnoDBの行ロック（レコードロック）</h2>

<p>InnoDBは行ロックができる、とよく言いますが、
正確には <strong>インデックスレコード</strong> にロックをかけているので、
primary key や、unique key といったレコードを一意に特定できるインデックスを使用せずにロックをかけるとテーブルロックの様な挙動を示します。（実際には隠しクラスタインデックスが生成、使用される。）</p>

<h2>ギャップロック、ネクストキーロック</h2>

<p>ギャップロック、ネクストキーロックは</p>

<ul>
<li>範囲を指定して（複数のレコードにまたがって）ロックを獲得しようとしたとき</li>
<li>存在しないレコードに対してロックを獲得しようとしたとき</li>
</ul>


<p>のみ起こりうる。</p>

<p>また、 <strong>ギャップロックは常に共有ロックと同じ挙動</strong> を示す</p>

<h2>例</h2>

<p>前提：id(primary key)が10, 20, 30のレコードが入っているテーブル</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">from</span> <span class="k">table</span> <span class="k">where</span> <span class="n">id</span> <span class="o">=</span> <span class="mi">15</span> <span class="k">for</span> <span class="k">update</span><span class="p">;</span>    <span class="o">#</span><span class="n">id</span> <span class="mi">11</span><span class="o">~</span><span class="mi">19</span><span class="err">にギャップロック</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">from</span> <span class="k">table</span> <span class="k">where</span> <span class="n">id</span> <span class="o">&lt;</span> <span class="mi">15</span> <span class="k">for</span> <span class="k">update</span><span class="p">;</span>    <span class="o">#</span><span class="n">id</span> <span class="o">~</span><span class="mi">20</span><span class="err">にネクストキーロック</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">from</span> <span class="k">table</span> <span class="k">where</span> <span class="n">id</span> <span class="o">&lt;</span> <span class="mi">20</span> <span class="k">for</span> <span class="k">update</span><span class="p">;</span>    <span class="o">#</span><span class="n">id</span> <span class="o">~</span><span class="mi">20</span><span class="err">にネクストキーロック</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">from</span> <span class="k">table</span> <span class="k">where</span> <span class="n">id</span> <span class="o">&lt;=</span> <span class="mi">20</span> <span class="k">for</span> <span class="k">update</span><span class="p">;</span>   <span class="o">#</span><span class="n">id</span> <span class="o">~</span><span class="mi">30</span><span class="err">にネクストキーロック</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">from</span> <span class="k">table</span> <span class="k">where</span> <span class="n">id</span> <span class="o">&gt;</span> <span class="mi">15</span> <span class="k">for</span> <span class="k">update</span><span class="p">;</span>    <span class="o">#</span><span class="n">id</span> <span class="mi">11</span><span class="o">~</span><span class="err">にギャップロック</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="k">from</span> <span class="k">table</span> <span class="k">where</span> <span class="n">id</span> <span class="o">=</span> <span class="mi">35</span> <span class="k">for</span> <span class="k">update</span><span class="p">;</span>    <span class="o">#</span><span class="n">id</span> <span class="mi">31</span><span class="o">~</span><span class="err">にギャップロック</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<p><a href="http://www.amazon.co.jp/gp/product/4873116384/ref=as_li_tf_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=4873116384&amp;linkCode=as2&amp;tag=sojiro14-22">実践ハイパフォーマンスMySQL 第3版</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails アプリを MySQL で作るときのメモ]]></title>
    <link href="http://sojiro14.github.io/blog/2015/09/21/rails-new-with-mysql/"/>
    <updated>2015-09-21T22:34:43+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/09/21/rails-new-with-mysql</id>
    <content type="html"><![CDATA[<p>Rails 4.0.5 のアプリを MySQL で立てるときのメモ</p>

<h3>rails new にオプションをつける</h3>

<p>オプションを付けずに <code>rails new</code> すると SQLite で立てられてしまうので、以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails new app_name -d mysql
</span></code></pre></td></tr></table></div></figure>


<h3>mysql2 のバージョンを指定</h3>

<p>2015/09/21 時点の mysql2 は rails 上での実行時にバグを含んでいるようなのでバージョン指定する。</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;mysql2&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.3.20&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle install
</span></code></pre></td></tr></table></div></figure>


<h3>mysql のパスワード設定</h3>

<p> <code>config/database.yml</code> に mysql のパスワードを設定する。環境変数の指定は以下のようにする。</p>

<figure class='code'><figcaption><span>config/database.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">development</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">adapter</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">mysql2</span>
</span><span class='line'>  <span class="l-Scalar-Plain">encoding</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">utf8</span>
</span><span class='line'>  <span class="l-Scalar-Plain">database</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">app_name_development</span>
</span><span class='line'>  <span class="l-Scalar-Plain">pool</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">5</span>
</span><span class='line'>  <span class="l-Scalar-Plain">username</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">root</span>
</span><span class='line'>  <span class="l-Scalar-Plain">password</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;%= ENV[&#39;MYSQLPASS&#39;] %&gt;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">socket</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">/var/lib/mysql/mysql.sock</span>
</span></code></pre></td></tr></table></div></figure>


<h3>database の作成</h3>

<p>最後に database を作って完了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake db:create
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="http://qiita.com/shizuma/items/0f9660d5d46a0012eb9e">Rails mysql2でrake db:createがエラー問題</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant Provisioning の謎]]></title>
    <link href="http://sojiro14.github.io/blog/2015/09/17/mystery-of-vagrant-provisioning/"/>
    <updated>2015-09-17T05:21:08+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/09/17/mystery-of-vagrant-provisioning</id>
    <content type="html"><![CDATA[<p>Vagrant で立てた CentOS の仮想環境にちょっとした環境構築をしようと、provision ファイルを作って <code>vagrant provision</code> で実行しようとしたところ RVM のインストールから先が上手くいかなかった。</p>

<p>（ <code>vagrant provision</code> に関しては <a href="http://blog.sojiro.me/blog/2015/05/03/the-first-step-for-vagrant/">過去のエントリ</a> に記載があります）</p>

<p>provision ファイルの該当箇所は以下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># ruby and rails</span>
</span><span class='line'>curl -L https://get.rvm.io <span class="p">|</span> bash -s
</span><span class='line'><span class="nb">source</span> ~/.profile
</span><span class='line'>
</span><span class='line'>rvm requirements
</span><span class='line'>rvm install 2.0.0 --with-openssl-dir<span class="o">=</span><span class="nv">$HOME</span>/.rvm/usr
</span></code></pre></td></tr></table></div></figure>


<p>上記コマンドのうち、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -L https://get.rvm.io <span class="p">|</span> bash -s
</span></code></pre></td></tr></table></div></figure>


<p>だけが実行できているが、このコマンドの結果も意図したものとなっていない。
それ以降のコマンドは失敗する。</p>

<p>まだ原因は良くわかっていない。</p>

<ul>
<li>RVM のインストール自体はできている</li>
<li>どのユーザー（vagrant? root?）で実行されているのか分からない</li>
<li>vagrant ユーザーに対しては <code>rvm</code> コマンドの path が通っているが、root ユーザーには通っていない</li>
<li>provision 実行のログ的には root で実行しているように見える</li>
<li><code>vagrant ssh</code> して手動でコマンドを実行すると意図した結果になる</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sed コマンドで置換]]></title>
    <link href="http://sojiro14.github.io/blog/2015/09/15/note-of-sed-command/"/>
    <updated>2015-09-15T01:58:45+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/09/15/note-of-sed-command</id>
    <content type="html"><![CDATA[<p>ファイルの中身を置換する必要があったので <code>sed</code> コマンドを使った。</p>

<h3>使うオプション</h3>

<p>今回使うのは</p>

<ul>
<li>変換処理の条件式を指定するための <code>e</code> オプション</li>
<li>変換してそのままファイルを上書きする <code>i</code> オプション</li>
</ul>


<h3>やってみる</h3>

<p>今回はこんな感じ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sed -ie <span class="s1">&#39;条件式&#39;</span> ファイル名
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat <span class="nb">test</span>
</span><span class='line'>testtesttest
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sed -ie <span class="s1">&#39;s/test/hoge/g&#39;</span> <span class="nb">test</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cat <span class="nb">test</span>
</span><span class='line'>hogehogehoge
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>ls
</span><span class='line'><span class="nb">test </span>teste
</span></code></pre></td></tr></table></div></figure>


<p>指定したファイルは条件に沿って置換されているが、オリジナルの内容を持ったファイルも生成されている</p>

<p>オリジナルの内容を持ったファイルは使う sed コマンド（OS）によって元のファイル名に &lsquo;e&rsquo; が付いたり &lsquo;-e&rsquo; が付いたりする</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find コマンドの使い方]]></title>
    <link href="http://sojiro14.github.io/blog/2015/08/14/how-to-use-find-command/"/>
    <updated>2015-08-14T09:37:49+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/08/14/how-to-use-find-command</id>
    <content type="html"><![CDATA[<p>いつまでも <code>find</code> コマンドの使い方を覚えられないアホなのでメモしておく。。。</p>

<h3>基本的に</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find <span class="o">[</span>探すディレクトリ<span class="o">]</span> -name <span class="s1">&#39;ファイルの条件&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これだけは覚えとけ、と。</p>

<h3>たまには</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find . -name <span class="s1">&#39;*.swp&#39;</span> -ok rm <span class="o">{}</span> <span class="se">\;</span>
</span></code></pre></td></tr></table></div></figure>


<p>見つけたファイルをそのまま次のコマンドに受け渡す <code>-ok</code> オプションもたまには使えるかも知れない。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CPAN モジュールのリリース]]></title>
    <link href="http://sojiro14.github.io/blog/2015/07/06/release-cpan-module/"/>
    <updated>2015-07-06T02:19:14+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/07/06/release-cpan-module</id>
    <content type="html"><![CDATA[<p>上司にお膳立てされ、後輩にお尻を叩かれ、やっとのことで CPAN モジュールをリリースしました。</p>

<p>前回のエントリに続き、リリースの手順を記します。</p>

<h2>モジュールの作成</h2>

<p>ここがコアの部分ですが、内容は作るモジュールに依るので割愛。編集すべきは以下のファイルです。</p>

<ul>
<li>lib/ 配下のプログラム</li>
<li>t/ 配下のテストプラグラム</li>
<li>cpanfile</li>
</ul>


<p>cpanfile の作成は <code>scan-prereqs-cpanfile</code> を使うと便利です。</p>

<p>このコマンドは <strong>App::scan_prereqs_cpanfile</strong> モジュールで提供されています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cpanm App::scan_prereqs_cpanfile
</span><span class='line'>scan-prereqs-cpanfile &gt; cpanfile
</span></code></pre></td></tr></table></div></figure>


<h2>テスト</h2>

<p>モジュールの作成ができたら test を実行しますが、このとき <code>minil test</code> コマンドを使うと Changes や META.json、README.md が自動で編集されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>minil <span class="nb">test</span>
</span><span class='line'>Creating working directory: /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7
</span><span class='line'>cp Build.PL /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7/Build.PL
</span><span class='line'>cp Changes /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7/Changes
</span><span class='line'>cp LICENSE /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7/LICENSE
</span><span class='line'>cp META.json /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7/META.json
</span><span class='line'>cp README.md /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7/README.md
</span><span class='line'>cp cpanfile /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7/cpanfile
</span><span class='line'>cp lib/JSON/MergePatch.pm /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7/lib/JSON/MergePatch.pm
</span><span class='line'>cp minil.toml /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7/minil.toml
</span><span class='line'>cp t/00_compile.t /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7/t/00_compile.t
</span><span class='line'>Building /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7
</span><span class='line'>Retrieving meta data from lib/JSON/MergePatch.pm.
</span><span class='line'>Name: JSON::MergePatch
</span><span class='line'>Abstract: It<span class="s1">&#39;s new $module</span>
</span><span class='line'><span class="s1">Version: 0.01</span>
</span><span class='line'><span class="s1">fatal: bad default revision &#39;</span>HEAD<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">Writing MANIFEST file</span>
</span><span class='line'><span class="s1">Writing release tests: xt/minilla/minimum_version.t</span>
</span><span class='line'><span class="s1">Writing release tests: xt/minilla/cpan_meta.t</span>
</span><span class='line'><span class="s1">Writing release tests: xt/minilla/pod.t</span>
</span><span class='line'><span class="s1">Writing release tests: xt/minilla/spelling.t</span>
</span><span class='line'><span class="s1">Writing release tests: xt/minilla/permissions.t</span>
</span><span class='line'><span class="s1">[5DuYQ9x7] $ perl -I. Build.PL</span>
</span><span class='line'><span class="s1">Creating new &#39;</span>Build<span class="s1">&#39; script for &#39;</span>JSON-MergePatch<span class="s1">&#39; version &#39;</span>0.01<span class="err">&#39;</span>
</span><span class='line'><span class="o">[</span>5DuYQ9x7<span class="o">]</span> <span class="nv">$ </span>perl -I. Build build
</span><span class='line'>cp lib/JSON/MergePatch.pm blib/lib/JSON/MergePatch.pm
</span><span class='line'>t/00_compile.t .. ok
</span><span class='line'>All tests successful.
</span><span class='line'><span class="nv">Files</span><span class="o">=</span>1, <span class="nv">Tests</span><span class="o">=</span>1,  <span class="m">0</span> wallclock secs <span class="o">(</span> 0.01 usr  0.01 sys +  0.03 cusr  0.01 <span class="nv">csys</span> <span class="o">=</span>  0.06 CPU<span class="o">)</span>
</span><span class='line'>Result: PASS
</span><span class='line'>Removing /user/home_directory/git/cpan/JSON-MergePatch/.build/5DuYQ9x7
</span></code></pre></td></tr></table></div></figure>


<h2>リリース</h2>

<p>テストが通ったらいよいよリリースします。</p>

<p>CPAN へのリリースには PAUSE ID が必要です。取得方法は<a href="http://blog.sojiro.me/blog/2015/05/17/get-pause-id/">こちら</a>。</p>

<p>リリースには <code>minil release</code> コマンドを使います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>minil release
</span><span class='line'>
</span><span class='line'>Release engineering requires Version::Next, but it is not available. Please install Version::Next using your preferred CPAN client at ...
</span></code></pre></td></tr></table></div></figure>


<p> <strong>Version::Next</strong> がないと怒られたので入れて再度実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cpanm Version::Next
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>minil release
</span><span class='line'>
</span><span class='line'>Release engineering requires CPAN::Uploader, but it is not available. Please install CPAN::Uploader using your preferred CPAN client at ...
</span></code></pre></td></tr></table></div></figure>


<p>今度は <strong>CPAN::Uploader</strong> がないと怒られたので入れて再度実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cpanm CPAN::Uploader
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>minil release
</span><span class='line'>
</span><span class='line'>Retrieving meta data from lib/JSON/MergePatch.pm.
</span><span class='line'>Name: JSON::MergePatch
</span><span class='line'>Abstract: JSON Merge Patch implementation
</span><span class='line'>Version: 0.01
</span><span class='line'>Next Release? <span class="o">[</span>0.01<span class="o">]</span>
</span><span class='line'>Name: JSON::MergePatch
</span><span class='line'>Abstract: JSON Merge Patch implementation
</span><span class='line'>Version: 0.01
</span><span class='line'>...
</span><span class='line'>All tests successful.
</span><span class='line'><span class="nv">Files</span><span class="o">=</span>8, <span class="nv">Tests</span><span class="o">=</span>67,  <span class="m">0</span> wallclock secs <span class="o">(</span> 0.04 usr  0.03 sys +  0.18 cusr  0.04 <span class="nv">csys</span> <span class="o">=</span>  0.29 CPU<span class="o">)</span>
</span><span class='line'>Result: PASS
</span><span class='line'>Wrote JSON-MergePatch-0.01.tar.gz
</span><span class='line'>Upload to CPAN
</span><span class='line'>Release to CPAN ? <span class="o">[</span>y/n<span class="o">]</span>   y
</span><span class='line'>missing user argument at
</span></code></pre></td></tr></table></div></figure>


<p>リリースバージョンの確認と、 CPAN にリリースするかの確認に答えていざリリース、と思いきや</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>missing user argument at
</span></code></pre></td></tr></table></div></figure>


<p>と怒られました。</p>

<p>どうやら <code>~/.pause</code> ファイルに PAUSE のユーザー情報を記載する必要があるようです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim ~/.pause
</span><span class='line'><span class="nv">$ </span>cat ~/.pause
</span><span class='line'>user SOJIRO
</span><span class='line'>password your_password
</span></code></pre></td></tr></table></div></figure>


<p>再度実行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>minil release
</span><span class='line'>
</span><span class='line'>Retrieving meta data from lib/JSON/MergePatch.pm.
</span><span class='line'>Name: JSON::MergePatch
</span><span class='line'>Abstract: JSON Merge Patch implementation
</span><span class='line'>Version: 0.01
</span><span class='line'>Next Release? <span class="o">[</span>0.01<span class="o">]</span>
</span><span class='line'>Name: JSON::MergePatch
</span><span class='line'>Abstract: JSON Merge Patch implementation
</span><span class='line'>Version: 0.01
</span><span class='line'>...
</span><span class='line'>All tests successful.
</span><span class='line'><span class="nv">Files</span><span class="o">=</span>8, <span class="nv">Tests</span><span class="o">=</span>67,  <span class="m">0</span> wallclock secs <span class="o">(</span> 0.04 usr  0.03 sys +  0.18 cusr  0.05 <span class="nv">csys</span> <span class="o">=</span>  0.30 CPU<span class="o">)</span>
</span><span class='line'>Result: PASS
</span><span class='line'>Wrote JSON-MergePatch-0.01.tar.gz
</span><span class='line'>Upload to CPAN
</span><span class='line'>Release to CPAN ? <span class="o">[</span>y/n<span class="o">]</span>   y
</span><span class='line'>registering upload with PAUSE web server
</span><span class='line'>POSTing upload <span class="k">for</span> /user/home_directory/git/cpan/JSON-MergePatch/.build/ilpDOKuE/JSON-MergePatch-0.01.tar.gz to https://pause.perl.org/pause/authenquery
</span><span class='line'>PAUSE add message sent ok <span class="o">[</span>200<span class="o">]</span>
</span><span class='line'>Name: JSON::MergePatch
</span><span class='line'>Abstract: JSON Merge Patch implementation
</span><span class='line'>Version: 0.01
</span><span class='line'><span class="o">[</span>JSON-MergePatch<span class="o">]</span> <span class="nv">$ </span>git commit -a -m Checking in changes prior to tagging of version 0.01.
</span><span class='line'>Changelog diff is:
</span><span class='line'>diff --git a/Changes b/Changes
</span><span class='line'>index 643c7bc..dae7daa 100644
</span><span class='line'>--- a/Changes
</span><span class='line'>+++ b/Changes
</span><span class='line'>@@ -2,5 +2,7 @@ Revision <span class="nb">history </span><span class="k">for</span> Perl extension JSON-MergePatch
</span><span class='line'>
</span><span class='line'> <span class="o"></span>
</span><span class='line'>
</span><span class='line'>+0.01 2015-07-02T18:29:20Z
</span><span class='line'>+
</span><span class='line'>     - original version
</span><span class='line'>
</span><span class='line'><span class="o">[</span>master 3bf0db2<span class="o">]</span> Checking in changes prior to tagging of version 0.01.
</span><span class='line'>
</span><span class='line'> <span class="m">2</span> files changed, <span class="m">17</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">1</span> deletion<span class="o">(</span>-<span class="o">)</span>
</span><span class='line'>Pushing to origin
</span><span class='line'><span class="o">[</span>JSON-MergePatch<span class="o">]</span> <span class="nv">$ </span>git push origin master
</span><span class='line'>Counting objects: 7, <span class="k">done</span>.
</span><span class='line'>Delta compression using up to <span class="m">8</span> threads.
</span><span class='line'>Compressing objects: 100% <span class="o">(</span>4/4<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>Writing objects: 100% <span class="o">(</span>4/4<span class="o">)</span>, <span class="m">831</span> bytes <span class="p">|</span> <span class="m">0</span> bytes/s, <span class="k">done</span>.
</span><span class='line'>Total <span class="m">4</span> <span class="o">(</span>delta 2<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>
</span><span class='line'>To git@github.com:sojiro14/JSON-MergePatch.git
</span><span class='line'>
</span><span class='line'>   9c8c207..3bf0db2  master -&gt; master
</span><span class='line'>
</span><span class='line'><span class="o">[</span>JSON-MergePatch<span class="o">]</span> <span class="nv">$ </span>git tag 0.01
</span><span class='line'><span class="o">[</span>JSON-MergePatch<span class="o">]</span> <span class="nv">$ </span>git push origin tag 0.01
</span><span class='line'>Total <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>
</span><span class='line'>To git@github.com:sojiro14/JSON-MergePatch.git
</span><span class='line'>
</span><span class='line'> * <span class="o">[</span>new tag<span class="o">]</span>         0.01 -&gt; 0.01
</span><span class='line'>
</span><span class='line'>Removing /user/home_directory/git/cpan/JSON-MergePatch/.build/ilpDOKuE
</span></code></pre></td></tr></table></div></figure>


<p>テストが実行された後、CPAN にリリースされました。最後にその時点の tag が切られて完了。</p>

<p>ついに CPAN モジュールをリリースしてしまいました。メンテナンスちゃんとしなくては。</p>

<h2>参照</h2>

<ul>
<li><a href="http://blog.64p.org/entry/2013/05/14/080423">Minilla を用いた Perl モジュールの作り方</a></li>
<li><a href="http://hotolab.net/blog/first_minil/">はじめてのCPAN Authorになろうとして困ったメモ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CPAN モジュールのための雛形を作る]]></title>
    <link href="http://sojiro14.github.io/blog/2015/07/02/create-basic-model-for-cpan-module/"/>
    <updated>2015-07-02T00:13:24+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/07/02/create-basic-model-for-cpan-module</id>
    <content type="html"><![CDATA[<p>いよいよ CPAN モジュールを作ろうと思います。</p>

<p>しかし既存の CPAN モジュールを見てみると本体のプログラムの他に見慣れないファイルがちらほら。。。</p>

<p>正直どんなファイル群で CPAN モジュールを構成すれば良いのか分かっていないわけです。</p>

<p>そんな悩みを解決してくれたのが <strong>Minilla</strong> モジュールです。</p>

<h2>Minilla のインストール</h2>

<p> <strong>Minilla</strong> は CPAN モジュールなので <code>cpanm</code> コマンドでインストールできます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cpanm Minilla
</span><span class='line'>--&gt; Working on Minilla
</span><span class='line'>Fetching http://cpan.metacpan.org/authors/id/T/TO/TOKUHIROM/Minilla-v2.4.1.tar.gz ... OK
</span><span class='line'>Configuring Minilla-v2.4.1 ... OK
</span><span class='line'>...
</span><span class='line'>Building and testing Minilla-v2.4.1 ... OK
</span><span class='line'>Successfully installed Minilla-v2.4.1
</span><span class='line'><span class="m">11</span> distributions installed
</span></code></pre></td></tr></table></div></figure>


<h2>雛形の作成</h2>

<p> <strong>Minilla</strong> がインストールできたら早速 CPAN モジュールの雛形を作ります。 <code>minil new Your::Module</code> で作成できます。</p>

<p>今回は <strong>JSON::MergePatch</strong> というモジュールを作ります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$cd</span> ~/git/cpan
</span><span class='line'><span class="nv">$ </span>minil new JSON::MergePatch
</span><span class='line'>Writing lib/JSON/MergePatch.pm
</span><span class='line'>Writing Changes
</span><span class='line'>Writing t/00_compile.t
</span><span class='line'>Writing .travis.yml
</span><span class='line'>Writing .gitignore
</span><span class='line'>Writing LICENSE
</span><span class='line'>Writing cpanfile
</span><span class='line'>Initializing git JSON::MergePatch
</span><span class='line'><span class="o">[</span>JSON-MergePatch<span class="o">]</span> <span class="nv">$ </span>git init
</span><span class='line'>Initialized empty Git repository in /user/home_directory/git/cpan/JSON-MergePatch/.git/
</span><span class='line'>Retrieving meta data from lib/JSON/MergePatch.pm.
</span><span class='line'>Name: JSON::MergePatch
</span><span class='line'>Abstract: It<span class="s1">&#39;s new $module</span>
</span><span class='line'><span class="s1">Version: 0.01</span>
</span><span class='line'><span class="s1">fatal: bad default revision &#39;</span>HEAD<span class="err">&#39;</span>
</span><span class='line'><span class="o">[</span>JSON-MergePatch<span class="o">]</span> <span class="nv">$ </span>git add .
</span><span class='line'>Finished to create JSON::MergePatch
</span></code></pre></td></tr></table></div></figure>


<p>これで雛形ができました。</p>

<p>そしてこれから雛形を編集していくわけですが、自分で編集するのは基本的に以下のファイルのみです。</p>

<ul>
<li>lib/ 配下のプログラム</li>
<li>t/ 配下のテストプラグラム</li>
<li>cpanfile</li>
</ul>


<p>以下のファイルはそれぞれ <code>minil hoge</code> コマンド実行時に自動で編集されます。</p>

<ul>
<li>Changes: リリース時に更新される</li>
<li>META.json: cpanfile に合わせて更新される</li>
<li>README.md: lib/Your/Module.pm の記述から更新される</li>
</ul>


<h2>つづく</h2>

<p>次回はいよいよ CPAN へ公開する際の手順を書こうと思います。</p>

<h2>参照</h2>

<ul>
<li><a href="http://blog.64p.org/entry/2013/05/14/080423">Minilla を用いた Perl モジュールの作り方</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Homebrewをupdateしよう]]></title>
    <link href="http://sojiro14.github.io/blog/2015/05/19/update-homebrew/"/>
    <updated>2015-05-19T23:39:53+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/05/19/update-homebrew</id>
    <content type="html"><![CDATA[<p>以前の記事で Homebrew を使って Docker のもろもろをインストールしたが、実はそのときインストールされたツールのバージョンが古く、それが原因で作業が少し詰まった。</p>

<p>そんなときは Homebrew の update である。</p>

<h2>Homebrew を update する</h2>

<p>おもむろに</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew update
</span></code></pre></td></tr></table></div></figure>


<p>新しい FORMULA 、更新された FORMULA 、削除された FORMULA の一覧が表示されて Homebrew の update が完了する</p>

<h2>古いモジュールの upgrade</h2>

<p>Homebrew を update しただけでは、すでにインストールされているモジュールは新しくならない</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew upgrade <span class="o">[</span>FORMULA<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>で最新バージョンに upgrade する</p>

<p>今後 Homebrew を使うときは参照する FORMULA のバージョンも気にしたい</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSON Schema のバリデーション]]></title>
    <link href="http://sojiro14.github.io/blog/2015/05/18/validate-json-schema/"/>
    <updated>2015-05-18T23:41:47+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/05/18/validate-json-schema</id>
    <content type="html"><![CDATA[<p>JSON Schema を勉強中であります。</p>

<p>その名の通り JSON でリソースそのものやリソースの操作まで表現できる面白いツールだと思います。</p>

<p>しかし、 JSON Schema は往々にして複雑になりがちで、書く量が多くなると typo も増えてきます。</p>

<p>そこで今回は JSON Schema のバリデーションに使えるツールをメモ程度に書いておきます。</p>

<h2>validate-schema コマンド</h2>

<p>まずは <code>validate-schema</code> コマンドから。簡単なバリデーションをしてくれる。</p>

<p>gem の json_schema パッケージに入っているのでインストール</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install json_schema
</span><span class='line'>Password:
</span><span class='line'>Fetching: json_schema-0.6.0.gem <span class="o">(</span>100%<span class="o">)</span>
</span><span class='line'>Successfully installed json_schema-0.6.0
</span><span class='line'>...
</span><span class='line'><span class="m">1</span> gem installed
</span></code></pre></td></tr></table></div></figure>


<p>インストールできたらオプションに <code>-d</code> をつけて実行</p>

<p>これがバリデーションに通った例</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>validate-schema -d json_schema/directory/test.json
</span><span class='line'>json_schema/directory/test.json is valid.
</span></code></pre></td></tr></table></div></figure>


<p>バリデーションに落ちるとこうなる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>validate-schema -d json_schema/directory/test.json
</span><span class='line'>json_schema/directory/test.json: Invalid JSON. Try to validate using <span class="sb">`</span>jsonlint<span class="sb">`</span>.
</span></code></pre></td></tr></table></div></figure>


<p>なんと別のツールを使って確かめろということなので、以下につづく。</p>

<h2>jsonlint コマンド</h2>

<p>さて、 validate-schema に jsonlint を使え、と言われたので早速インストールする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>npm install jsonlint -g
</span><span class='line'>npm http GET https://registry.npmjs.org/jsonlint
</span><span class='line'>npm http <span class="m">200</span> https://registry.npmjs.org/jsonlint
</span><span class='line'>...
</span><span class='line'>/usr/local/bin/jsonlint -&gt; /usr/local/lib/node_modules/jsonlint/lib/cli.js
</span><span class='line'>jsonlint@1.6.2 /usr/local/lib/node_modules/jsonlint
</span><span class='line'>├── nomnom@1.8.1 <span class="o">(</span>underscore@1.6.0, chalk@0.4.0<span class="o">)</span>
</span><span class='line'>└── JSV@4.0.2
</span></code></pre></td></tr></table></div></figure>


<p>インストールが完了したら早速チェック</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>jsonlint json_schema/directory/test.json
</span><span class='line'><span class="o">[</span>Error: Parse error on line 20:
</span><span class='line'>...<span class="err">&quot;</span><span class="o">]</span>,                <span class="o">}</span>            <span class="o">}</span>,
</span><span class='line'>----------------------^
</span><span class='line'>Expecting <span class="s1">&#39;STRING&#39;</span>, got <span class="s1">&#39;}&#39;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>今度はバリデーションに落ちる理由と場所を示してくれるのですぐに修正できる</p>

<p>だいたいバリデーションに落ちるときは <code>,</code> のつけ過ぎが多い</p>

<p>これらのツールで無駄にハマる時間をなくしたいものです。</p>

<h2>validate-schema コマンド（再）</h2>

<p>今回は JSON Schema 単体のチェックだったので <code>validate-schema</code> コマンドが使い勝手悪く見えるので補足</p>

<p>もともとは、ある JSON データが JSON Schema に則っているかのバリデーションをするツールである</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>validate-schema json_schema/check.json test.json
</span><span class='line'>test.json#/emotion: failed schema <span class="c">#/properties/emotion: embarrassment is not a member of [&quot;pleasure&quot;, &quot;anger&quot;, &quot;sadness&quot;, &quot;enjoyment&quot;].</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="https://github.com/brandur/json_schema">validate-schema</a></li>
<li><a href="https://www.npmjs.com/package/jsonlint">jsonlint</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PAUSE ID の取得]]></title>
    <link href="http://sojiro14.github.io/blog/2015/05/17/get-pause-id/"/>
    <updated>2015-05-17T23:23:14+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/05/17/get-pause-id</id>
    <content type="html"><![CDATA[<p>いま私は日本の Perl シーンにおける名立たるプログラマの方々の元で仕事させていただくという大変ありがたい立場にいるのですが、常々</p>

<p><strong> OSS に対する活動が成長の大きな糧になるからチャレンジすべし </strong></p>

<p>とアドバイスを受けています。</p>

<p>ところが初めてその言葉を受けてから既に1年以上経とうというのに何もしていない。これは本当にいかんと思ってとにかく CAPN に貢献してみようと。</p>

<p>そこで調べてみると PAUSE ID なるものが必要なようなので取得までの過程をここへメモします</p>

<h2>PAUSE ID の取得</h2>

<p>PAUSE は The Perl Authors Upload Server の略称で、ここから CPAN へのアップなどするよう</p>

<p><a href="http://pause.perl.org/pause/query?ACTION=request_id">ここ</a> から登録を開始する</p>

<p>各項目に入力してアカウント申請を行う</p>

<p>full name の欄はそれっぽい名前じゃないとはじかれるが、後から変えられる</p>

<p>申請を行うと、しばらくしてアカウント発行の通知が登録したメールアドレスに届く</p>

<p>この通知は人によって届くまでの時間にばらつきがあるようだが、今回は申請したその日のうちに来た</p>

<p>通知にはパスワード変更ページへのリンクと暫定のパスワードが記載されているので、登録した ID と暫定パスワードで Basic 認証を突破してパスワードを設定する</p>

<p>アカウントが発行されると Edit Account Info というメニューへアクセスできるようになる</p>

<p>ここに</p>

<blockquote><p>The email address [id]@cpan.org should be configured to forward mail to &hellip;</p></blockquote>

<p>という項目があるので、 <code>[id]@cpan.org</code> へのメールを受け取るメールアドレスを設定する</p>

<p>ここで設定しておかないと後々 <code>[id]@cpan.org</code> に対するメールが受け取れず不便を被るので要設定とのこと</p>

<h2>Gravatar の設定</h2>

<p>Gravatar は Email アカウントにアイコンを紐づけて様々なサービスで使えるようにするサービスで、 GitHub などでも使われている</p>

<p><a href="https://ja.gravatar.com/">https://ja.gravatar.com/</a></p>

<p>Gravatar に PAUSE ID に紐づいたアドレスでアイコンを設定することで CPAN のアカウントへアイコンを設定することができる</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[id]@cpan.org  # 設定するメールアドレス</span></code></pre></td></tr></table></div></figure>


<p>既に Gravatar のアカウントがある場合は「メールアドレスの追加」から上記アドレスを追加すればよい</p>

<p>新たに Gravatar のアカウントを取得する場合は注意が必要なようである。 <code>@cpan.org</code> のメールアドレスが前項の PAUSE ID 取得の際に自分のメールアドレスへ転送されるよう設定してからでないと、メールアドレスの認証が取れず、 Gravatar のアカウント取得に失敗するようだ。</p>

<p><img src="http://sojiro14.github.io/images/cpan/gravatar.png"></p>

<p>Gravatar の設定が済むと PAUSE アカウントに設定したアイコンが表示されるようになる</p>

<p><img src="http://sojiro14.github.io/images/cpan/sojiro.png"></p>

<p>さて、アカウントは取得した。後はコードを書いて上げるだけ。</p>

<p>やるしかないのです。</p>

<h2>参照</h2>

<ul>
<li><a href="http://blog.livedoor.jp/sasata299/archives/51284970.html">こんな僕が CPAN Author （一応） になるまで。</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Webからデバイスのカメラを起動する]]></title>
    <link href="http://sojiro14.github.io/blog/2015/05/13/start-up-a-web-camera-via-web/"/>
    <updated>2015-05-13T18:58:45+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/05/13/start-up-a-web-camera-via-web</id>
    <content type="html"><![CDATA[<p>Web からデバイスのカメラを起動してみたいと思いたち、少し調べて見たことのメモ</p>

<h2>準備</h2>

<p>以前のエントリ <a href="http://blog.sojiro.me/blog/2015/01/07/making-a-web-server-with-node-dot-js/">Node.jsを使ってWeb Serverを作ってみました</a> で立てたサーバーで実験してみます</p>

<h2>ベースとなるコード</h2>

<p>このコードに手を入れていきます</p>

<figure class='code'><figcaption><span>web.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="nx">server</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;request&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/html&#39;</span><span class="p">});</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s1">&#39;&lt;title&gt;Hello World&lt;/title&gt;&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="o">****</span><span class="p">,</span> <span class="s1">&#39;xxx.xx.x.xxx&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;server listening...&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>コードの全体像</h2>

<p>最終的なコードはこちら。かなり手抜きしてます</p>

<p><a href="http://python-gazo.blog.jp/html5/javascript/webcamera">こちら</a> を参考にさせていただきました</p>

<figure class='code'><figcaption><span>web_camera.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">();</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">_html</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span><span class="cm">/*</span>
</span><span class='line'><span class="cm">&lt;!doctype html&gt;</span>
</span><span class='line'><span class="cm">&lt;html&gt;</span>
</span><span class='line'><span class="cm">&lt;head&gt;</span>
</span><span class='line'><span class="cm">  &lt;title&gt;Web Camera&lt;/title&gt;</span>
</span><span class='line'><span class="cm">  &lt;script type=&quot;text/javascript&quot;&gt;</span>
</span><span class='line'><span class="cm">function capCamera(){</span>
</span><span class='line'><span class="cm">  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || window.navigator.mozGetUserMedia;</span>
</span><span class='line'><span class="cm">    window.URL = window.URL || window.webkitURL;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">  var video = document.getElementById(&quot;camera&quot;);</span>
</span><span class='line'><span class="cm">  var localStream = null;</span>
</span><span class='line'><span class="cm">  navigator.getUserMedia({video: true, audio: false},</span>
</span><span class='line'><span class="cm">  function(stream) {</span>
</span><span class='line'><span class="cm">    console.log(stream);</span>
</span><span class='line'><span class="cm">    video.src = window.URL.createObjectURL(stream);</span>
</span><span class='line'><span class="cm">  },</span>
</span><span class='line'><span class="cm">  function(err) {</span>
</span><span class='line'><span class="cm">    console.log(err);</span>
</span><span class='line'><span class="cm">  }</span>
</span><span class='line'><span class="cm">  );</span>
</span><span class='line'><span class="cm">} </span>
</span><span class='line'><span class="cm">  &lt;/script&gt;</span>
</span><span class='line'><span class="cm">&lt;/head&gt;</span>
</span><span class='line'><span class="cm">&lt;body&gt;</span>
</span><span class='line'><span class="cm">   &lt;input type=&quot;button&quot;  value=&quot;Web Camera&quot; onClick=&quot;capCamera()&quot;&gt;</span>
</span><span class='line'><span class="cm">   &lt;br&gt;</span>
</span><span class='line'><span class="cm">   &lt;video id=&quot;camera&quot; width=&quot;640&quot; height=&quot;480&quot; autoplay=&quot;1&quot; &gt;&lt;/video&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">&lt;/body&gt;</span>
</span><span class='line'><span class="cm">&lt;/html&gt;</span>
</span><span class='line'><span class="cm">*/</span><span class="p">}).</span><span class="nx">toString</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\n)/g</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;*&#39;</span><span class="p">)[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nx">server</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;request&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/html&#39;</span><span class="p">});</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">_html</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="o">****</span><span class="p">,</span> <span class="s1">&#39;xxx.xx.x.xxx&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;server listening...&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>HTML 部分</h2>

<p>HTML の部分をみてみます</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>   <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span>  <span class="na">value=</span><span class="s">&quot;Web Camera&quot;</span> <span class="na">onClick=</span><span class="s">&quot;capCamera()&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>   <span class="nt">&lt;br&gt;</span>
</span><span class='line'>   <span class="nt">&lt;video</span> <span class="na">id=</span><span class="s">&quot;camera&quot;</span> <span class="na">width=</span><span class="s">&quot;640&quot;</span> <span class="na">height=</span><span class="s">&quot;480&quot;</span> <span class="na">autoplay=</span><span class="s">&quot;1&quot;</span> <span class="nt">&gt;&lt;/video&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>構成はボタンと、カメラからの映像をキャプチャする範囲の2つだけ</p>

<p>ボタンには <code>capCamera()</code> という関数が紐づけられています</p>

<h2>JavaScript 部分</h2>

<p>次に JavaScript の部分をみてみます</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">capCamera</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">navigator</span><span class="p">.</span><span class="nx">getUserMedia</span> <span class="o">=</span> <span class="nx">navigator</span><span class="p">.</span><span class="nx">getUserMedia</span> <span class="o">||</span> <span class="nx">navigator</span><span class="p">.</span><span class="nx">webkitGetUserMedia</span> <span class="o">||</span> <span class="nb">window</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">mozGetUserMedia</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nx">URL</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">URL</span> <span class="o">||</span> <span class="nb">window</span><span class="p">.</span><span class="nx">webkitURL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">video</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;camera&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">localStream</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">navigator</span><span class="p">.</span><span class="nx">getUserMedia</span><span class="p">({</span><span class="nx">video</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">audio</span><span class="o">:</span> <span class="kc">false</span><span class="p">},</span>
</span><span class='line'>  <span class="kd">function</span><span class="p">(</span><span class="nx">stream</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">stream</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">video</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">URL</span><span class="p">.</span><span class="nx">createObjectURL</span><span class="p">(</span><span class="nx">stream</span><span class="p">);</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="kd">function</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここで <code>navigator</code> インターフェースの <code>getUserMedia()</code> メソッドを使用しているのがわかります</p>

<h3>getUserMedia の構文</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">navigator</span><span class="p">.</span><span class="nx">getUserMedia</span> <span class="p">(</span> <span class="nx">constraints</span><span class="p">,</span> <span class="nx">successCallback</span><span class="p">,</span> <span class="nx">errorCallback</span> <span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<table>
<thead>
<tr>
<th>引数           </th>
<th>必須 / オプショナル            </th>
<th> 説明                                                                                 </th>
</tr>
</thead>
<tbody>
<tr>
<td>constraints    </td>
<td>必須                           </td>
<td> successCallback に渡されるLocalMediaStream オブジェクトがサポートするメディアタイプ。</td>
</tr>
<tr>
<td>successCallback</td>
<td>必須                           </td>
<td> LocalMediaStream オブジェクトが取得できた場合、呼び出されるコールバック関数。        </td>
</tr>
<tr>
<td>errorCallback  </td>
<td>オプショナル (Firefox では必須)</td>
<td> 呼び出しが失敗した際に実行されるコールバック関数。最近の Firefox では必須となっています。省略された場合、 NS_ERROR_XPC_NOT_ENOUGH_ARGS error がスローされます。</td>
</tr>
</tbody>
</table>


<h3>constraints</h3>

<p>video, audio の二つの属性に対して真偽値を指定する</p>

<h3>successcallback</h3>

<p><a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API#LocalMediaStream">LocalMediaStream</a> が引数として渡されるので <code>window.URL.createObjectURL()</code> メソッドにそのまま渡してオブジェクトの URL を取得する</p>

<p>このように取得したビデオストリームの URL を <code>video</code> の DOM に渡すことで <code>video</code> 領域にビデオを表示します</p>

<h2>JavaScript 内のヒアドキュメント</h2>

<p>今回は横着して <code>web_camera.js</code> の中に HTML をすべてヒアドキュメントで記述しました JavaScript 内のヒアドキュメントに関してはちょっとしたテクニックがあるようなのでそれはまた次の機会に書こうと思います。</p>

<p>Web からデバイスのカメラを操作できるというのはとても面白いのですが、今回扱ったメソッドはまだまだ一部のブラウザでしかサポートされていないので、特にモバイルで使えるようになったらもっと面白くなるのに、という感想をもってこのエントリを終わります。</p>

<h2>参照</h2>

<ul>
<li><a href="https://developer.mozilla.org/ja/docs/Web/API/Navigator/getUserMedia">Navigator.getUserMedia</a></li>
<li><a href="http://python-gazo.blog.jp/html5/javascript/webcamera">WebRTCでカメラの起動とキャプチャ</a></li>
<li><a href="http://qiita.com/ampersand/items/c6c773ba7ae9115856d0">SafariでもエラーにならないJavascriptのヒアドキュメントの書き方</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xdg-open コマンドとは]]></title>
    <link href="http://sojiro14.github.io/blog/2015/05/12/what-is-xdg-open-command/"/>
    <updated>2015-05-12T23:55:57+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/05/12/what-is-xdg-open-command</id>
    <content type="html"><![CDATA[<p>以前 <a href="http://blog.sojiro.me/blog/2015/05/10/the-second-step-of-yeoman/">初めてのYeoman (Grunt/Bowerを使ってみる)</a> というエントリで Grunt を実行したときに</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Warning: Command failed: /home/sojiro/yeoman/angular_fullstack/node_modules/open/vendor/xdg-open: line 584: xdg-mime: コマンドが見つかりません
</span></code></pre></td></tr></table></div></figure>


<p>と怒られたことがあったので <code>xdg-open</code> コマンドについて少し調べてみます</p>

<h2>xdg-open コマンドのインストール</h2>

<p>xdg-open の実体はシェルスクリプトである</p>

<p>すんなりインストールできるかと思いきや普段の CentOS に入れるのに手こずってしまった</p>

<p>どうやら Ubuntu との相性が良いようなので Vagrant で Ubuntu を立ち上げてそこでインストールしてみる</p>

<h3>Ubuntu のセットアップ</h3>

<p>Vagrant で Ubuntu 環境をセットアップする</p>

<p>まずは box のインストールから</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant box add ubuntu http://goo.gl/8kWkm
</span><span class='line'><span class="o">==</span>&gt; box: Adding box <span class="s1">&#39;ubuntu&#39;</span> <span class="o">(</span>v0<span class="o">)</span> <span class="k">for</span> provider:
</span><span class='line'>   box: Downloading: http://goo.gl/8kWkm
</span><span class='line'><span class="o">==</span>&gt; box: Successfully added box <span class="s1">&#39;ubuntu&#39;</span> <span class="o">(</span>v0<span class="o">)</span> <span class="k">for</span> <span class="s1">&#39;virtualbox&#39;</span>!
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant box list
</span><span class='line'>centos64 <span class="o">(</span>virtualbox, 0<span class="o">)</span>
</span><span class='line'>ubuntu   <span class="o">(</span>virtualbox, 0<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>box がセットアップできたら立ち上げまで行ってしまう</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir ubuntu
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>ubuntu/
</span><span class='line'><span class="nv">$ </span>vagrant init ubuntu
</span><span class='line'>A <span class="sb">`</span>Vagrantfile<span class="sb">`</span> has been placed in this directory. You are now
</span><span class='line'>ready to <span class="sb">`</span>vagrant up<span class="sb">`</span> your first virtual environment! Please <span class="nb">read</span>
</span><span class='line'>the comments in the Vagrantfile as well as documentation on
</span><span class='line'><span class="sb">`</span>vagrantup.com<span class="sb">`</span> <span class="k">for</span> more information on using Vagrant.
</span><span class='line'><span class="nv">$ </span>ls
</span><span class='line'>Vagrantfile
</span><span class='line'><span class="nv">$ </span>vagrant up
</span><span class='line'>Bringing machine <span class="s1">&#39;default&#39;</span> up with <span class="s1">&#39;virtualbox&#39;</span> provider...
</span><span class='line'><span class="o">==</span>&gt; default: Importing base box <span class="s1">&#39;ubuntu&#39;</span>...
</span><span class='line'><span class="o">==</span>&gt; default: Matching MAC address <span class="k">for</span> NAT networking...
</span><span class='line'><span class="o">==</span>&gt; default: Setting the name of the VM: <span class="nv">ubuntu_default_1432117537476_54763</span>
</span><span class='line'><span class="o">==</span>&gt; default: Fixed port collision <span class="k">for</span> <span class="nv">22</span> <span class="o">=</span>&gt; 2222. Now on port 2200.
</span><span class='line'><span class="o">==</span>&gt; default: Clearing any previously <span class="nb">set </span>network interfaces...
</span><span class='line'><span class="o">==</span>&gt; default: Preparing network interfaces based on configuration...
</span><span class='line'>   default: Adapter 1: <span class="nv">nat</span>
</span><span class='line'><span class="o">==</span>&gt; default: Forwarding ports...
</span><span class='line'>   default: <span class="nv">22</span> <span class="o">=</span>&gt; <span class="m">2200</span> <span class="o">(</span>adapter 1<span class="o">)</span>
</span><span class='line'><span class="o">==</span>&gt; default: Booting VM...
</span><span class='line'><span class="o">==</span>&gt; default: Waiting <span class="k">for</span> machine to boot. This may take a few minutes...
</span></code></pre></td></tr></table></div></figure>


<p>立ち上がったら以下のコマンドで Ubuntu 環境に入り、インストールの準備が完了する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant ssh
</span><span class='line'>Welcome to Ubuntu 12.04.1 LTS <span class="o">(</span>GNU/Linux 3.2.0-32-generic x86_64<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>* Documentation:  https://help.ubuntu.com/
</span><span class='line'>
</span><span class='line'> System information as of Wed May <span class="m">20</span> 07:30:10 BRT 2015
</span><span class='line'>
</span><span class='line'> System load:  0.0               Processes:           73
</span><span class='line'> Usage of /:   11.7% of 7.87GB   Users logged in:     0
</span><span class='line'> Memory usage: 1%                IP address <span class="k">for</span> eth0: 10.0.2.15
</span><span class='line'> Swap usage:   0%
</span><span class='line'>
</span><span class='line'> Graph this data and manage this system at https://landscape.canonical.com/
</span><span class='line'>
</span><span class='line'>New release <span class="s1">&#39;14.04.2 LTS&#39;</span> available.
</span><span class='line'>Run <span class="s1">&#39;do-release-upgrade&#39;</span> to upgrade to it.
</span></code></pre></td></tr></table></div></figure>


<h3>インストール</h3>

<p>ここからいよいよ Ubuntu に <code>xdg-open</code> をインストールしていく</p>

<p>最初から入ってたらラッキーだなーと思いつつ打ってみる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>xdg-open
</span><span class='line'>The program <span class="s1">&#39;xdg-open&#39;</span> is currently not installed.  You can install it by typing:
</span><span class='line'>sudo apt-get install xdg-utils
</span></code></pre></td></tr></table></div></figure>


<p>思いがけず大ヒントが返ってきたので従う</p>

<p>xdg-utils は <code>xdg-open</code> を内包するパッケージである</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install xdg-utils
</span><span class='line'>Reading package lists... Done
</span><span class='line'>Building dependency tree
</span><span class='line'>...
</span><span class='line'>E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?
</span></code></pre></td></tr></table></div></figure>


<p>エラーになってしまった</p>

<p>しかしまたヒントがあるので従う</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install xdg-utils --fix-missing
</span><span class='line'>Reading package lists... Done
</span><span class='line'>Building dependency tree
</span><span class='line'>...
</span><span class='line'>Extracting templates from packages: 100%
</span><span class='line'>Preconfiguring packages ...
</span><span class='line'>Selecting previously unselected package ttf-dejavu-core.
</span></code></pre></td></tr></table></div></figure>


<p>晴れてインストール完了</p>

<h2>使ってみる</h2>

<ul>
<li>テキストファイル: 普通に開ける</li>
<li>画像ファイル: 開けるメソッドがなくエラー（環境立ち上げたばかりなので）</li>
</ul>


<h3>ディレクトリを指定</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir <span class="nb">test</span>
</span><span class='line'><span class="nv">$ </span>touch <span class="nb">test</span>/file
</span><span class='line'><span class="nv">$ </span>xdg-open <span class="nb">test</span>/
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://sojiro14.github.io/images/xdg_open/directory.png"></p>

<h3>URL を指定してみる</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>xdg-open http://blog.sojiro.me
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://sojiro14.github.io/images/xdg_open/blog.png"></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>xdg-open http://google.com
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://sojiro14.github.io/images/xdg_open/google.png"></p>

<p>ブラウザはないが URL を指定すると CUI 上で Web ページが開ける</p>

<h2>参照</h2>

<ul>
<li><a href="http://blog.sojiro.me/blog/2015/05/03/the-first-step-for-vagrant/">初めてのVagrant</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初めてのYeoman (Grunt/Bowerとは)]]></title>
    <link href="http://sojiro14.github.io/blog/2015/05/11/the-third-step-of-yeoman/"/>
    <updated>2015-05-11T23:51:11+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/05/11/the-third-step-of-yeoman</id>
    <content type="html"><![CDATA[<p>初めてのYeoman というタイトルでこれまで2つのエントリを投稿しました。</p>

<ul>
<li><a href="http://blog.sojiro.me/blog/2015/05/06/the-first-step-of-yeoman/">初めてのYeoman (Yoを使った雛形作成)</a></li>
<li><a href="http://blog.sojiro.me/blog/2015/05/10/the-second-step-of-yeoman/">初めてのYeoman (Grunt/Bowerを使ってみる)</a></li>
</ul>


<p>ここであらためて Grunt と Bower について書いておきます。</p>

<p>特に技術的なことはないです。</p>

<h2>Grunt とは</h2>

<blockquote><p>The JavaScript Task Runner</p></blockquote>

<p>と公式サイトに書いてある。一言で言うと自動化、とも。</p>

<p>要するに予め決められたタスクをその通りに実行してくれるツールである。
（似たようなツールとして make や rake を使ったことがある）</p>

<p>そして js 界隈で話題のツールやプラグイン、フレームワークがどんどん移り変わって行くのと同様に Grunt も gulp にとって変わられると話題になっている。</p>

<p>しかしこれは自分でやりたいことを自動化したい場合の話であって、何か自分のやりたいことを他の人がやっていたら素直にその人の作ったタスクを使わせてもらえば良いわけである。</p>

<p>（そういう意味で他の人が作った設定に多少手を加えられるほどの理解はあると嬉しいかもしれないが、それは必要になったときで良い）</p>

<p>つまり Grunt でも gulp でも、自分がやりたいことを他の人が既にやっていればそれに乗っかれば良いし、他の人がまだやっていなければ、その時点で自分が一番書きやすい方法をつかって自動化すれば良い。</p>

<p>問題は自分にやりたいこと（自動化したいこと）があるかどうかであって、自分が自分以外の何者でもない以上、それはあるはずで、それに気づいてないとか、考え続けられないから僕はまだまだ三流以下ということなんですね。</p>

<h2>Bower とは</h2>

<p>フロントエンドのパッケージマネージャーで</p>

<ul>
<li>cpan(perl)</li>
<li>gem(ruby)</li>
<li>Node.js(npm)</li>
</ul>


<p>みたいなものだと理解している</p>

<p>使い方も対して変わらないですね</p>

<h2>Yeoman</h2>

<p>ここまで Yeoman を見てきて Yeoman の要は yo のように思える</p>

<p>使う側の立場では雛形(generator)を選んで yo を実行したらやりたいことは既に決まっている</p>

<p>作る側としては最終的にどんな雛形を作るかが問題である</p>

<p>ここで雛形のルール（設定）を Grunt で規定し、フロントエンドを Bower で規定することをルールとしたら雛形もまとめやすいよね、ということか</p>

<h2>最後に</h2>

<p>なんだか雑なエントリになってしまった。。。</p>

<p>まずは Yeoman の恩恵をもっと受けまくってみます</p>

<h2>参照</h2>

<ul>
<li><a href="http://gruntjs.com/">Grunt</a></li>
<li><a href="http://bower.io/">Bower</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
