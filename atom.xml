<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sojiro's Blog]]></title>
  <link href="http://sojiro14.github.io/atom.xml" rel="self"/>
  <link href="http://sojiro14.github.io/"/>
  <updated>2015-01-28T16:55:20+09:00</updated>
  <id>http://sojiro14.github.io/</id>
  <author>
    <name><![CDATA[Sojiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AWSのLinuxにMongoDBをインストール]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/30/installing-mongodb-on-linux-aws/"/>
    <updated>2014-12-30T13:32:15+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/30/installing-mongodb-on-linux-aws</id>
    <content type="html"><![CDATA[<p>AWSで借りたサーバーにmongoDBが入っていなかったのでインストールした手順</p>

<h2>YUMの設定</h2>

<p>パッケージ管理システムであるYUMにmongoDB用の設定を追加する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo vim /etc/yum.repos.d/mongodb.repo
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>/etc/yum.repos.d/mongodb.repo </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>mongodb<span class="o">]</span>
</span><span class='line'><span class="nv">name</span><span class="o">=</span>MongoDB Repository
</span><span class='line'><span class="nv">baseurl</span><span class="o">=</span>http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/
</span><span class='line'><span class="nv">gpgcheck</span><span class="o">=</span>0
</span><span class='line'><span class="nv">enabled</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>これでYUMにmongoDBのリポジトリが追加される</p>

<h2>mongoDBのインストール</h2>

<p>今回は何も考えず最新のバージョンをインストールするので以下のコマンドで実行する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo yum install mongodb-org
</span><span class='line'>読み込んだプラグイン:priorities, update-motd, upgrade-helper
</span><span class='line'>...
</span><span class='line'><span class="o">============================================================================================================================================================================================================</span>
</span><span class='line'> Package                                                  アーキテクチャー                             バージョン                                       リポジトリー                                   容量
</span><span class='line'><span class="o">============================================================================================================================================================================================================</span>
</span><span class='line'>インストール中:
</span><span class='line'> mongodb-org                                              x86_64                                       2.6.6-1                                          mongodb                                       4.9 k
</span><span class='line'>依存性関連でのインストールをします:
</span><span class='line'> mongodb-org-mongos                                       x86_64                                       2.6.6-1                                          mongodb                                       6.8 M
</span><span class='line'> mongodb-org-server                                       x86_64                                       2.6.6-1                                          mongodb                                       9.0 M
</span><span class='line'> mongodb-org-shell                                        x86_64                                       2.6.6-1                                          mongodb                                       4.3 M
</span><span class='line'> mongodb-org-tools                                        x86_64                                       2.6.6-1                                          mongodb                                        <span class="m">90</span> M
</span><span class='line'>
</span><span class='line'>トランザクションの要約
</span><span class='line'><span class="o">============================================================================================================================================================================================================</span>
</span><span class='line'>インストール  <span class="m">1</span> パッケージ <span class="o">(</span>+4 個の依存関係のパッケージ<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>総ダウンロード容量: <span class="m">110</span> M
</span><span class='line'>インストール容量: <span class="m">277</span> M
</span><span class='line'>Is this ok <span class="o">[</span>y/d/N<span class="o">]</span>: y
</span><span class='line'>Downloading packages:
</span><span class='line'>...
</span><span class='line'>完了しました!
</span></code></pre></td></tr></table></div></figure>


<h2>確認</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongo --version
</span><span class='line'>MongoDB shell version: 2.6.6
</span></code></pre></td></tr></table></div></figure>


<p>インストール完了</p>

<h2>参照</h2>

<ul>
<li><a href="http://docs.mongodb.org/manual/tutorial/install-mongodb-on-red-hat-centos-or-fedora-linux/">Install MongoDB on Red Hat Enterprise, CentOS, Fedora, or Amazon Linux</a></li>
<li><a href="http://qiita.com/nownabe/items/123a8fd04ff5252b3036">CentOS6.5にMongoDBをインストールする</a></li>
<li><a href="http://qiita.com/ykyk1218/items/1c1824e77fb8af78bcf5">MongoDBをLinuxにインストール</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VimにおけるTABとスペースの扱いについて]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/26/tab-and-space-on-vim/"/>
    <updated>2014-12-26T10:52:26+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/26/tab-and-space-on-vim</id>
    <content type="html"><![CDATA[<p>Vimでは <code>&lt;TAB&gt;</code> やインデントについてその挙動を設定することができる。いくつか設定方法があるが、これまでこれらに関する <code>.vimrc</code> の設定は何も考えずにただコピペしていたので記述を見直してみた。</p>

<h2>tabstop</h2>

<p> <code>tabstop</code> で <code>&lt;TAB&gt;</code> にいくつのスペースを設定するか決めることができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">set</span> <span class="nb">tabstop</span><span class="p">=</span><span class="m">4</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで <code>&lt;TAB&gt;</code> に半角4つ分が設定される。</p>

<h2><code>&lt;TAB&gt;</code> の挙動</h2>

<p>そもそも <code>&lt;TAB&gt;</code> はどのような挙動をするのか。</p>

<p>何となく、指定した数の分だけ半角スペースを入れてくれるもの、と思っていたが、</p>

<p>正確には行頭からの文字数が<code>&lt;TAB&gt;</code> に指定された半角数の倍数になるようにスペースを補完するもの、というのが正しいかもしれない。何を言っているかわからないと思うので以下で実験する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">set</span> <span class="nb">tabstop</span><span class="p">=</span><span class="m">4</span>
</span><span class='line'><span class="k">set</span> <span class="nb">list</span>
</span><span class='line'><span class="k">set</span> <span class="nb">listchars</span><span class="p">=</span><span class="k">tab</span>:<span class="p">&gt;</span>.<span class="p">,</span>trail:_<span class="p">,</span><span class="nb">eol</span>:↲<span class="p">,</span>extends:<span class="p">&gt;,</span>precedes:<span class="p">&lt;,</span>nbsp:%
</span></code></pre></td></tr></table></div></figure>


<p>実験用に上記のように <code>.vimrc</code> を設定しておく。</p>

<figure class='code'><figcaption><span>sample1</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">&gt;</span>...↲
</span><span class='line'><span class="k">a</span><span class="p">&gt;</span>..↲
</span><span class='line'>bb<span class="p">&gt;</span>.↲
</span><span class='line'>ccc<span class="p">&gt;</span>↲
</span></code></pre></td></tr></table></div></figure>


<p>これは以下のように打ち込んだ結果で、 <code>&lt;TAB&gt;</code> により、それぞれの行が <code>tabstop</code> で設定した半角4つ分で終わるように（タブ文字により）スペースが補完されているのがわかる。</p>

<ul>
<li><code>&lt;TAB&gt;</code></li>
<li>a <code>&lt;TAB&gt;</code></li>
<li>bb <code>&lt;TAB&gt;</code></li>
<li>ccc <code>&lt;TAB&gt;</code></li>
</ul>


<figure class='code'><figcaption><span>sample2</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">&gt;</span>...<span class="p">&gt;</span>...↲
</span><span class='line'>test<span class="p">&gt;</span>...↲
</span><span class='line'>sample<span class="p">&gt;</span>.↲
</span></code></pre></td></tr></table></div></figure>


<p>一行に半角4つ分以上の文字が打ち込まれている場合も同じく、 <code>&lt;TAB&gt;</code> はそれぞれの行が <code>tabstop</code> で指定した半角4つの倍数の文字数になるようにタブ文字を補完する。（この場合は一行につき半角8文字）</p>

<h2>smarttabとshiftwidthとsmartindent</h2>

<p> <code>smarttab</code> をONにすることで <code>shiftwidth</code> を設定することが可能になる。</p>

<p> <code>shiftwidth</code> は行頭のインデントの幅を規定するもので、 <code>smarttab</code> が効いているときには行頭の <code>&lt;TAB&gt;</code> は <code>shiftwidth</code> の幅のスペース（タブ文字）を挿入する役目を果たす。</p>

<p> <code>smartindent</code> をONにすると改行時に前の行の行末を見て自動でインデントが挿入される。例えば行末が <code>{</code> の場合は次の行に自動的にインデントが入る。このインデントの幅は <code>shiftwidth</code> で指定された幅となる。</p>

<h2>autoindent</h2>

<p> <code>autoindent</code> は改行時に前の行のインデントと同じ幅でインデントを挿入する。</p>

<h2>expandtab</h2>

<p> <code>expandtab</code> は <code>&lt;TAB&gt;</code> により挿入されるタブ文字を純粋なスペースに変換する。</p>

<p>上記のsample1、2を以下の設定で記述してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">set</span> <span class="nb">expandtab</span>
</span><span class='line'><span class="k">set</span> <span class="nb">tabstop</span><span class="p">=</span><span class="m">4</span>
</span><span class='line'><span class="k">set</span> <span class="nb">list</span>
</span><span class='line'><span class="k">set</span> <span class="nb">listchars</span><span class="p">=</span><span class="k">tab</span>:<span class="p">&gt;</span>.<span class="p">,</span>trail:_<span class="p">,</span><span class="nb">eol</span>:↲<span class="p">,</span>extends:<span class="p">&gt;,</span>precedes:<span class="p">&lt;,</span>nbsp:%
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>sample1&#8217;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>____↲
</span><span class='line'>a___↲
</span><span class='line'>bb__↲
</span><span class='line'>ccc_↲
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>sample2&#8217;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>________↲
</span><span class='line'>test____↲
</span><span class='line'>sample__↲
</span></code></pre></td></tr></table></div></figure>


<p> <code>expandtab</code> をONにした状態で一時的にタブ文字を記述したいときは、VimをINSERTモードにした状態で以下のように打つ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>Control<span class="p">-</span><span class="k">v</span> <span class="p">&lt;</span>TAB<span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="http://vimwiki.net/?FrontPage">VIM wiki</a></li>
<li><a href="http://nanasi.jp/articles/howto/editing/et-inserttab.html">:set expandtab（:set et）設定の時に、タブ文字を挿入する </a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HUBOTを使ったSlack Bot作成メモ]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/15/slack-bot-by-hubot/"/>
    <updated>2014-12-15T03:02:30+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/15/slack-bot-by-hubot</id>
    <content type="html"><![CDATA[<p>SlackにBotを入れたいと思い、少し調べてみたところHUBOTがやはり簡単らしいのでやってみた</p>

<h2>HUBOT用のAPI Tokenを取得する</h2>

<p>まずはSlackのチームメニューからConfigure Integrationsを選択</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/team_menu.png"></p>

<p>様々な外部サービスとの連携メニューからHUBOTを選択する</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/add_hubot.png"></p>

<p>追加するbotの名前を入力</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/set_botname.png"></p>

<p>ここまでのステップを踏むとAPI Tokenが記されたページが表示される</p>

<p>そしてこの段階でbotがSlackにjoinする</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/join_bot.png"></p>

<h2>HUBOTの設定をする</h2>

<p><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a>にも記したHUBOTのセットアップを進める。</p>

<p><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a>の「②HUBOTをインストールする」までを済ませておく。</p>

<p>新たなbotの生成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>hubot --create slack_sojiro_test
</span></code></pre></td></tr></table></div></figure>


<p>slack用のpluginをインストール</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>slack_sojiro_test/
</span><span class='line'><span class="nv">$ </span>npm install hubot-slack --save
</span></code></pre></td></tr></table></div></figure>


<p>起動用スクリプトの作成。先ほど取得したAPI Tokenを使用する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim runhubot
</span><span class='line'><span class="nv">$ </span>cat runhubot
</span><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_SLACK_TOKEN</span><span class="o">=</span>xxxx-123456789-ABCDEFGHIJKLMN
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_SLACK_TEAM</span><span class="o">=</span>Sojiro-test
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_SLACK_BOTNAME</span><span class="o">=</span><span class="nb">test</span>-bot
</span><span class='line'>
</span><span class='line'>bin/hubot --adapter slack
</span><span class='line'><span class="nv">$ </span>chmod u+x runhubot
</span></code></pre></td></tr></table></div></figure>


<p>botの起動</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./runhubot
</span></code></pre></td></tr></table></div></figure>


<p>これでSlack上のbotがHUBOTのスクリプトに沿って反応するようになったはず</p>

<h2>botを使ってみる</h2>

<p>HUBOTではデフォルトでいくつかのスクリプトが用意されているので使って試してみる</p>

<h3>ping</h3>

<p>生存確認</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/ping.png"></p>

<h3>image me</h3>

<p>画像検索</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/image_me.png"></p>

<h3>animate me</h3>

<p>アニメーション検索</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/animate_me.png"></p>

<h3>youtube me</h3>

<p>動画検索</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/youtube_me.png"></p>

<h3>translate me</h3>

<p>翻訳（日本語から英語）</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/translate_me_1.png"></p>

<p>翻訳（英語から日本語）</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/translate_me_2.png"></p>

<h3>map me</h3>

<p>地図検索</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/map_me.png"></p>

<h2>参照</h2>

<ul>
<li><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a></li>
<li><a href="http://memo.sanographix.net/post/88371442780">Hubotで西木野真姫bot作ってSlackに呼ぶ</a></li>
<li><a href="http://qiita.com/Katsumata_RYO/items/dc4543aa5827d4c3211c">slackにHubotを導入(Heroku経由)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacにNode.jsとMongoDBをインストールしたメモ]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/07/installing-node-dot-js-and-mongodb-in-mac/"/>
    <updated>2014-12-07T18:30:01+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/07/installing-node-dot-js-and-mongodb-in-mac</id>
    <content type="html"><![CDATA[<p>某勉強会でNode.jsとMongoDBを使うということがあったので、インストールした際のメモを残しておく。</p>

<h2>Homebrewのインストール</h2>

<p><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a>でも触れた通り、以下の方法でインストールを試みる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)&quot;</span>
</span><span class='line'>Whoops, the Homebrew installer has moved! Please instead run:
</span><span class='line'>
</span><span class='line'>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>
</span><span class='line'>
</span><span class='line'>Also, please ask wherever you got this link from to update it to the above.
</span><span class='line'>Thanks!
</span></code></pre></td></tr></table></div></figure>


<p>どうやらHomebrewのインストーラーの場所があれから変わったようで、以下のパスで再度実行。</p>

<p>コマンドのレスポンスとして新しいパスをメッセージに残してくれるのはありがたい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでHomebrewのインストールは完了したのであとはサクサク必要なものをインストールするのみ。</p>

<h2>Node.jsのインストール</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install node
</span></code></pre></td></tr></table></div></figure>


<p>これで完了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>node -v
</span><span class='line'>v0.10.33
</span></code></pre></td></tr></table></div></figure>


<p>npmもばっちり入っている</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>npm -v
</span><span class='line'>2.1.10
</span></code></pre></td></tr></table></div></figure>


<h2>MongoDBのインストール</h2>

<p>これも以下を実行するだけ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install mongodb
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongo --version
</span><span class='line'>MongoDB shell version: 2.6.5
</span></code></pre></td></tr></table></div></figure>


<p>おしまい。</p>

<h2>参照</h2>

<ul>
<li><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a></li>
<li><a href="http://qiita.com/hajimeni/items/3c93fd981e92f66a20ce">Macにhomebrewを使ってmongodbをインストール</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Screenを使ってみる]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/01/screen-introduction/"/>
    <updated>2014-12-01T17:15:25+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/01/screen-introduction</id>
    <content type="html"><![CDATA[<p>デタッチ/アタッチという強力な機能をもった仮想端末管理アプリケーションであるscreenを使ってみた。</p>

<h2>screenの設定ファイルを編集する</h2>

<p>screenの操作に使うほとんどのコマンドはプレフィックスを用いる。
このプレフィクスがデフォルトでは <code>ctrl + a</code> のため、Shellの行頭移動と被ってしまうので設定を編集する。</p>

<p>ついでに色々編集してみた。（ <code>ctrl +</code> を <code>^</code> で表す）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>escape ^j^j
</span><span class='line'>startup_message off
</span><span class='line'>defkanji utf-8
</span><span class='line'>defencoding utf-8
</span><span class='line'>encoding utf-8 utf-8
</span><span class='line'>caption always <span class="s2">&quot;%{= wb} %-w%{=bu dr}%n %t%{-}%+w %= %{=b wk} [%l] %{=b wb}%y/%m/%d(%D) %{=b wm}%c&quot;</span>
</span><span class='line'>autodetach on
</span><span class='line'>bell_msg <span class="s2">&quot;^G&quot;</span>
</span><span class='line'>defscrollback 10000
</span><span class='line'>vbell off
</span><span class='line'><span class="nb">bind </span>n screen
</span><span class='line'><span class="nb">bind </span>h prev
</span><span class='line'><span class="nb">bind </span>j next
</span><span class='line'><span class="nb">bind </span>l windowlist
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>escape

<ul>
<li>escape keyの設定（ここでは <code>^j</code> をescape keyとして登録）</li>
</ul>
</li>
<li>startup_message

<ul>
<li>起動時に表示されるメッセージをoff</li>
</ul>
</li>
<li>encoding関連の設定</li>
<li>caption

<ul>
<li>画面下部に表示されるcaptionの設定</li>
</ul>
</li>
<li>autodetach

<ul>
<li>起動時に自動でデタッチ（後述）</li>
</ul>
</li>
<li>bell_msg

<ul>
<li>バックグラウンドで出力されたベル文字をscreenに出力する（ <code>^G</code> はベル文字に置換される）</li>
</ul>
</li>
<li>defscrollback

<ul>
<li>スクロールバックバッファの行数を設定</li>
</ul>
</li>
<li>vbell

<ul>
<li>可視ベルの設定</li>
</ul>
</li>
<li>windowlist

<ul>
<li>全ウィンドウをリスト表示し、使用するウィンドウを選択できるようにする</li>
</ul>
</li>
</ul>


<h2>screenを立ち上げてみる</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>screen
</span></code></pre></td></tr></table></div></figure>


<p>名前を付けて立ち上げる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>screen -t <span class="nb">test</span>
</span></code></pre></td></tr></table></div></figure>


<p>ウィンドウが複数立ち上がると用途に合わせて移動が必要になる。上記 <code>.screenrc</code> の設定がなされた状態で以下のように移動できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>^j + <span class="o">[</span>number<span class="o">]</span>  <span class="c"># [number]に指定した番号のウィンドウに移動</span>
</span><span class='line'><span class="nv">$ </span>^j + h         <span class="c"># 1つ前のウィンドウに移動</span>
</span><span class='line'><span class="nv">$ </span>^j + j         <span class="c"># 1つ後のウィンドウに移動</span>
</span><span class='line'><span class="nv">$ </span>^j + l         <span class="c"># 表示されるウィンドウリストから移動先のウィンドウを選択</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ウィンドウの分割</h2>

<p>ウィンドウを上下に分割する（縦方向の分割はscreenのバージョンを変えないといけないようなので割愛）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>^j + S
</span></code></pre></td></tr></table></div></figure>


<p>分割された領域間の移動</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>^j + <span class="o">[</span>tab<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>領域の破棄</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>^j + X  <span class="c"># 現在の領域を破棄</span>
</span><span class='line'><span class="nv">$ </span>^j + Q  <span class="c"># 現在の領域以外の全ての領域を破棄</span>
</span></code></pre></td></tr></table></div></figure>


<h2>デタッチとアタッチ</h2>

<ul>
<li>デタッチ（detach）

<ul>
<li>screen上での作業をセッションという形で保存しておくこと</li>
</ul>
</li>
<li>アタッチ（attach）

<ul>
<li>デタッチによって保存されたセッションから作業に復帰すること</li>
</ul>
</li>
</ul>


<p>デタッチする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>^j + d
</span></code></pre></td></tr></table></div></figure>


<p>セッションを確認する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>screen -ls
</span><span class='line'>There is a screen on:
</span><span class='line'>    72181.ttys010.your-pc   <span class="o">(</span>Detached<span class="o">)</span>
</span><span class='line'><span class="m">1</span> Socket in /var/folders/56/dlftkv4d4191qwj6r_gxs_shmspdv_/T/.screen.
</span></code></pre></td></tr></table></div></figure>


<p>アタッチ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>screen -r <span class="o">[</span>session_number <span class="p">|</span> session_name<span class="o">]</span>
</span><span class='line'><span class="c"># 上の例では 72181 もしくは ttys010 を指定する</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="http://www.limy.org/program/screen.html">screenコマンド一覧 3.9.13対応 </a></li>
<li><a href="http://linuxjm.sourceforge.jp/html/GNU_screen/man1/screen.1.html">SCREEN</a></li>
<li><a href="http://sixeight.hatenablog.com/entry/20090730/1248973178">screenのデタッチ/アタッチ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #5 -controllerとviewの追加-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/29/making-first-app-with-rails-number-5-add-controller-and-view/"/>
    <updated>2014-11-29T23:58:09+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/29/making-first-app-with-rails-number-5-add-controller-and-view</id>
    <content type="html"><![CDATA[<p>生成したリソースに対応するcontrollerを作成し、このリソースに対するviewとそのためのアクションを追加していく。</p>

<h2>rails generate controller</h2>

<p>controllerを作成する。controllerの名前は1文字目が大文字で、複数形を指定するのがrailsの規約である。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails g controller Stocks
</span><span class='line'><span class="c"># rails generateコマンドは rails g と省略できる</span>
</span></code></pre></td></tr></table></div></figure>


<p>このコマンドでcontrollerのファイルとviewのファイルが生成される。</p>

<h2>routesの設定</h2>

<p>railsでは <code>config/routes</code> ファイルにてdispatch管理をしている。このファイルの設定でRESTfulなURLを自動生成してくれる。</p>

<p>今回追加したcontrollerの設定も追加する。
 <code>config/routes</code> に以下の行を追加する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:stocks</span>
</span></code></pre></td></tr></table></div></figure>


<p>この設定により、リソースの基本的な操作を行うURLが生成される。</p>

<p>この他にもroutesの設定方法はいくつかあり、それにより自由にエンドポイントの追加ができるがここでは省略。</p>

<h2>設定されているroutesの確認</h2>

<p>routesの設定が完了したら、生成されたURLの確認をする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake routes
</span><span class='line'>        Prefix Verb   URI Pattern                    Controller#Action
</span><span class='line'>        stocks GET    /stocks<span class="o">(</span>.:format<span class="o">)</span>              stocks#index
</span><span class='line'>               POST   /stocks<span class="o">(</span>.:format<span class="o">)</span>              stocks#create
</span><span class='line'>     new_stock GET    /stocks/new<span class="o">(</span>.:format<span class="o">)</span>          stocks#new
</span><span class='line'>    edit_stock GET    /stocks/:id/edit<span class="o">(</span>.:format<span class="o">)</span>     stocks#edit
</span><span class='line'>         stock GET    /stocks/:id<span class="o">(</span>.:format<span class="o">)</span>          stocks#show
</span><span class='line'>               PATCH  /stocks/:id<span class="o">(</span>.:format<span class="o">)</span>          stocks#update
</span><span class='line'>               PUT    /stocks/:id<span class="o">(</span>.:format<span class="o">)</span>          stocks#update
</span><span class='line'>               DELETE /stocks/:id<span class="o">(</span>.:format<span class="o">)</span>          stocks#destroy
</span></code></pre></td></tr></table></div></figure>


<h2>アクションの追加</h2>

<p> <code>$ rake routes</code> で示されたController#Actionに沿って、controllerにアクションを追加していく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">app</span><span class="o">/</span><span class="n">controllers</span><span class="o">/</span><span class="n">stocks_controller</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">StocksController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:set_stock</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:show</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span class="p">,</span> <span class="ss">:destroy</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># GET /stocks</span>
</span><span class='line'>  <span class="c1"># GET /stocks.json</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@stocks</span> <span class="o">=</span> <span class="no">Stock</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># GET /stocks/1</span>
</span><span class='line'>  <span class="c1"># GET /stocks/1.json</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># GET /stocks/new</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">new</span>
</span><span class='line'>    <span class="vi">@stock</span> <span class="o">=</span> <span class="no">Stock</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># GET /stocks/1/edit</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">edit</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># POST /stocks</span>
</span><span class='line'>  <span class="c1"># POST /stocks.json</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="vi">@stock</span> <span class="o">=</span> <span class="no">Stock</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">stock_params</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="vi">@stock</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="vi">@stock</span><span class="p">,</span> <span class="ss">notice</span><span class="p">:</span> <span class="s1">&#39;Stock was successfully created.&#39;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">action</span><span class="p">:</span> <span class="s1">&#39;show&#39;</span><span class="p">,</span> <span class="ss">status</span><span class="p">:</span> <span class="ss">:created</span><span class="p">,</span> <span class="ss">location</span><span class="p">:</span> <span class="vi">@stock</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">action</span><span class="p">:</span> <span class="s1">&#39;new&#39;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@stock</span><span class="o">.</span><span class="n">errors</span><span class="p">,</span> <span class="ss">status</span><span class="p">:</span> <span class="ss">:unprocessable_entity</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># PATCH/PUT /stocks/1</span>
</span><span class='line'>  <span class="c1"># PATCH/PUT /stocks/1.json</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">update</span>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="vi">@stock</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">stock_params</span><span class="p">)</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="vi">@stock</span><span class="p">,</span> <span class="ss">notice</span><span class="p">:</span> <span class="s1">&#39;Stock was successfully updated.&#39;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">head</span> <span class="ss">:no_content</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">action</span><span class="p">:</span> <span class="s1">&#39;edit&#39;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@stock</span><span class="o">.</span><span class="n">errors</span><span class="p">,</span> <span class="ss">status</span><span class="p">:</span> <span class="ss">:unprocessable_entity</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># DELETE /stocks/1</span>
</span><span class='line'>  <span class="c1"># DELETE /stocks/1.json</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">destroy</span>
</span><span class='line'>    <span class="vi">@stock</span><span class="o">.</span><span class="n">destroy</span>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="n">stocks_url</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">head</span> <span class="ss">:no_content</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>    <span class="c1"># Use callbacks to share common setup or constraints between actions.</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">set_stock</span>
</span><span class='line'>      <span class="vi">@stock</span> <span class="o">=</span> <span class="no">Stock</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Never trust parameters from the scary internet, only allow the white list through.</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">stock_params</span>
</span><span class='line'>      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:stock</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:title</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<p><a href="http://dotinstall.com/lessons/basic_rails_v2">ドットインストール</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #4 -リソースの生成-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/27/making-first-app-with-rails-number-4-creating-resources/"/>
    <updated>2014-11-27T16:32:38+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/27/making-first-app-with-rails-number-4-creating-resources</id>
    <content type="html"><![CDATA[<p><a href="http://sojiro14.github.io/blog/2014/11/16/making-first-app-with-rails-number-3-scaffold-generator/">Ruby on Railsで初めてアプリを作ってみる #3 -scaffoldジェネレータ-</a> で <code>scaffold</code> コマンドを使ったリソースの生成を行ったが、このコマンドでは決められた形式でのリソースの生成にしか対応できないため、手動で自由にリソースを作成してみる。</p>

<h2>rails generate model</h2>

<p>まずはモデルを作成する。railsの規約に従って、モデルは単数系、最初の文字を大文字で始める。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails generate model Stock title:string
</span></code></pre></td></tr></table></div></figure>


<p>このコマンドで <code>generate</code> は <code>g</code> と省略できる。また、要素の属性はデフォルトが <code>string</code> なので、 <code>string</code> も省略することができる。</p>

<p>省略したコマンドが以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails g model Stock title
</span></code></pre></td></tr></table></div></figure>


<p>このコマンドでmodelに加えてmigrateファイルが生成されるのでDBをmigrateする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake db:migrate
</span></code></pre></td></tr></table></div></figure>


<h2>rails db</h2>

<p>作成したmodelを確認するため、現在使用しているDBのクライアントを立ち上げてみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails db
</span><span class='line'>sqlite&gt; .schema
</span><span class='line'>CREATE TABLE <span class="s2">&quot;schema_migrations&quot;</span> <span class="o">(</span><span class="s2">&quot;version&quot;</span> varchar<span class="o">(</span>255<span class="o">)</span> NOT NULL<span class="o">)</span><span class="p">;</span>
</span><span class='line'>CREATE UNIQUE INDEX <span class="s2">&quot;unique_schema_migrations&quot;</span> ON <span class="s2">&quot;schema_migrations&quot;</span> <span class="o">(</span><span class="s2">&quot;version&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>CREATE TABLE <span class="s2">&quot;users&quot;</span> <span class="o">(</span><span class="s2">&quot;id&quot;</span> INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, <span class="s2">&quot;name&quot;</span> varchar<span class="o">(</span>255<span class="o">)</span>, <span class="s2">&quot;email&quot;</span> varchar<span class="o">(</span>255<span class="o">)</span>, <span class="s2">&quot;created_at&quot;</span> datetime, <span class="s2">&quot;updated_at&quot;</span> datetime<span class="o">)</span><span class="p">;</span>
</span><span class='line'>CREATE TABLE <span class="s2">&quot;microposts&quot;</span> <span class="o">(</span><span class="s2">&quot;id&quot;</span> INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, <span class="s2">&quot;content&quot;</span> varchar<span class="o">(</span>255<span class="o">)</span>, <span class="s2">&quot;user_id&quot;</span> integer, <span class="s2">&quot;created_at&quot;</span> datetime, <span class="s2">&quot;updated_at&quot;</span> datetime<span class="o">)</span><span class="p">;</span>
</span><span class='line'>CREATE TABLE <span class="s2">&quot;stocks&quot;</span> <span class="o">(</span><span class="s2">&quot;id&quot;</span> INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, <span class="s2">&quot;title&quot;</span> varchar<span class="o">(</span>255<span class="o">)</span>, <span class="s2">&quot;created_at&quot;</span> datetime, <span class="s2">&quot;updated_at&quot;</span> datetime<span class="o">)</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>sqliteのクライアントが立ち上がったら <code>.schema</code> コマンドでこれまで作成されてきたテーブルが確認できる。
 <code>id</code> や <code>created_at</code> 、 <code>updated_at</code> はrailsが自動で生成する</p>

<p>ちなみにsqliteクライアントから抜けるには <code>.exit</code> とする。 <code>.</code> が付くことに注意。</p>

<h2>rails console</h2>

<p>railsが用意しているconsoleを立ち上げてリソースを追加したり、確認したりすることもできる。</p>

<p>Stockオブジェクトを生成して保存する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails console
</span><span class='line'>2.0.0-p594 :001 &gt; <span class="nv">s</span> <span class="o">=</span> Stock.new<span class="o">(</span>title: <span class="s2">&quot;stock1&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="c">#&lt;Stock id: nil, title: &quot;stock1&quot;, created_at: nil, updated_at: nil&gt; </span>
</span><span class='line'>2.0.0-p594 :002 &gt; s.save
</span><span class='line'>  <span class="o">(</span>0.1ms<span class="o">)</span>  begin transaction
</span><span class='line'> SQL <span class="o">(</span>2.1ms<span class="o">)</span>  INSERT INTO <span class="s2">&quot;stocks&quot;</span> <span class="o">(</span><span class="s2">&quot;created_at&quot;</span>, <span class="s2">&quot;title&quot;</span>, <span class="s2">&quot;updated_at&quot;</span><span class="o">)</span> VALUES <span class="o">(</span>?, ?, ?<span class="o">)</span>  <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span>, Sat, <span class="m">15</span> Nov <span class="m">2014</span> 15:02:39 UTC +00:00<span class="o">]</span>, <span class="o">[</span><span class="s2">&quot;title&quot;</span>, <span class="s2">&quot;stock1&quot;</span><span class="o">]</span>, <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span>, Sat, <span class="m">15</span> Nov <span class="m">2014</span> 15:02:39 UTC +00:00<span class="o">]]</span>
</span><span class='line'>  <span class="o">(</span>4.9ms<span class="o">)</span>  commit <span class="nv">transaction</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>作られたオブジェクトを確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>2.0.0-p594 :003 &gt; <span class="nv">s</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="c">#&lt;Stock id: 1, title: &quot;stock1&quot;, created_at: &quot;2014-11-15 15:02:39&quot;, updated_at: &quot;2014-11-15 15:02:39&quot;&gt; </span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>new</code> と <code>save</code> を一括で行ってくれるコマンドが <code>create</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>2.0.0-p594 :004 &gt; Stock.create<span class="o">(</span>title: <span class="s2">&quot;stock2&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="o">(</span>0.1ms<span class="o">)</span>  begin transaction
</span><span class='line'> SQL <span class="o">(</span>0.3ms<span class="o">)</span>  INSERT INTO <span class="s2">&quot;stocks&quot;</span> <span class="o">(</span><span class="s2">&quot;created_at&quot;</span>, <span class="s2">&quot;title&quot;</span>, <span class="s2">&quot;updated_at&quot;</span><span class="o">)</span> VALUES <span class="o">(</span>?, ?, ?<span class="o">)</span>  <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span>, Sat, <span class="m">15</span> Nov <span class="m">2014</span> 15:03:44 UTC +00:00<span class="o">]</span>, <span class="o">[</span><span class="s2">&quot;title&quot;</span>, <span class="s2">&quot;stock2&quot;</span><span class="o">]</span>, <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span>, Sat, <span class="m">15</span> Nov <span class="m">2014</span> 15:03:44 UTC +00:00<span class="o">]]</span>
</span><span class='line'>  <span class="o">(</span>5.8ms<span class="o">)</span>  commit <span class="nv">transaction</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="c">#&lt;Stock id: 2, title: &quot;stock2&quot;, created_at: &quot;2014-11-15 15:03:44&quot;, updated_at: &quot;2014-11-15 15:03:44&quot;&gt; </span>
</span></code></pre></td></tr></table></div></figure>


<p>作られたオブジェクト全てを確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>2.0.0-p594 :005 &gt; Stock.all
</span><span class='line'> Stock Load <span class="o">(</span>0.2ms<span class="o">)</span>  SELECT <span class="s2">&quot;stocks&quot;</span>.* FROM <span class="s2">&quot;stocks&quot;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="c">#&lt;ActiveRecord::Relation [#&lt;Stock id: 1, title: &quot;stock1&quot;, created_at: &quot;2014-11-15 15:02:39&quot;, updated_at: &quot;2014-11-15 15:02:39&quot;&gt;, #&lt;Stock id: 2, title: &quot;stock2&quot;, created_at: &quot;2014-11-15 15:03:44&quot;, updated_at: &quot;2014-11-15 15:03:44&quot;&gt;]&gt; </span>
</span><span class='line'>2.0.0-p594 :006 &gt; quit
</span></code></pre></td></tr></table></div></figure>


<h2>最後にもう一度 <code>rails db</code> で直接確認する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>sojiro@ip-172-31-2-112 demo_app<span class="o">]</span><span class="nv">$ </span>rails db
</span><span class='line'>SQLite version 3.7.17 2013-05-20 00:56:22
</span><span class='line'>Enter <span class="s2">&quot;.help&quot;</span> <span class="k">for</span> instructions
</span><span class='line'>Enter SQL statements terminated with a <span class="s2">&quot;;&quot;</span>
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from stocks<span class="p">;</span>
</span><span class='line'>1<span class="p">|</span>stock1<span class="p">|</span>2014-11-15 15:02:39.781183<span class="p">|</span>2014-11-15 15:02:39.781183
</span><span class='line'>2<span class="p">|</span>stock2<span class="p">|</span>2014-11-15 15:03:44.294543<span class="p">|</span>2014-11-15 15:03:44.294543
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<p><a href="http://dotinstall.com/lessons/basic_rails_v2">ドットインストール</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #3 -scaffoldジェネレータ-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/16/making-first-app-with-rails-number-3-scaffold-generator/"/>
    <updated>2014-11-16T23:59:05+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/16/making-first-app-with-rails-number-3-scaffold-generator</id>
    <content type="html"><![CDATA[<p>railsには <code>scaffold</code> という単純なリソースを一気に生成するコマンドが存在する。
今回はこのコマンドを使ってみる。</p>

<h2>Usersリソースの生成</h2>

<p>今回は <code>scaffold</code> コマンドを使ってリソースを生成する。
ここでは以下の要素をもつUsersリソースを生成する。</p>

<ul>
<li>id int</li>
<li>name string</li>
<li>email string</li>
</ul>


<p> <code>rails generate</code> スクリプトに <code>scaffold</code> コマンドを指定し、リソースの単数系と要素の情報を渡す</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails generate scaffold User name:string email:string
</span></code></pre></td></tr></table></div></figure>


<p>id要素はRailsが主キーとしてデフォルトで設定する</p>

<h2>DBにusersのセットアップを行う</h2>

<p> <code>rake</code> コマンドを使ってDBをmigrate（更新）する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake db:migrate
</span><span class='line'><span class="o">==</span> <span class="m">20141111170736</span> CreateUsers: <span class="nv">migrating</span> <span class="o">======================================</span>
</span><span class='line'>-- create_table<span class="o">(</span>:users<span class="o">)</span>
</span><span class='line'>   -&gt; 0.0012s
</span><span class='line'><span class="o">==</span> <span class="m">20141111170736</span> CreateUsers: migrated <span class="o">(</span>0.0014s<span class="o">)</span> <span class="o">=============================</span>
</span></code></pre></td></tr></table></div></figure>


<p>出力から <code>users</code> テーブルが作られたことがわかる</p>

<h2>ブラウザで確認</h2>

<p> <code>rails server</code> コマンドの短縮版である <code>rails s</code> を使って3000番portにアプリを立ち上げる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails s
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://xx.xxx.xxx.xxx:3000">http://xx.xxx.xxx.xxx:3000</a></p>

<p>にブラウザでアクセスすると <code>#1 railsのセットアップ</code> で見たデフォルトのRailsページが表示される</p>

<p>次に以下のエンドポイントにアクセスしてみる</p>

<p><a href="http://xx.xxx.xxx.xxx:3000/users">http://xx.xxx.xxx.xxx:3000/users</a></p>

<p>すると既にUser一覧ページができあがっているのがわかる。この他に</p>

<ul>
<li>新規ユーザーを作成するページ</li>
<li>特定のidのユーザー情報を表示するページ</li>
<li>特定のidのユーザー情報を編集するページ</li>
</ul>


<p>が作られている。</p>

<h2>Micropostsリソースの生成</h2>

<p>Usersリソースと同様に <code>scaffold</code> コマンドと <code>rake</code> の <code>migrate</code> タスクで生成する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails generate scaffold Micropost content:string user_id:integer
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake db:migrate
</span><span class='line'><span class="o">==</span> <span class="m">20141112174234</span> CreateMicroposts: <span class="nv">migrating</span> <span class="o">=================================</span>
</span><span class='line'>-- create_table<span class="o">(</span>:microposts<span class="o">)</span>
</span><span class='line'>   -&gt; 0.0029s
</span><span class='line'><span class="o">==</span> <span class="m">20141112174234</span> CreateMicroposts: migrated <span class="o">(</span>0.0031s<span class="o">)</span> <span class="o">========================</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>config/routes.rb</code> にmicropostsリソースの設定が追加された</p>

<h2>参照</h2>

<p><a href="http://railstutorial.jp">Ruby on Rails チュートリアル</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #2 -Herokuのセットアップ-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/12/first-app-with-rails-number-2-setup-heroku/"/>
    <updated>2014-11-12T12:06:23+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/12/first-app-with-rails-number-2-setup-heroku</id>
    <content type="html"><![CDATA[<p>Ruby on Railsのアプリケーション構築に適したPaaSであるHerokuのセットアップをする。</p>

<h2>Herokuに必要なgemのインストール</h2>

<p>Herokuで使用するDBであるPostgreSQLと通信するための <code>pg</code> とHerokuで画像やスタイルシートなどの静的アセットを提供するための <code>rails_12factor</code> を本番（production）環境にインストールするための内容をGemfileに追記する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:production</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;pg&#39;</span><span class="p">,</span> <span class="s1">&#39;0.15.1&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;rails_12factor&#39;</span><span class="p">,</span> <span class="s1">&#39;0.0.2&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>production環境用のgemをインストールしないオプションをつけて <code>bundle install</code> を実行する。
これによりGemfile.lockが更新され、production環境に備えることができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle install --without production
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span><span class='line'>Gems in the group production were not installed.
</span><span class='line'>Use <span class="sb">`</span>bundle show <span class="o">[</span>gemname<span class="o">]</span><span class="sb">`</span> to see where a bundled gem is installed.
</span></code></pre></td></tr></table></div></figure>


<p>ここまでできたらgitにcommitしておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git commit -a -m <span class="s2">&quot;Update Gemfile.lock for Heroku&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>git commit</code> の <code>-a</code> は変更のあったファイルを自動で <code>add</code> するオプション。</p>

<h2>herokuコマンドが使えるようにする</h2>

<p>まずは以下のURLからHerokuにアカウント登録をする。</p>

<p><a href="https://signup.heroku.com/identity">https://signup.heroku.com/identity</a></p>

<p>アカウント登録が完了したら <code>heroku</code> コマンドをインストールする。
今回はAWSのLinux環境へのインストールなので以下のURL（ <code>Heroku Toolbelt</code> のStandalone）を参照して以下の手順を得る。</p>

<p><a href="https://toolbelt.heroku.com/standalone">https://toolbelt.heroku.com/standalone</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget -qO- https://toolbelt.heroku.com/install.sh <span class="p">|</span> sh
</span><span class='line'>This script requires superuser access to install software.
</span><span class='line'>You will be prompted <span class="k">for</span> your password by sudo.
</span><span class='line'><span class="o">[</span>sudo<span class="o">]</span> password <span class="k">for</span> sojiro:
</span><span class='line'>Add the Heroku CLI to your PATH using:
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;PATH=&quot;/usr/local/heroku/bin:$PATH&quot;&#39;</span> &gt;&gt; ~/.profile
</span><span class='line'>Installation <span class="nb">complete</span>
</span></code></pre></td></tr></table></div></figure>


<p>自動で <code>sudo</code> をつけて実行してくれる。インストールが完了したら出力にあるようにPATHを通す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;PATH=&quot;/usr/local/heroku/bin:$PATH&quot;&#39;</span> &gt;&gt; ~/.bashrc
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bashrc
</span><span class='line'><span class="nv">$ </span>heroku version
</span><span class='line'>heroku-toolbelt/3.15.2 <span class="o">(</span>x86_64-linux<span class="o">)</span> ruby/2.0.0
</span></code></pre></td></tr></table></div></figure>


<h2>Herokuのセットアップ</h2>

<p> <code>heroku</code> コマンドがインストールされたことを確認できたらコマンドラインからHerokuの認証を行う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>heroku login
</span><span class='line'>Enter your Heroku credentials.
</span><span class='line'>Email: your.account@email.com
</span><span class='line'>Password <span class="o">(</span>typing will be hidden<span class="o">)</span>:
</span><span class='line'>Your Heroku account does not have a public ssh key uploaded.
</span><span class='line'>Could not find an existing public key at ~/.ssh/id_rsa.pub
</span><span class='line'>Would you like to generate one? <span class="o">[</span>Yn<span class="o">]</span> Y
</span><span class='line'>Generating new SSH public key.
</span><span class='line'>Uploading SSH public key /home/user/.ssh/id_rsa.pub... <span class="k">done</span>
</span><span class='line'>Authentication successful.
</span></code></pre></td></tr></table></div></figure>


<p>認証が完了したらHerokuのセットアップをする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>heroku create
</span><span class='line'>Creating infinite-peak-4923... <span class="k">done</span>, stack is cedar-14
</span><span class='line'>https://infinite-peak-4923.herokuapp.com/ <span class="p">|</span> git@heroku.com:infinite-peak-4923.git
</span><span class='line'>Git remote heroku added
</span></code></pre></td></tr></table></div></figure>


<p>これでgitのremoteにherokuが追加される</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote -v
</span><span class='line'>heroku  git@heroku.com:infinite-peak-4923.git <span class="o">(</span>fetch<span class="o">)</span>
</span><span class='line'>heroku  git@heroku.com:infinite-peak-4923.git <span class="o">(</span>push<span class="o">)</span>
</span><span class='line'>origin  https://github.com/sojiro14/first_app.git <span class="o">(</span>fetch<span class="o">)</span>
</span><span class='line'>origin  https://github.com/sojiro14/first_app.git <span class="o">(</span>push<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Herokuへデプロイ</h2>

<p>追加されたremoteに <code>push</code> をすればHerokuへのデプロイが完了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git push heroku master
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://infinite-peak-4923.herokuapp.com/">https://infinite-peak-4923.herokuapp.com/</a></p>

<p> <code>heroku create</code> 時に出力された上記URL（アプリケーションごとに異なる）にアクセスするとHerokuにデプロイしたアプリケーションが確認できる。Rails 4.0ではこの時点で <code>The page you were looking for doesn't exist.</code> と表示されてしまう模様。</p>

<h2>参照</h2>

<p><a href="http://railstutorial.jp">Ruby on Rails チュートリアル</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #1 -railsのセットアップ-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/10/making-first-app-with-rails-number-1-setup-rails/"/>
    <updated>2014-11-10T03:27:49+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/10/making-first-app-with-rails-number-1-setup-rails</id>
    <content type="html"><![CDATA[<p>Ruby on Railsで初めてアプリを作ってみます。
今回はRailsの立ち上がりを確認するところまで。</p>

<h2>アプリのセットアップ（rails new）</h2>

<p>railsのアプリ作成は <code>rails new</code> コマンドで始まる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir rails_projects
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>rails_projects
</span></code></pre></td></tr></table></div></figure>


<p>今回のアプリ作成の為にディレクトリを作成し、早速コマンドを実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails new first_app
</span><span class='line'>...
</span><span class='line'>An error occurred <span class="k">while</span> installing sqlite3 <span class="o">(</span>1.3.10<span class="o">)</span>, and Bundler cannot <span class="k">continue</span>.
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>いくつかのディレクトリやファイルが作成されるが、最後にこのようなエラーが出てbundle失敗。
そこでGemfileを編集してbundleをやり直す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>first_app/
</span></code></pre></td></tr></table></div></figure>


<p>Gemfileを編集。内容は<a href="http://railstutorial.jp/chapters/beginning?version=4.0#sec-bundler">Ruby on Rails #Bundler</a>を参照。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle update
</span><span class='line'>...
</span><span class='line'>Building native extensions.  This could take a <span class="k">while</span>...
</span><span class='line'>ERROR:  Error installing sqlite3:
</span><span class='line'>    ERROR: Failed to build gem native extension.
</span><span class='line'>
</span><span class='line'>    /home/sojiro/.rvm/rubies/ruby-2.0.0-p594/bin/ruby extconf.rb
</span><span class='line'>checking <span class="k">for</span> sqlite3.h... no
</span><span class='line'>sqlite3.h is missing. Try <span class="s1">&#39;port install sqlite3 +universal&#39;</span>
</span><span class='line'>or <span class="s1">&#39;yum install sqlite-devel&#39;</span> and check your shared library search path <span class="o">(</span>the
</span><span class='line'>location where your sqlite3 shared library is located<span class="o">)</span>.
</span><span class='line'>*** extconf.rb failed ***
</span><span class='line'>Could not create Makefile due to some reason, probably lack of necessary
</span><span class='line'>libraries and/or headers.  Check the mkmf.log file <span class="k">for</span> more details.  You may
</span><span class='line'>need configuration options.
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>またも失敗。よく見るとsqlite-develが足りていないらしい</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo yum install sqlite-devel
</span></code></pre></td></tr></table></div></figure>


<p>sqlite-develをインストール後再度bundleによるgemのインストールを試みる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle update
</span><span class='line'>Installing sqlite3 1.3.8
</span><span class='line'>Installing turbolinks 1.1.1
</span><span class='line'>Installing uglifier 2.1.1
</span><span class='line'>Your bundle is updated!
</span><span class='line'><span class="nv">$ </span>bundle install
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span><span class='line'>Use <span class="sb">`</span>bundle show <span class="o">[</span>gemname<span class="o">]</span><span class="sb">`</span> to see where a bundled gem is installed.
</span></code></pre></td></tr></table></div></figure>


<p>インストール成功。</p>

<h2>サーバーの立ち上げ（rails server）</h2>

<p>ローカルでrailsを立ち上げるコマンド <code>rails server</code> を実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails server
</span><span class='line'>...
</span><span class='line'>Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs <span class="k">for</span> a list of available runtimes. <span class="o">(</span>ExecJS::RuntimeUnavailable<span class="o">)</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h3>Node.jsのインストール</h3>

<p> <code>rails server</code> コマンド実行でエラーが出てしまう。JavaScript runtimeがインストールされていないことが原因のよう。メッセージ通り <a href="https://github.com/sstephenson/execjs">https://github.com/sstephenson/execjs</a> に行ってみるとJavaScript runtimeとしてNode.jsが有効と書いてあるのでNode.jsをインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo rpm -ivh http://ftp.riken.jp/Linux/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm
</span><span class='line'><span class="nv">$ </span>sudo yum install nodejs npm --enablerepo<span class="o">=</span>epel
</span></code></pre></td></tr></table></div></figure>


<p>今回はyumでインストールした。そして再度 <code>rails server</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails <span class="nv">server</span>
</span><span class='line'><span class="o">=</span>&gt; Booting <span class="nv">WEBrick</span>
</span><span class='line'><span class="o">=</span>&gt; Rails 4.0.5 application starting in development on http://0.0.0.0:3000
</span><span class='line'><span class="o">=</span>&gt; Run <span class="sb">`</span>rails server -h<span class="sb">`</span> <span class="k">for</span> more startup <span class="nv">options</span>
</span><span class='line'><span class="o">=</span>&gt; Ctrl-C to shutdown server
</span></code></pre></td></tr></table></div></figure>


<p>ローカルでサーバーが立ち上がる。
今回はAWS上で作業しているので、AWS該当インスタンスのSecurity Groupで3000番portを空ける。</p>

<p><a href="http://xx.xxx.xxx.xxx:3000">http://xx.xxx.xxx.xxx:3000</a></p>

<p>にブラウザでアクセスして以下の画面が見えればOK</p>

<p><img src="http://sojiro14.github.io/images/rails/rails_starting.png"></p>

<h2>GitHubに上げておく</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git init
</span><span class='line'><span class="nv">$ </span>git remote add origin https://github.com/sojiro14/first_app.git
</span></code></pre></td></tr></table></div></figure>


<p>GitHubでリポジトリ作成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s1">&#39;Initialize repository&#39;</span>
</span><span class='line'><span class="nv">$ </span>git push -u origin master
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="http://qiita.com/you21979@github/items/4efd9fc4363573191b5c">node.jsをyumでインストールする(centos6.5)</a></li>
<li><a href="http://railstutorial.jp">Ruby on Rails チュートリアル</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LinuxにRuby on Railsをインストールする]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/05/installing-ruby-on-rails-on-linux/"/>
    <updated>2014-11-05T03:58:11+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/05/installing-ruby-on-rails-on-linux</id>
    <content type="html"><![CDATA[<p>Ruby on Railsを使ってみたいと思い、AWSにインストールした手順。</p>

<h2>Ruby version 2.0.0 を RVMを使ってインストール</h2>

<p><a href="http://sojiro14.github.io/blog/2014/10/31/installing-latest-ruby-in-linux/">Linuxに最新のRubyをインストールする</a>を参照</p>

<h2>gemsetの作成</h2>

<blockquote><p>Rubyをインストールしたら、Railsのアプリケーションを実行するために必要な他のソフトウェア向けにシステムを構成する必要があります。通常、これはgemのインストールに関連します。gemとは自己完結型のRubyコードのパッケージです。バージョン番号の異なるgem同士がコンフリクトすることがあるため、一連のgemを自己完結的にまとめたgemsetというものを作成してバージョンを使い分けるのが便利です。
（引用: <a href="http://railstutorial.jp/chapters/beginning?version=4.0#top">Ruby on Rails チュートリアル</a>）</p></blockquote>

<p>以下のコマンドでgemsetを作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm use 2.0.0@railstutorial_rails_4_0 --create --default
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>上のコマンドを実行すると、Ruby 2.0.0に関連付けられたrailstutorial_rails_4_0というgemsetを作成し (&ndash;create)、その場でgemsetを有効にし (use)、gemsetをデフォルトに設定 (&ndash;default) します。これにより、ターミナルウィンドウを開いたときに2.0.0@railstutorial_rails_4_0というRubyとgemsetの組み合わせが常に選択されるようになります。
（引用: <a href="http://railstutorial.jp/chapters/beginning?version=4.0#top">Ruby on Rails チュートリアル</a>）</p></blockquote>

<h2>RubyGemsのインストール</h2>

<p>AWSには始めからgemがインストールされていて、PATHは以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>which gem
</span><span class='line'>/usr/bin/gem
</span></code></pre></td></tr></table></div></figure>


<p>RVMでRubyをインストールするとPATHが上書きされる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>which gem
</span><span class='line'>~/.rvm/rubies/ruby-2.0.0-p594/bin/gem
</span></code></pre></td></tr></table></div></figure>


<p>今回はチュートリアルに合わせてgemのバージョンを更新する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem update --system 2.0.3
</span></code></pre></td></tr></table></div></figure>


<p>gemの設定ファイルである <code>.gemrc</code> に自動生成されるドキュメントである <code>ri</code> と <code>rdoc</code> の自動生成を抑制する設定をする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim .gemrc
</span><span class='line'><span class="nv">$ </span>cat .gemrc
</span><span class='line'>install: --no-rdoc --no-ri
</span><span class='line'>update:  --no-rdoc --no-ri
</span></code></pre></td></tr></table></div></figure>


<h2>Railsをインストールする</h2>

<p>いよいよRailsをインストールする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install rails --version 4.0.5
</span></code></pre></td></tr></table></div></figure>


<p>インストール完了。
以下のコマンドで確認する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails -v
</span><span class='line'>Rails 4.0.5
</span></code></pre></td></tr></table></div></figure>


<p>Railsがインストールされたことを確認できた</p>

<h2>参照</h2>

<p><a href="http://railstutorial.jp/chapters/beginning?version=4.0#top">Ruby on Rails チュートリアル</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linuxに最新のRubyをインストールする]]></title>
    <link href="http://sojiro14.github.io/blog/2014/10/31/installing-latest-ruby-in-linux/"/>
    <updated>2014-10-31T05:29:00+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/10/31/installing-latest-ruby-in-linux</id>
    <content type="html"><![CDATA[<p>Ruby on Railsを使ってみたいと思い、調べてみるとRails4ではRubyのバージョンは1.9以降が必須のようである。</p>

<p>自分がさくらで借りているサーバーではRubyのバージョンが1.8.7だったのでこれを新しくしてみた。</p>

<h2>RVMのインストール</h2>

<p>新しいRubyをインストールする前にRVM(Ruby Version Manager)をインストールする。これはRubyをバージョンごとに管理するツール</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -L https://get.rvm.io <span class="p">|</span> bash -s
</span></code></pre></td></tr></table></div></figure>


<p>このコマンドで自分のホームディレクトリ以下に <code>.rvm/</code> が作られ、ここにRVMがインストールされる。</p>

<p>そして <code>.profile</code> <code>.bashrc</code> <code>.zshrc</code> にPATHを通す記述が追加される。</p>

<p>また、 <code>.bash_profile</code> <code>.zlogin</code> にRVMをロードする記述が追加される。</p>

<p>RVMのインストールが完了したらロードする。ここではbashを使っているので以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">source</span> .bash_profile
</span></code></pre></td></tr></table></div></figure>


<h2>Rubyのインストール</h2>

<h3>さくらのレンタルサーバーでの失敗</h3>

<p>まずはRubyのインストールに必要なパーツを調べ、無ければインストールする。
以下のコマンドで必要なものをピックアップしインストールまで行ってくれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm requirements
</span><span class='line'>/your/home/directry/.rvm/scripts/functions/support: line 314: rvm_debug: <span class="nb">command </span>not found
</span><span class='line'>Checking requirements <span class="k">for</span> freebsd.
</span><span class='line'>Installing requirements <span class="k">for</span> freebsd.
</span><span class='line'>Updating system.
</span><span class='line'>Installing required packages: automake, bison, readline, libyaml...
</span><span class='line'>Error running <span class="s1">&#39;requirements_freebsd_libs_install automake bison readline libyaml&#39;</span>,
</span></code></pre></td></tr></table></div></figure>


<p>ここでErrorが発生。内容は必要なパッケージがインストールできなかったということ。
そこでFreeBSDのパッケージ管理コマンドである <code>pkg</code> コマンドを使ってインストールを試みる。</p>

<p>が、サーバーの設定的に自分でパッケージを追加することができなかったのでさくらのサーバーを断念してAWSに移行した。</p>

<h3>AWSに移行</h3>

<p>AWSに移行して <code>$ rvm requirements</code> までを実行する。（AWSは始めからRubyのバージョンが2.0.0だったが構わず実行）
ここでも <code>$ rvm requirements</code> が転ける。</p>

<p>そこで今度はCentOSだったので <code>yum</code> を使ってインストールを試みる。以下のコマンドは <code>$ rvm requirements</code> が教えてくれる。Errorの原因が <code>sudo</code> で実行していなかったことなので <code>sudo</code> 付きで実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install -y patch libyaml-devel libffi-devel glibc-headers autoconf gcc-c++ glibc-devel patch readline-devel zlib-devel openssl-devel automake libtool bison
</span></code></pre></td></tr></table></div></figure>


<p>これで成功。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm requirements
</span><span class='line'>Checking requirements <span class="k">for</span> amazon.
</span><span class='line'>Requirements installation successful.
</span></code></pre></td></tr></table></div></figure>


<p> <code>$ rvm requirements</code>も成功。</p>

<p>このサーバーではすでにバージョン2.0.0のRubyがインストールされていたが、RVMの配下に新たにバージョン2.0.0のRubyをインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm install 2.0.0 --with-openssl-dir<span class="o">=</span><span class="nv">$HOME</span>/.rvm/usr
</span></code></pre></td></tr></table></div></figure>


<p>インストール完了。</p>

<h2>参考</h2>

<p><a href="http://railstutorial.jp/chapters/beginning?version=4.0#top">Ruby on Rails チュートリアル</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQLにおけるNOT NULLカラムへのインサート時の挙動]]></title>
    <link href="http://sojiro14.github.io/blog/2014/10/20/behavior-of-inserting-rows-at-not-null-column-on-mysql/"/>
    <updated>2014-10-20T13:44:28+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/10/20/behavior-of-inserting-rows-at-not-null-column-on-mysql</id>
    <content type="html"><![CDATA[<p>MySQLでカラムにNOT NULLを指定した際、そのカラムに対するインサート操作による挙動が特殊なのでまとめる。</p>

<h2>単列インサートと複数列インサートで挙動が変わる</h2>

<p> <code>NOT NULL</code>を指定したカラムを含むテーブルへのインサートでは、一度に1行のみ挿入する単列インサートと、一度に複数行を挿入する複数列インサート（バルクインサート）で挙動が変わる。</p>

<p><a href="http://dev.mysql.com/doc/refman/5.6/en/insert.html">MySQLマニュアル</a>からの抜粋</p>

<blockquote><p>Inserting NULL into a column that has been declared NOT NULL. For multiple-row INSERT statements or INSERT INTO &hellip; SELECT statements, the column is set to the implicit default value for the column data type. This is 0 for numeric types, the empty string (&lsquo;&rsquo;) for string types, and the “zero” value for date and time types. INSERT INTO &hellip; SELECT statements are handled the same way as multiple-row inserts because the server does not examine the result set from the SELECT to see whether it returns a single row. (For a single-row INSERT, no warning occurs when NULL is inserted into a NOT NULL column. Instead, the statement fails with an error.)</p></blockquote>

<p>単列インサートの場合は<code>NOT NULL</code>が指定されたカラムに<code>NULL</code>値が挿入されるとそのクエリはエラーとなって失敗するが、複数列インサートの場合は警告(warning)を発するものの、クエリは正常に受け付けられる。</p>

<p>その際、<code>NULL</code>値が指定された各カラムにはそれぞれのカラムのデータ型の暗黙的なデフォルト値が挿入される。（数値型なら<code>0</code>、文字列型なら空文字<code>''</code>、etc&hellip;）</p>

<h2>検証</h2>

<ul>
<li>MySQLのバージョンは5.1.69

<ul>
<li>ただしマニュアルの該当箇所はバージョン5.7まで変更がないため、どのバージョンでも同じ挙動と思われる</li>
</ul>
</li>
<li>テーブル定義は以下</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="ss">`not_null_test`</span> <span class="p">(</span>
</span><span class='line'>  <span class="ss">`id`</span> <span class="kt">int</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">unsigned</span> <span class="k">NOT</span> <span class="no">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">`test_score`</span> <span class="kt">int</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">unsigned</span> <span class="k">NOT</span> <span class="no">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">`created_at`</span> <span class="kt">timestamp</span> <span class="k">NOT</span> <span class="no">NULL</span> <span class="k">DEFAULT</span> <span class="s1">&#39;0000-00-00 00:00:00&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="ss">`id`</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span> <span class="kp">ENGINE</span><span class="o">=</span><span class="n">InnoDB</span> <span class="k">DEFAULT</span> <span class="kp">CHARSET</span><span class="o">=</span><span class="n">utf8</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>単列インサート</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span>
</span><span class='line'><span class="nf">not_null_test</span>
</span><span class='line'><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">test_score</span><span class="p">,</span> <span class="n">created_at</span><span class="p">)</span>
</span><span class='line'><span class="k">values</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="no">NULL</span><span class="p">,</span> <span class="no">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">ERROR</span> <span class="mi">1048</span> <span class="p">(</span><span class="mi">23000</span><span class="p">):</span> <span class="k">Column</span> <span class="s1">&#39;test_score&#39;</span> <span class="n">cannot</span> <span class="n">be</span> <span class="no">null</span>
</span></code></pre></td></tr></table></div></figure>


<h3>複数列インサート</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span>
</span><span class='line'><span class="nf">not_null_test</span>
</span><span class='line'><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">test_score</span><span class="p">,</span> <span class="n">created_at</span><span class="p">)</span>
</span><span class='line'><span class="k">values</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="no">NULL</span><span class="p">,</span> <span class="no">NULL</span><span class="p">),</span>
</span><span class='line'><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="no">NULL</span><span class="p">,</span> <span class="no">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">2</span> <span class="n">rows</span> <span class="n">affected</span><span class="p">,</span> <span class="mi">2</span> <span class="nf">warnings</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span><span class='line'><span class="n">Records</span><span class="p">:</span> <span class="mi">2</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">not_null_test</span><span class="p">;</span>
</span><span class='line'><span class="o">+----+------------+---------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">test_score</span> <span class="o">|</span> <span class="n">created_at</span>          <span class="o">|</span>
</span><span class='line'><span class="o">+----+------------+---------------------+</span>
</span><span class='line'><span class="o">|</span>  <span class="mi">1</span> <span class="o">|</span>          <span class="mi">0</span> <span class="o">|</span> <span class="mi">2014</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">18</span> <span class="mi">13</span><span class="p">:</span><span class="mi">35</span><span class="p">:</span><span class="mi">10</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span>  <span class="mi">2</span> <span class="o">|</span>          <span class="mi">0</span> <span class="o">|</span> <span class="mi">2014</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">18</span> <span class="mi">13</span><span class="p">:</span><span class="mi">35</span><span class="p">:</span><span class="mi">10</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----+------------+---------------------+</span>
</span><span class='line'><span class="mi">2</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>※ timestampにテーブル定義で設定したデフォルト値<code>'0000-00-00 00:00:00'</code>ではなく、型のデフォルト値である現在時刻が入っている点に注意</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RESTとはなにか]]></title>
    <link href="http://sojiro14.github.io/blog/2014/09/14/what-is-rest/"/>
    <updated>2014-09-14T13:57:07+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/09/14/what-is-rest</id>
    <content type="html"><![CDATA[<p>APIを実装することになり、今更ながらWebのアーキテクチャスタイルであるRESTとはなにか理解するためにまとめてみた。</p>

<h2>Webのアーキテクチャスタイル</h2>

<p>Webのアーキテクチャスタイルはクライアント/サーバーというスタイルを中心に、いくつかの制限（アーキテクチャ）を複合的に組み合わせたREST(Representational State Transfer)を理想としている</p>

<h2>RESTはどのようなスタイルなのか</h2>

<p>RESTは以下のスタイルを複合的に組み合わせたアーキテクチャである</p>

<ul>
<li>クライアント/サーバー</li>
<li>ステートレスサーバー</li>
<li>キャッシュ</li>
<li>統一インターフェース</li>
<li>階層化システム</li>
<li>コードオンデマンド</li>
</ul>


<h3>クライアント/サーバー</h3>

<p>WebではHTTPでクライアントとサーバーが通信する、クライアント/サーバーアーキテクチャを採用している。クライアントはサーバーにリクエストを送り、サーバーはそれに対してレスポンスを返す。</p>

<p>ユーザーインターフェースはクライアントに任せればよく、サーバーは処理に専念できるので様々なデバイス（PC・携帯電話・ゲーム機）に対応でき、サーバーの冗長化も容易である。</p>

<h3>ステートレスサーバー</h3>

<p>ステートフル/ステートレスという考え方があるが、サーバーがステートレスなやり取りを前提としていること。</p>

<p>ステートフル/ステートレスに関しては以下のエントリを参照</p>

<ul>
<li><a href="http://sojiro14.github.io/blog/2014/09/13/stateful-and-stateless/">ステートフル/ステートレスとはどういうことか</a></li>
</ul>


<h3>キャッシュ</h3>

<p>一度取得したリソースをクライアント側である程度の期間保持して使い回すこと。</p>

<ul>
<li>メリット

<ul>
<li>同じリソースを取得するためにその都度クライアント/サーバー間で通信する必要がなくなる</li>
<li>これによりネットワークの帯域節約や処理の高速化を実現できる</li>
</ul>
</li>
<li>デメリット

<ul>
<li>適切に制御しないと意図せず古いリソースを参照してしまうことがある</li>
<li>特に大規模なシステムではどこで何がキャッシュされているか正確に把握するのは容易ではない</li>
</ul>
</li>
</ul>


<h3>統一インターフェース</h3>

<p>リソースに対する操作を統一したインターフェースで行う。</p>

<p>HTTP/1.1ではリソースに対するメソッドが8つのみ定義されている。このようにインターフェースを限定することで様々なコンポーネントが生まれても統一された仕様としてリソースへの操作が行われ、それぞれの独立性が保たれることで多様性を受け入れることができる。</p>

<h3>階層化システム</h3>

<p>統一インターフェースを採用することにより、クライアント/サーバー間にプロキシなどのコンポーネントを設置してもクライアントはそのままリクエストを送ることができる。</p>

<p>これにより大規模システムではロードバランサーを導入したり、HTTPインターフェースを持たないコンポーネントに対してHTTPインターフェースをもつサーバーを返して処理をするなどの階層化が可能となる。</p>

<p>このようなアーキテクチャを階層化システムと呼ぶ。</p>

<h3>コードオンデマンド</h3>

<p>プログラムをサーバーからクライアントが受け取り、それをクライアント上で実行するアーキテクチャスタイル。JavaScriptやFlashがこれに該当する。</p>

<ul>
<li>メリット

<ul>
<li>サーバーと都度通信することなくクライアント側のみで処理できることが増える</li>
<li>これによりユーザーのアクションに対する処理の速度が向上する</li>
</ul>
</li>
<li>デメリット

<ul>
<li>クライアント/サーバー間でやり取りされるリソースが不明確になる</li>
<li>クライアント側の裁量が増える分、サーバーとやり取りされるリソースの内容が明確ではなくなる</li>
</ul>
</li>
</ul>


<h2>RESTful</h2>

<p>RESTの思想に忠実に設計されていることをRESTfulである、と言う。</p>

<p>RESTは上記の通り分散ネットワークを効率的に、可用性・冗長性高く利用するための理論であり、Webが理想とするアーキテクチャスタイルである。</p>

<p>この思想に則った設計がされることで多様なシステムの中にも仕様の統一感が生まれ、Webの世界が広がったと言える。</p>

<h2>参考</h2>

<p><a href="http://www.amazon.co.jp/gp/product/4774142042/ref=as_li_tf_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=4774142042&amp;linkCode=as2&amp;tag=sojiro14-22">Webを支える技術 -HTTP、URI、HTML、そしてREST (WEB+DB PRESS plus)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ステートフル ステートレスとはどういうことか]]></title>
    <link href="http://sojiro14.github.io/blog/2014/09/13/stateful-and-stateless/"/>
    <updated>2014-09-13T18:00:03+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/09/13/stateful-and-stateless</id>
    <content type="html"><![CDATA[<p>コンポーネント間のやり取りにはステートフル/ステートレスという考え方がある。FTPではステートフルなやり取りが、HTTPではステートレスなやり取りが採用されいるが、それぞれの特徴についてまとめてみる。</p>

<h2>セッション状態（アプリケーション状態）</h2>

<p>システムにログインしてからログアウトするまでの一連の操作をセッションと呼ぶ。その一連の操作の中のそれぞれの状態をセッション状態と呼ぶ。</p>

<h2>ステートフル</h2>

<p>ステートフルなやり取りではサーバーはクライアントのセッション状態を保持している。</p>

<ul>
<li>メリット

<ul>
<li>やり取りが完結に済む</li>
<li>それによりネットワークの帯域を節約できる</li>
</ul>
</li>
<li>デメリット

<ul>
<li>クライアントの状態を都度把握しておかなければいけないのでクライアントが増えると負荷も増える</li>
<li>サーバーを複数台設置する場合にはそれぞれのサーバー間でクライアントの状態を同期しなければいけない</li>
<li>これらの理由によりスケールアウトには向かない</li>
</ul>
</li>
</ul>


<h2>ステートレス</h2>

<p>ステートレスなやり取りではサーバーはクライアントのセッション情報を保持しない。</p>

<ul>
<li>メリット

<ul>
<li>クライアントのリクエストは状態に依存せず、常にリソースに対する操作に必要十分な情報となる</li>
<li>よってサーバーが増えてもそのままのリクエストでいつも同じリソースに対する操作ができる</li>
<li>このためスケールアウトに向いている</li>
<li>また処理がクライアントの状態に依らないので処理がシンプルになる</li>
</ul>
</li>
<li>デメリット

<ul>
<li>やり取りが冗長になりがちである</li>
<li>またリソースへの操作が必要になる度にそのやり取りを繰り返す必要がある</li>
<li>これによりネットワークの帯域を消費し、処理も遅くなる</li>
<li>サーバーが状態を保持していないのでエラーが起きたときのハンドリングが複雑になりがちである</li>
</ul>
</li>
</ul>


<h2>参考</h2>

<p><a href="http://www.amazon.co.jp/gp/product/4774142042/ref=as_li_tf_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=4774142042&amp;linkCode=as2&amp;tag=sojiro14-22">Webを支える技術 -HTTP、URI、HTML、そしてREST (WEB+DB PRESS plus)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[reveal.jsを使ったプレゼンテーションの作成]]></title>
    <link href="http://sojiro14.github.io/blog/2014/08/31/presentation-by-reveal-dot-js/"/>
    <updated>2014-08-31T19:17:21+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/08/31/presentation-by-reveal-dot-js</id>
    <content type="html"><![CDATA[<p><a href="http://yapcasia.org/2014/">YAPC::Asia 2014</a>のLTに登壇させていただいた。その際、サクッとオシャレなプレゼンテーションを作ることができるということでreveal.jsを使って作ったのでメモ。</p>

<ul>
<li><a href="http://sojiro14.github.io/presentation/2014/08/30/YAPC-Asia-LT/">実際のプレゼンテーション</a>（一部の画像を削除したもの）</li>
</ul>


<h2>reveal.jsとは</h2>

<p>htmlやmarkdown形式で簡単にリッチなプレゼンテーションを書くことができるjsやcssを中心としたライブラリ</p>

<ul>
<li><a href="https://github.com/hakimel/reveal.js/">reveal.jsの実体</a></li>
<li><a href="http://lab.hakim.se/reveal-js/#/">本家Demo</a></li>
</ul>


<h2>reveal.jsの入手</h2>

<p><a href="https://github.com/hakimel/reveal.js">GitHubのreveal.jsリポジトリ</a>からzipをダウンロードする。右下の<code>Download ZIP</code>ボタンを押すだけで完了。</p>

<h2>プレゼンテーションの作成</h2>

<p>基本的に<code>index.html</code>を編集していく。特に以下の部分を編集していけば良い。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;slides&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="c">&lt;!---...</span>
</span><span class='line'><span class="c">ここを編集</span>
</span><span class='line'><span class="c">...--&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>デフォルトでは<a href="http://lab.hakim.se/reveal-js/#/">本家Demo</a>の仕様となっている。</p>

<h2>ページの追加</h2>

<p> <code>&lt;section&gt;&lt;/section&gt;</code>タグを追加することで新しいページを追加することができる。新しいページは右側に追加されていく。</p>

<p>さらに<code>&lt;section&gt;&lt;/section&gt;</code>タグの中に<code>&lt;section&gt;&lt;/section&gt;</code>タグをネストすることで、縦方向にスライドを追加することができる。</p>

<h2>スライドの動きの設定</h2>

<p> <code>&lt;section&gt;</code>タグに<code>data-transition</code>や<code>data-background-transition</code>を指定することでスライドの動きを設定できる。</p>

<p>デフォルトではスライドが回転するように動いていくが、例えば以下のように設定することで横方向にスライドが流れるようになる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section</span> <span class="na">data-transition=</span><span class="s">&quot;linear&quot;</span> <span class="na">data-background-transition=</span><span class="s">&quot;slide&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>data-transition

<ul>
<li>スライドに載っているコンテンツの動きを指定</li>
</ul>
</li>
<li>data-background-transition

<ul>
<li>スライド自体の動きを指定</li>
</ul>
</li>
</ul>


<h2>背景の設定</h2>

<p> <code>&lt;section&gt;</code>タグに<code>data-background</code>を指定することでスライドの背景を設定できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section</span> <span class="na">data-background=</span><span class="s">&quot;#000000&quot;</span><span class="nt">&gt;</span>  <span class="c">&lt;!--背景色を指定--&gt;</span>
</span><span class='line'><span class="nt">&lt;section</span> <span class="na">data-background=</span><span class="s">&quot;img.jpg&quot;</span><span class="nt">&gt;</span>  <span class="c">&lt;!--背景画像をパスで指定--&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>コードブロックを設定</h2>

<p>コードブロックを挿入するには<code>&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</code>タグを挿入する。</p>

<p> <code>&lt;code&gt;</code>タグのclassに言語を指定することで適切なハイライトが適用される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'>    <span class="nt">&lt;pre&gt;&lt;code</span> <span class="na">class=</span><span class="s">&quot;html&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;body&gt;</span>
</span><span class='line'>            <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;example&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                test
</span><span class='line'>            <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>スライド内コンテンツの動きの設定</h2>

<p>スライドのページ内でいくつかの動きを設定したいときは</p>

<ul>
<li><code>section</code>タグのidに<code>fragments</code>を指定する。</li>
<li>ページ内のコンテンツのclassに<code>fragment</code>を指定する。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section</span> <span class="na">id=</span><span class="s">&quot;fragments&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;h2&gt;</span>example<span class="nt">&lt;/h2&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ol&gt;</span>
</span><span class='line'>        <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;fragment&quot;</span><span class="nt">&gt;</span>test1<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;fragment&quot;</span><span class="nt">&gt;</span>test2<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>        <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">&quot;fragment&quot;</span><span class="nt">&gt;</span>test3<span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ol&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記のように設定するとリストの要素が一つずつ出現する。</p>

<p> <code>fragment</code>classにはオプションを設定することができ、オプションによって動作をが変わる。</p>

<ul>
<li><code>class="fragment current-visible"</code>: 要素が出現する（デフォルト）</li>
<li><code>class="fragment grow"</code>: 要素が大きくなる</li>
<li><code>class="fragment shrink"</code>: 要素が小さくなる</li>
<li><code>class="fragment roll-in"</code>: 要素が回転しながら出現</li>
<li><code>class="fragment fade-out"</code>: 要素が消える</li>
<li><code>class="fragment highlight-green"</code>: 要素が指定した色になる(red, blueなども指定可能)</li>
<li><code>class="fragment highlight-current-blue"</code>: 要素が指定した色で出現する(red, greenなども指定可能)</li>
</ul>


<h2>マークダウンでの記述</h2>

<p>reveal.jsではプレゼンテーションをマークダウンで記述することもできる</p>

<ul>
<li><code>section</code>タグに<code>data-markdown</code>を指定</li>
<li><code>&lt;script type="text/template"&gt;&lt;/script&gt;</code>ブロック内に記述</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section</span> <span class="na">data-markdown</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/template&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="err">#</span> <span class="err">ここに</span><span class="nx">markdown</span><span class="err">形式で記述</span>
</span><span class='line'>    <span class="err">```</span>
</span><span class='line'>    <span class="nx">echo</span> <span class="s2">&quot;you can also write code.&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="err">````</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>コードブロック内でも<code>&lt;/script&gt;</code>タグが出現するとマークダウンの終了と誤解されるので注意</p>

<h2>参考</h2>

<ul>
<li><a href="https://github.com/hakimel/reveal.js">GitHub</a></li>
<li><a href="http://qiita.com/budougumi0617/items/19b19019bbe01f86e251">Reveal.js、Markdown、Githubでスライドを作成する。</a></li>
<li><a href="http://qiita.com/ryurock/items/9c6de36b9d6a716e7992">なんかかっこいいプレゼンテーションテンプレートを探しているならreveal.js使ってみろって</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Amazon Linux AMIにagをインストールした手順]]></title>
    <link href="http://sojiro14.github.io/blog/2014/08/25/howto-install-ag-in-amazon-linux-ami/"/>
    <updated>2014-08-25T23:38:16+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/08/25/howto-install-ag-in-amazon-linux-ami</id>
    <content type="html"><![CDATA[<p>AWSでWebサーバーを借りた。このサーバーに<code>ag</code>をインストールした際の手順。</p>

<h2>agとは</h2>

<p>ソースコードから特定のwordを検索する際に使うコマンド<code>grep</code>がより賢く改良されたのが<code>ack</code>コマンド。</p>

<p>この<code>ack</code>をさらに改良し、検索を高速化させたのが<code>ag</code>コマンド（正式名称:The Silver Searcher）である。</p>

<h2>Amazon Linux AMIへのインストール</h2>

<p>MacにはHomebrewを使って<code>brew install the_silver_searcher</code>とするだけで簡単に入れることができた。</p>

<p>AWSで借りたサーバーはAmazon Linux AMIという独自のイメージだったが、<code>yum</code>が使えるのでCentOSと同じ以下の手順で入れることができた。</p>

<h3>ディレクトリの作成とソースのダウンロード</h3>

<p>ソースをダウンロード、インストールするディレクトリを作成し、gitから<code>ag</code>のソースを持ってくる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir -p <span class="nv">$HOME</span>/local/source
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> <span class="nv">$HOME</span>/local/source
</span><span class='line'><span class="nv">$ </span>git clone https://github.com/ggreer/the_silver_searcher
</span></code></pre></td></tr></table></div></figure>


<h3>ソースをmakeするための準備</h3>

<p>対象のサーバーはまっさらな状態でコンパイラなどもなかったため、それぞれインストールする。</p>

<p>前述の通りAmazon Linux AMIではyumを使うことができる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo su -
</span><span class='line'>yum -y groupinstall <span class="s2">&quot;Development Tools&quot;</span>
</span><span class='line'>yum -y install pcre-devel xz-devel
</span><span class='line'><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>


<h3>インストール</h3>

<p>コンパイルしてインストールする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> <span class="nv">$HOME</span>/local/source/the_silver_searcher
</span><span class='line'><span class="nv">$ </span>./build.sh
</span><span class='line'><span class="nv">$ </span>sudo make install
</span></code></pre></td></tr></table></div></figure>


<h3>パスを通す</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span>
</span><span class='line'><span class="nv">$ </span>vim .bashrc
</span><span class='line'><span class="nv">$ </span>cat .bashrc
</span><span class='line'>...
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$HOME</span>/local/bin:<span class="nv">$PATH</span>
</span><span class='line'>...
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> .bashrc
</span></code></pre></td></tr></table></div></figure>


<p>これで<code>ag</code>が使えるようになった</p>

<h2>参考</h2>

<ul>
<li><a href="https://github.com/ggreer/the_silver_searcher">the_silver_searcher</a></li>
<li><a href="http://qiita.com/sifue/items/55d0c5c11a0571af3b8e">grepやackよりも速いコード検索ツールのagをローカルビルドインストールする</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWSに複数のユーザーを設定した手順]]></title>
    <link href="http://sojiro14.github.io/blog/2014/08/22/add-users-on-aws-instance/"/>
    <updated>2014-08-22T00:58:55+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/08/22/add-users-on-aws-instance</id>
    <content type="html"><![CDATA[<p>AWSでサーバーを借りて複数人で共同開発することになった。
それに伴い、借りたサーバーに各々がアクセスできるようユーザーの設定をした際の手順メモ。</p>

<h2>AWSでWEBサーバーを借りる</h2>

<p>AWSのWebサーバーレンタルサービスはEC2と呼ばれる。
サーバーをレンタルするには様々あるサービス群からEC2を選択し、<code>Launch Instance</code> ボタンを押してInstanceの立ち上げを開始する。</p>

<ul>
<li>AMI(Amazon Machine Image)の選択

<ul>
<li>借りるマシンの種類を選ぶ。用途によって様々な種類がある（WordPressが既に設定されているものなど）</li>
</ul>
</li>
<li>Instance Typeの選択

<ul>
<li>マシンのスペックを選ぶ。メモリやストレージのサイズなど</li>
</ul>
</li>
<li>Instanceの詳細設定</li>
<li>Storageの設定</li>
<li>Instanceへのtag付け</li>
<li>Security Groupの選択

<ul>
<li>アクセスを許可するプロトコルやIPなどを指定してその設定をグループとして扱う</li>
</ul>
</li>
</ul>


<p>上記のほとんどの設定は後から変更できる。AMIの選択がしっかりできれば問題なさそう。</p>

<p>最後まで完了すると秘密鍵(hogehoge.pem)が発行される。これは絶対になくしてはいけない。</p>

<h2>立ち上げたInstanceに複数ユーザーを設定する</h2>

<p>立ち上げたInstanceにアクセスする。
今回はWebサーバーとして立ち上げるのでSecurity GroupにはHTTPとSSHでのアクセスを許可するよう設定しておく。</p>

<h3>秘密鍵でアクセスする</h3>

<p>まずはInstance立ち上げ時に発行された秘密鍵でアクセスする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>sojiro@local ~<span class="o">]</span><span class="nv">$ </span>chmod <span class="m">600</span> hogehoge.pem  <span class="c"># 秘密鍵の権限を設定（厳しすぎても甘過ぎても使えない）</span>
</span><span class='line'><span class="o">[</span>sojiro@local ~<span class="o">]</span><span class="nv">$ </span>ssh -i hogehoge.pem ec2-user@xx.xx.xx.xxx  <span class="c"># ec2-userでログイン</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ダウンロード直後の秘密鍵は権限が適切ではない可能性がある。その場合は600に設定する。</li>
<li><code>ssh</code>の<code>-i</code>オプションを使って秘密鍵を指定してログイン（秘密鍵を指定しないと~/.ssh/id_rsaが使われる）

<ul>
<li>最初は初期設定されているec2-userというユーザーでログインする</li>
<li>コマンドはEC2のメニューバーからInstancesページに行き、Instanceを選択してページ上部の<code>Connect</code>ボタンを押すと表示される</li>
</ul>
</li>
</ul>


<h3>ユーザーの作成</h3>

<p>Instanceにログインできたら早速ユーザーを作成していく</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>ec2-user@ip-hogehoge ~<span class="o">]</span><span class="nv">$ </span>sudo su -  <span class="c"># rootユーザーになる</span>
</span><span class='line'><span class="o">[</span>root@ip-hogehoge ~<span class="o">]</span> adduser sojiro  <span class="c"># ユーザー(sojiro)を作成</span>
</span><span class='line'><span class="o">[</span>root@ip-hogehoge ~<span class="o">]</span> passwd sojiro   <span class="c"># sojiroにパスワードを設定</span>
</span><span class='line'><span class="o">[</span>root@ip-hogehoge ~<span class="o">]</span> vim /etc/sudoers  <span class="c"># sojiroに権限を設定</span>
</span></code></pre></td></tr></table></div></figure>


<p>ユーザーを作り、ユーザーに権限を付与する。今回は大雑把にrootと同じことができる権限を付与。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@ip-hogehoge ~<span class="o">]</span> cat /etc/sudors
</span><span class='line'>...
</span><span class='line'>root    <span class="nv">ALL</span><span class="o">=(</span>ALL<span class="o">)</span>       ALL
</span><span class='line'>sojiro  <span class="nv">ALL</span><span class="o">=(</span>ALL<span class="o">)</span>       ALL
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h3>公開鍵の登録</h3>

<p>作成したユーザーにlocalからアクセスするための公開鍵を設定する。
（鍵のペアはlocalで予め<code>ssh-keygen -t rsa</code>で作成しておく）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@ip-hogehoge ~<span class="o">]</span> su sojiro
</span><span class='line'><span class="o">[</span>sojiro@ip-hogehoge root<span class="o">]</span><span class="nv">$ </span><span class="nb">cd</span>  <span class="c"># sojiroのホームディレクトリに移動</span>
</span><span class='line'><span class="o">[</span>sojiro@ip-hogehoge ~<span class="o">]</span><span class="nv">$ </span>mkdir .ssh
</span><span class='line'><span class="o">[</span>sojiro@ip-hogehoge ~<span class="o">]</span><span class="nv">$ </span>vim .ssh/authorized_keys  <span class="c"># 公開鍵を置く（今回はlocalのid_rsa.pubをコピペした）</span>
</span><span class='line'><span class="o">[</span>sojiro@ip-hogehoge ~<span class="o">]</span><span class="nv">$ </span>chmod <span class="m">700</span> .ssh
</span><span class='line'><span class="o">[</span>sojiro@ip-hogehoge ~<span class="o">]</span><span class="nv">$ </span>chmod <span class="m">600</span> .ssh/authorized_keys
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>公開鍵を置くファイルの名前は<code>.ssh</code>ディレクトリ配下の<code>authorized_keys</code>と決まっている</li>
<li><code>.ssh</code>ディレクトリと<code>authorized_keys</code>の権限にも気をつける</li>
</ul>


<h3>作成したユーザーでInstanceにログインできることを確認</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>sojiro@local ~<span class="o">]</span><span class="nv">$ </span>ssh sojiro@xx.xx.xx.xxx  <span class="c"># ログインできればOK</span>
</span></code></pre></td></tr></table></div></figure>


<p>localのrsa鍵でログインできることを確認できれば完了。</p>

<p>この操作で必要なユーザーを適宜作成する。</p>

<h2>参考</h2>

<p><a href="http://d.hatena.ne.jp/torazuka/20110420/ssh">新規に作成した鍵でEC2インスタンスにSSH接続する</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctopressにDISQUSのコメント欄を導入する]]></title>
    <link href="http://sojiro14.github.io/blog/2014/08/09/add-disqus-comment-section-on-my-blog-by-octopress/"/>
    <updated>2014-08-09T16:02:24+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/08/09/add-disqus-comment-section-on-my-blog-by-octopress</id>
    <content type="html"><![CDATA[<h2>ブログにコメント欄を追加したい</h2>

<p>本ブログにコメント欄を追加しようと思い立った。</p>

<p><a href="https://disqus.com/">DISQUS</a>というコミュニケーションサービスが好評のようなので導入してみる。</p>

<ul>
<li>DISQUSを使うための準備</li>
<li>OctopressでのDISQUS導入方法</li>
</ul>


<h2>DISQUSを使うための準備</h2>

<h3>DISQUSのアカウントを作成する</h3>

<p><a href="https://disqus.com/">DISQUS</a>のWebサイトからアカウントを作成。登録に必要なのはメールアドレスのみ。</p>

<h3>自分のWebサイトをDISQUSに登録する</h3>

<p>DISQUSの<a href="https://disqus.com/admin/create/">サイト登録ページ</a>から自分のサイトを登録する</p>

<p>登録が完了すると設定ページが表示されるので、ここで設定をしつつ、ページ中段に表示されている<code>Shortname</code>の文字列を確認する</p>

<h2>OctopressでのDISQUS導入方法</h2>

<h3>configファイルへの記載</h3>

<p>OctopressでのDISQUS導入はconfigファイルに先ほどDISQUSで取得したShortnameを記載するのみで完了する。</p>

<p> <code>_config.yml</code> の<code>disqus_short_name</code>に自分のサイトのShortnameを指定する。</p>

<figure class='code'><figcaption><span>_config.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># Disqus Comments</span>
</span><span class='line'><span class="l-Scalar-Plain">disqus_short_name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yoursitesshortname</span>
</span><span class='line'><span class="l-Scalar-Plain">disqus_show_comment_count</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでブログの各ページの下部にDISQUSのコメント欄が表示されるようになる。</p>

<h3>disqus_show_comment_count</h3>

<p><code>disqus_show_comment_count</code> はDISQUSコメント欄を導入するページのヘッダにコメント欄へのリンクを表示させるかどうかを指定する項目。</p>

<h4>trueのとき</h4>

<p><img src="http://sojiro14.github.io/images/disqus/header_with_comment_link.png"></p>

<h4>falseのとき</h4>

<p><img src="http://sojiro14.github.io/images/disqus/header_without_comment_link.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HUBOTを使ったirc-bot改修メモ #1 -noticeで発言させる-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/07/31/irc-bot-by-hubot-repair-number-1/"/>
    <updated>2014-07-31T04:45:04+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/07/31/irc-bot-by-hubot-repair-number-1</id>
    <content type="html"><![CDATA[<p><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">こちらの記事</a>でつくったirc-botの発言をnoticeにしたい。（botの発言内容に名前やALLなどの文字列が含まれると当人にmentionが飛んでしまうため）</p>

<h2>HUBOT_IRC_SEND_NOTICE_MODE</h2>

<p>環境変数 <code>HUBOT_IRC_SEND_NOTICE_MODE</code> を <code>true</code> とすれば良い</p>

<p>実行ファイル(runhubot)に追記</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_IRC_NICK</span><span class="o">=</span><span class="s2">&quot;bot_kun&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_IRC_ROOMS</span><span class="o">=</span><span class="s2">&quot;#target_channel&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_IRC_SERVER</span><span class="o">=</span><span class="s2">&quot;irc.hogehoge.local&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_IRC_SEND_NOTICE_MODE</span><span class="o">=</span><span class="nb">true</span>
</span><span class='line'><span class="c">#export HUBOT_IRC_PASSWORD=&quot;hoge&quot;</span>
</span><span class='line'>
</span><span class='line'>bin/hubot -a irc --name myhubot
</span></code></pre></td></tr></table></div></figure>


<p>この実行ファイルからirc-botを起動すると当該irc-botの発言はすべてnoticeとなる。</p>

<h2>処理の実体</h2>

<p>HUBOT_IRC_SEND_NOTICE_MODEフラグが立っている場合は <code>bot</code> オブジェクトから <code>notice</code> メソッドが呼ばれる。</p>

<ul>
<li><a href="https://github.com/nandub/hubot-irc/blob/master/src/irc.coffee#L18">フラグの確認</a></li>
<li><a href="https://github.com/nandub/hubot-irc/blob/master/src/irc.coffee#L56-76">noticeメソッド呼び出し</a></li>
</ul>


<p><code>notice</code> メソッドが呼ばれている <code>bot</code> オブジェクトの実体は <code>new Irc.Client</code> である。</p>

<ul>
<li><a href="https://github.com/nandub/hubot-irc/blob/master/src/irc.coffee#L192">botオブジェクトの生成</a></li>
</ul>


<p>参考: <a href="http://node-irc.readthedocs.org/en/latest/API.html">http://node-irc.readthedocs.org/en/latest/API.html</a></p>
]]></content>
  </entry>
  
</feed>
