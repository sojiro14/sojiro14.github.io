<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sojiro's Blog]]></title>
  <link href="http://sojiro14.github.io/atom.xml" rel="self"/>
  <link href="http://sojiro14.github.io/"/>
  <updated>2015-05-05T19:49:49+09:00</updated>
  <id>http://sojiro14.github.io/</id>
  <author>
    <name><![CDATA[Sojiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA['Hubot --create' は古い]]></title>
    <link href="http://sojiro14.github.io/blog/2015/05/05/hubot-create-is-now-old/"/>
    <updated>2015-05-05T17:50:15+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/05/05/hubot-create-is-now-old</id>
    <content type="html"><![CDATA[<p>このブログで過去に何度かHubotについて書いたときに、新しいbotを作るときのコマンドは <code>hubot --create bot_name</code> だったのですが、このコマンドが非推奨になったようなのでメモ。</p>

<h2>hubot &ndash;create が使えない</h2>

<p>新しいbotを作ろうとして <code>hubot --create</code> コマンドを打つと以下のように怒られた</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>hubot --create test_bot
</span><span class='line'><span class="s1">&#39;hubot --create&#39;</span> is deprecated. Use the yeoman generator instead:
</span><span class='line'>    npm install -g yo generator-hubot
</span><span class='line'>    mkdir -p test_bot
</span><span class='line'>    yo hubot
</span><span class='line'>See https://github.com/github/hubot/blob/master/docs/README.md <span class="k">for</span> more details on getting started.
</span></code></pre></td></tr></table></div></figure>


<p>ところがseeとなっているREADMEファイルは存在しない模様&hellip;</p>

<h2>yo と generator-hubot とは何か</h2>

<p>よくわからないが <code>yo</code> と <code>generator-hubot</code> をインストールしろと言われているのはわかるので調べてみる</p>

<h3>yo と generator-xxx</h3>

<p>yoはYeomanというGoole社が開発した統合開発ツール群に属するツールの一つで、「雛形作成ツール」であるらしい</p>

<p>そしてその雛形は &ldquo;generator-xxx&rdquo; という形でさまざま用意されており、そのHubot版が <code>generator-hubot</code> と言う訳である</p>

<p>つまり上記エラーメッセージは</p>

<ul>
<li>雛形作成ツールである <code>yo</code> と、Hubotの雛形である <code>generator-hubot</code> をインストールし</li>
<li>新規ディレクトリ上で <code>yo</code> を実行してHubotの雛形を作るべし</li>
</ul>


<p>ということのようである</p>

<h2>yo と generator-hubot のインストール</h2>

<p>指定された通り以下のようにインストールする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>npm install -g yo generator-hubot
</span></code></pre></td></tr></table></div></figure>


<p>（余談：私の場合はNode.jsのインストールされたpathとnpmのrootが違っていたため少々上手くいかなかった。エラーメッセージは素直によく読むべきだ。。。）</p>

<h2>yo の実行</h2>

<p>インストールが成功したら、新しいbotのディレクトリを作ってそこで <code>yo</code> を実行する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir test_bot
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>test_bot
</span><span class='line'><span class="nv">$ </span>yo hubot  <span class="c"># これは generator-hubot の雛形を作る、という意味</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>yo hubot</code> を実行するとHubotのAAが表示され、いくつかのやり取りが立ち上がる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>yo hubot
</span><span class='line'>                     _____________________________
</span><span class='line'>                    /                             <span class="se">\ </span>
</span><span class='line'>   //<span class="se">\ </span>             <span class="p">|</span>      Extracting input <span class="k">for</span>    <span class="p">|</span>
</span><span class='line'>  ////<span class="se">\ </span>   _____    <span class="p">|</span>   self-replication process   <span class="p">|</span>
</span><span class='line'> //////<span class="se">\ </span> /_____<span class="se">\ </span>  <span class="se">\ </span>                            /
</span><span class='line'> <span class="o">=======</span> <span class="p">|</span><span class="o">[</span>^_/<span class="se">\_</span><span class="o">]</span><span class="p">|</span>   /----------------------------
</span><span class='line'>  <span class="p">|</span>   <span class="p">|</span> _<span class="p">|</span>___@@__<span class="p">|</span>__
</span><span class='line'>  +<span class="o">===</span>+/  ///     <span class="se">\_\ </span>
</span><span class='line'>   <span class="p">|</span> <span class="p">|</span>_<span class="se">\ </span>/// HUBOT/<span class="se">\\</span>
</span><span class='line'>   <span class="p">|</span>___/<span class="se">\/</span>/      /  <span class="se">\\</span>
</span><span class='line'>         <span class="se">\ </span>     /   +---+
</span><span class='line'>          <span class="se">\_</span>___/    <span class="p">|</span>   <span class="p">|</span>
</span><span class='line'>           <span class="p">|</span> //<span class="p">|</span>    +<span class="o">===</span>+
</span><span class='line'>            <span class="se">\/</span>/      <span class="p">|</span>xx<span class="p">|</span>
</span><span class='line'>
</span><span class='line'>? Owner: sojiro
</span><span class='line'>? Bot name: slack-test-bot
</span><span class='line'>? Description: Slack Bot <span class="nb">test</span>
</span><span class='line'>? Bot adapter: <span class="o">(</span>campfire<span class="o">)</span> slack
</span><span class='line'>? Bot adapter: slack
</span><span class='line'>   create bin/hubot
</span><span class='line'>   create bin/hubot.cmd
</span><span class='line'>   create Procfile
</span><span class='line'>   create README.md
</span><span class='line'>   create external-scripts.json
</span><span class='line'>   create hubot-scripts.json
</span><span class='line'>   create .gitignore
</span><span class='line'>   create package.json
</span><span class='line'>   create scripts/example.coffee
</span><span class='line'>   create .editorconfig
</span><span class='line'>                     _____________________________
</span><span class='line'> _____              /                             <span class="se">\ </span>
</span><span class='line'> <span class="se">\ </span>   <span class="se">\ </span>            <span class="p">|</span>   Self-replication process   <span class="p">|</span>
</span><span class='line'> <span class="p">|</span>    <span class="p">|</span>    _____    <span class="p">|</span>          complete...         <span class="p">|</span>
</span><span class='line'> <span class="p">|</span>__<span class="se">\\</span><span class="p">|</span>   /_____<span class="se">\ </span>  <span class="se">\ </span>    Good luck with that.    /
</span><span class='line'>   <span class="p">|</span>//+  <span class="p">|</span><span class="o">[</span>^_/<span class="se">\_</span><span class="o">]</span><span class="p">|</span>   /----------------------------
</span><span class='line'>  <span class="p">|</span>   <span class="p">|</span> _<span class="p">|</span>___@@__<span class="p">|</span>__
</span><span class='line'>  +<span class="o">===</span>+/  ///     <span class="se">\_\ </span>
</span><span class='line'>   <span class="p">|</span> <span class="p">|</span>_<span class="se">\ </span>/// HUBOT/<span class="se">\\</span>
</span><span class='line'>   <span class="p">|</span>___/<span class="se">\/</span>/      /  <span class="se">\\</span>
</span><span class='line'>         <span class="se">\ </span>     /   +---+
</span><span class='line'>          <span class="se">\_</span>___/    <span class="p">|</span>   <span class="p">|</span>
</span><span class='line'>           <span class="p">|</span> //<span class="p">|</span>    +<span class="o">===</span>+
</span><span class='line'>            <span class="se">\/</span>/      <span class="p">|</span>xx<span class="p">|</span>
</span><span class='line'>...
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>各項目それぞれデフォルト値が設定されており、なにも入力せずEnterを押していくとその通りになる</p>

<p>今回はSlack用のbotだったので Bot adapter: の欄で <code>slack</code> と入力した</p>

<p>他にも用途に合わせてadapterが用意されているようである</p>

<p>この <code>yo</code> 実行により、Hubotの雛形が作成され、 <code>hubot --create</code> と同様にセットアップが完了する</p>

<p>なおかつadapterを予め設定できる分、セットアップが楽になっている</p>

<h2>最後に</h2>

<p>今回はHubotに絡んで偶発的に <code>yo</code> を知りましたが、かなり便利そうなのでYeoman含めて今後も使ってみたいところです</p>

<h2>参照</h2>

<ul>
<li><a href="http://yosuke-furukawa.hatenablog.com/entry/2013/07/04/085814">Yeoman入門(第一部、yoを使う)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Slack BotをHeroku上で動かす]]></title>
    <link href="http://sojiro14.github.io/blog/2015/05/04/transfer-the-slack-bot-to-heroku/"/>
    <updated>2015-05-04T21:38:12+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/05/04/transfer-the-slack-bot-to-heroku</id>
    <content type="html"><![CDATA[<p><a href="http://blog.sojiro.me/blog/2014/12/15/slack-bot-by-hubot/">HUBOTを使ったSlack Bot作成メモ</a>で作ったSlack Botをローカル以外の環境で動かしたくなったのでHeroku上で動かせるようにしてみます。</p>

<p>あらかじめ<a href="https://www.heroku.com">Heroku</a>にSign upしておきます。</p>

<h2>Heroku Toolbelt のインストール</h2>

<p>HerokuのCLIツールであるHeroku Toolbeltをインストールします</p>

<p>今回はMacを使っているのでこちらからダウンロード&amp;インストールしました</p>

<p><a href="https://toolbelt.heroku.com/osx">https://toolbelt.heroku.com/osx</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>heroku version
</span><span class='line'>heroku-toolbelt/3.34.0 <span class="o">(</span>x86_64-darwin10.8.0<span class="o">)</span> ruby/1.9.3
</span><span class='line'>You have no installed plugins.
</span></code></pre></td></tr></table></div></figure>


<h2>コマンドラインからHerokuにログイン</h2>

<p>HerokuにSign upしたときのIDとPasswordでコマンドライン上からHerokuにログインする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>heroku login
</span><span class='line'>Enter your Heroku credentials.
</span><span class='line'>Email: sojiro@example.com
</span><span class='line'>Password <span class="o">(</span>typing will be hidden<span class="o">)</span>:
</span><span class='line'>Authentication successful.
</span></code></pre></td></tr></table></div></figure>


<h2>hubotのディレクトリをGitHubにpush</h2>

<p>HerokuにはGitHubを通じてデプロイするようなのでhubotのあるディレクトリをGitHubにpushしておく</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ~/git/hubot/my_slack_bot/
</span><span class='line'><span class="nv">$ </span>git init
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s1">&#39;initial commit&#39;</span>
</span><span class='line'><span class="nv">$ </span>git remote add origin git@github.com:your_name/slack_bot_repository  <span class="c"># 自分で用意したslack bot用のGitリポジトリ</span>
</span><span class='line'><span class="nv">$ </span>git push origin master
</span></code></pre></td></tr></table></div></figure>


<h2>Herokuにデプロイ</h2>

<p>Herokuにアプリケーションを作る</p>

<p>このときstackにcedarを指定する。アプリケーションの名前は指定しないとHerokuが勝手に名前をつけてくれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>heroku create --stack cedar
</span><span class='line'>Creating random_name... <span class="k">done</span>, stack is cedar-10
</span><span class='line'>https://random_name.herokuapp.com/ <span class="p">|</span> https://git.heroku.com/random_name.git
</span><span class='line'>Git remote heroku added
</span><span class='line'>updating...done. Updated to 3.35.0
</span></code></pre></td></tr></table></div></figure>


<p>ここまできたらいよいよデプロイ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git push heroku master
</span><span class='line'>Counting objects: 16, <span class="k">done</span>.
</span><span class='line'>Delta compression using up to <span class="m">8</span> threads.
</span><span class='line'>Compressing objects: 100% <span class="o">(</span>13/13<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>Writing objects: 100% <span class="o">(</span>16/16<span class="o">)</span>, 6.58 KiB <span class="p">|</span> <span class="m">0</span> bytes/s, <span class="k">done</span>.
</span><span class='line'>Total <span class="m">16</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>
</span><span class='line'>remote: Compressing <span class="nb">source </span>files... <span class="k">done</span>.
</span><span class='line'>remote: Building <span class="nb">source</span>:
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h2>Herokuに設定を追加</h2>

<p>HerokuにHubotとSlackの設定を追加していく</p>

<p>ここでは<a href="http://blog.sojiro.me/blog/2014/12/15/slack-bot-by-hubot/">HUBOTを使ったSlack Bot作成メモ</a>で払い出されたものを指定する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># HUBOT_SLACK_TOKENの設定</span>
</span><span class='line'><span class="nv">$ </span>heroku config:add <span class="nv">HUBOT_SLACK_TOKEN</span><span class="o">=</span>xxxx-123456789-abcdefghijklmnopqrstuvwxyz
</span><span class='line'>Setting config vars and restarting random_name... <span class="k">done</span>, v4
</span><span class='line'>HUBOT_SLACK_TOKEN: xxxx-123456789-abcdefghijklmnopqrstuvwxyz
</span><span class='line'>
</span><span class='line'><span class="c"># SlackのTeam設定</span>
</span><span class='line'><span class="nv">$ </span>heroku config:add <span class="nv">HUBOT_SLACK_TEAM</span><span class="o">=</span>your_team_name
</span><span class='line'>Setting config vars and restarting random_name... <span class="k">done</span>, v5
</span><span class='line'>HUBOT_SLACK_TEAM: your_team_name
</span><span class='line'>
</span><span class='line'><span class="c"># Botの名前の設定</span>
</span><span class='line'><span class="nv">$ </span>heroku config:add <span class="nv">HUBOT_SLACK_BOTNAME</span><span class="o">=</span>your_bot_name
</span><span class='line'>Setting config vars and restarting random_name... <span class="k">done</span>, v6
</span><span class='line'>HUBOT_SLACK_BOTNAME: your_bot_name
</span><span class='line'>
</span><span class='line'><span class="c"># HerokuアプリのURL設定</span>
</span><span class='line'><span class="nv">$ </span>heroku config:add <span class="nv">HEROKU_URL</span><span class="o">=</span>http://random_name.herokuapp.com
</span><span class='line'>Setting config vars and restarting random_name... <span class="k">done</span>, v7
</span><span class='line'>HEROKU_URL: http://random_name.herokuapp.com
</span></code></pre></td></tr></table></div></figure>


<h2>HerokuのWebプロセスの起動</h2>

<p>最後にHerokuのWebプロセスを起動する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>heroku ps:scale <span class="nv">web</span><span class="o">=</span>1
</span><span class='line'>Scaling dynos... <span class="k">done</span>, now running web at 1:1X.
</span></code></pre></td></tr></table></div></figure>


<p>SlackにBotが現れれば成功！</p>

<p>今回はRedisを使わなかったのでHerokuのaddon設定やクレジットカードの登録無しでいけました</p>

<h2>参照</h2>

<ul>
<li><a href="http://memo.sanographix.net/post/88371442780">Hubotで西木野真姫bot作ってSlackに呼ぶ</a></li>
<li><a href="http://tech-sketch.jp/2013/12/hubot-install-heroku.html">GitHubがOpsツールの中心として活用しているHubotを使ってみる～インストール、スクリプトの作成、Herokuへのデプロイ～</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初めてのVagrant]]></title>
    <link href="http://sojiro14.github.io/blog/2015/05/03/the-first-step-for-vagrant/"/>
    <updated>2015-05-03T22:18:11+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/05/03/the-first-step-for-vagrant</id>
    <content type="html"><![CDATA[<p>仮想環境構築ツールのVagrantが便利らしいという噂を聞いて使ってみたところ確かに便利でした。</p>

<p>以前VirtualBox上での環境構築に手間取った経験があったのでこれは今後も積極的に使って行きたいと思い、最初の手順をメモします。</p>

<p>前提として今回仮想化ソフトとしてはVirtualBoxを使うのでインストールされているという前提で以下を書きます。</p>

<h2>Vagrantのインストール</h2>

<p>まずはVagrantをインストールする</p>

<p><a href="https://www.vagrantup.com/downloads.html">https://www.vagrantup.com/downloads.html</a></p>

<p>こちらのダウンロードフォームから使っているOSに合ったものをダウンロードすればOK</p>

<p>ダウンロードしたファイルをポチポチやってインストールが完了するので以下のコマンドで確かめる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant --version
</span><span class='line'>Vagrant 1.7.2
</span></code></pre></td></tr></table></div></figure>


<h2>boxの追加</h2>

<p>Vagrantでは仮想環境それぞれの設定をboxという単位で管理する</p>

<p>現在管理しているboxの情報は <code>vagrant box list</code> で確認できる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant box list
</span><span class='line'>There are no installed boxes! Use <span class="sb">`</span>vagrant box add<span class="sb">`</span> to add some.
</span></code></pre></td></tr></table></div></figure>


<p>最初はboxが何もインストールされていないのでこのような結果</p>

<p>boxは自分で作成することもできるが、既に誰かが作ってくれたものを取り込むこともできる</p>

<p><a href="http://www.vagrantbox.es/">http://www.vagrantbox.es/</a></p>

<p>こちらのサイトでは有志が様々なboxを提供してくれているので今回はこちらを使わせていただくことにする</p>

<p>リストからインストールするboxを決めたら、以下のコマンドで追加する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant box add 名前 boxファイル
</span></code></pre></td></tr></table></div></figure>


<p>今回はインストールするboxをcentos64という名前で管理するために以下のようにした</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant box add centos64 http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-x86_64-v20131103.box
</span><span class='line'><span class="o">==</span>&gt; box: Adding box <span class="s1">&#39;centos64&#39;</span> <span class="o">(</span>v0<span class="o">)</span> <span class="k">for</span> provider:
</span><span class='line'>   box: Downloading: http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-x86_64-v20131103.box
</span><span class='line'><span class="o">==</span>&gt; box: Successfully added box <span class="s1">&#39;centos64&#39;</span> <span class="o">(</span>v0<span class="o">)</span> <span class="k">for</span> <span class="s1">&#39;virtualbox&#39;</span>!
</span></code></pre></td></tr></table></div></figure>


<p> <code>vagrant box list</code> コマンドで確認するとcentos64という名前でboxがインストールされたことがわかる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant box list
</span><span class='line'>centos64 <span class="o">(</span>virtualbox, 0<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>仮想環境を立ち上げる</h2>

<p>boxを追加したら早速そのboxを使って仮想環境を立ち上げる</p>

<p>今回は <code>~/virtual_machines/centos64/</code> というディレクトリでこの仮想環境を管理することにする</p>

<p>まずは <code>vagrant init</code> コマンドで環境立ち上げの準備をする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ~/virtual_machines/centos64
</span><span class='line'><span class="nv">$ </span>vagrant init centos64
</span><span class='line'>A <span class="sb">`</span>Vagrantfile<span class="sb">`</span> has been placed in this directory. You are now
</span><span class='line'>ready to <span class="sb">`</span>vagrant up<span class="sb">`</span> your first virtual environment! Please <span class="nb">read</span>
</span><span class='line'>the comments in the Vagrantfile as well as documentation on
</span><span class='line'><span class="sb">`</span>vagrantup.com<span class="sb">`</span> <span class="k">for</span> more information on using Vagrant.
</span></code></pre></td></tr></table></div></figure>


<p>このinitコマンドを打つことで <code>Vagrantfile</code> が作られ、VirtualBox上にも仮想環境が現れる</p>

<p> <code>Vagrantfile</code> ではこの仮想環境の設定を規定している</p>

<p>ここまで準備が完了したらいよいよ環境を立ち上げる <code>vagrant up</code> コマンドを使う</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant up
</span><span class='line'>Bringing machine <span class="s1">&#39;default&#39;</span> up with <span class="s1">&#39;virtualbox&#39;</span> provider...
</span><span class='line'><span class="o">==</span>&gt; default: Importing base box <span class="s1">&#39;centos64&#39;</span>...
</span><span class='line'><span class="o">==</span>&gt; default: Matching MAC address <span class="k">for</span> NAT networking...
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>VirtualBox上で仮想環境が立ち上がっていることを確認できたら成功</p>

<p>仮想環境の状態は <code>vagrant status</code> コマンドでも確認できる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant status
</span><span class='line'>Current machine states:
</span><span class='line'>
</span><span class='line'>default                   running <span class="o">(</span>virtualbox<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>The VM is running. To stop this VM, you can run <span class="sb">`</span>vagrant halt<span class="sb">`</span> to
</span><span class='line'>shut it down forcefully, or you can run <span class="sb">`</span>vagrant <span class="nb">suspend</span><span class="sb">`</span> to simply
</span><span class='line'><span class="nb">suspend </span>the virtual machine. In either <span class="k">case</span>, to restart it again,
</span><span class='line'>simply run <span class="sb">`</span>vagrant up<span class="sb">`</span>.
</span></code></pre></td></tr></table></div></figure>


<h2>立ち上げた仮想環境に入る</h2>

<p>立ち上げた仮想環境に入るのは非常に簡単で、管理ディレクトリ上で <code>vagrant ssh</code> コマンドを打てばよい</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant ssh
</span><span class='line'>Welcome to your Vagrant-built virtual machine.
</span></code></pre></td></tr></table></div></figure>


<p>後は通常通り好きなように仮想環境を使える</p>

<h2>ネットワークの設定をする</h2>

<p>今回立ち上げた環境では主にWebサービスの開発を行いたいのでローカルからこの環境にアクセスするための設定をする</p>

<p>ネットワークの設定は <code>Vagrantfile</code> に規定されているのでこのファイルを変更する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim Vagrantfile
</span><span class='line'><span class="nv">$ </span>cat Vagrantfile
</span><span class='line'>...
</span><span class='line'>config.vm.network <span class="s2">&quot;private_network&quot;</span>, ip: <span class="s2">&quot;192.168.33.10&quot;</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>private_networkの設定をしている行のコメントアウトを外すことでIP <code>192.168.33.10</code> でアクセス可能になる</p>

<p> <code>Vagrantfile</code> の設定を変更したら <code>vagrant reload</code> コマンドで設定をリロードしてやる必要がある</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant <span class="nv">reload</span>
</span><span class='line'><span class="o">==</span>&gt; default: Attempting graceful shutdown of VM...
</span><span class='line'><span class="o">==</span>&gt; default: Clearing any previously <span class="nb">set </span>forwarded ports...
</span><span class='line'><span class="o">==</span>&gt; default: Clearing any previously <span class="nb">set </span>network interfaces...
</span><span class='line'><span class="o">==</span>&gt; default: Preparing network interfaces based on configuration...
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h2>決まった操作の設定</h2>

<p>仮想環境を立ち上げた後、Webサーバーの設定など毎回やる操作がある場合はそれらを予め記述しておいてVagrant側で実行することができる(provisioning)</p>

<p>まずは <code>Vagrantfile</code> に設定を追加する。設定する行は <code>config.vm.provision</code> の行。</p>

<p>元々コメントアウトで記述があるようにインラインで <code>Vagrantfile</code> 内に直接書くこともできるが、以下のように設定することで外部ファイルに書き出すこともできる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>config.vm.provision :shell, :path <span class="o">=</span>&gt; <span class="s2">&quot;provision.sh&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>provision.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum -y install httpd
</span><span class='line'>sudo service httpd start
</span><span class='line'>sudo chkconfig httpd on
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p> <code>Vagrantfile</code> を設定したら忘れず <code>vagrant reload</code></p>

<p>その後provisionの実行は以下のコマンド</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant provision
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="http://dotinstall.com/lessons/basic_vagrant">Vagrant入門</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressのページに「もっと見る」を設定する方法]]></title>
    <link href="http://sojiro14.github.io/blog/2015/04/30/add-excerpt-link-on-octopress-pages/"/>
    <updated>2015-04-30T20:12:17+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/04/30/add-excerpt-link-on-octopress-pages</id>
    <content type="html"><![CDATA[<p>今回はOctopressで生成したページにいわゆる「もっと見る」リンクを設定する方法をメモします。</p>

<h2>「もっと見る」の場所を指定する</h2>

<p>記事の内容としてトップページで表示させる範囲が決まったら、その直後に「もっと見る」リンクを設置します。</p>

<p>設置方法は以下のコメントを記事内の「もっと見る」リンクを設置する箇所に記述するだけです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'> <span class="c">&lt;!-- more --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>「もっと見る」以降の記事内容はトップページ上では省略されます。</p>

<p>「もっと見る」リンクは個別記事ページにリンクしています。</p>

<h2>リンクの文言を変更する</h2>

<p>上記で設定したリンクはデフォルトでは「Read on →」と表示されます。</p>

<p>リンクの文言は <code>_config.yml</code> ファイルの項目 <code>excerpt_link</code> で管理されています。</p>

<p>従って以下のように設定することでリンクの文言が「もっと見る」となります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>excerpt_link: &quot;もっと見る&quot;
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h2>参照</h2>

<ul>
<li><a href="http://morizyun.github.io/blog/octopress-hatena-disqus-new-tab/">5分でできる簡単 Octopress セッティング</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github PagesとOctopressで作ったブログに独自ドメインを設定する]]></title>
    <link href="http://sojiro14.github.io/blog/2015/01/30/setting-custom-domain-on-a-blog-by-octopress-and-github-pages/"/>
    <updated>2015-01-30T00:14:23+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/01/30/setting-custom-domain-on-a-blog-by-octopress-and-github-pages</id>
    <content type="html"><![CDATA[<p>本ブログをリニューアルしたついでに新しくドメインを取ってこのブログに適用してみた。</p>

<p>Github PagesとOctopressを使ったブログへの独自ドメイン設定のメモとして残しておく。</p>

<h2>やるべきこと</h2>

<p>今回は <code>blog.sojiro.me</code> というサブドメインを使うことにしたので、やるべき手順は以下の2つのみ。</p>

<ul>
<li>DNSホストにGithub Pagesのドメインを向いたCNAMEレコードを追加する</li>
<li>ブログのソースに <code>CNAME</code> ファイルを追加する</li>
</ul>


<!-- more -->


<h2>CNAMEレコードとはなにか</h2>

<p>CNAMEレコードとはDNSに用意されたレコード(ドメイン設定)の種類の一つで、
特定のドメインに対して別名を設定することができる。</p>

<p>今回は元々のGithub Pagesのドメインである</p>

<p> <code>sojiro14.github.io</code></p>

<p>というドメインの別名として</p>

<p> <code>blog.sojiro.me</code></p>

<p>というドメインを設定することで、ブラウザから<code>blog.sojiro.me</code>にアクセスした場合も内部的に名前解決して <code>sojiro14.github.io</code> の内容を表示できるようにする。</p>

<h2>CNAMEファイル</h2>

<p>Github Pagesでは <code>CNAME</code> というファイルをルートディレクトリに設置することでリダイレクト処理を設定することができる</p>

<p>このリダイレクト処理として、 <code>sojiro14.github.io</code> にアクセスがあった場合に <code>blog.sojiro.me</code> にリダイレクトする、という設定をしておけば、さらに前述のDNS上のCNAMEレコードにより内部的にGithub Pagesの内容を見に行くことになり、常に <code>blog.sojiro.me</code> ドメインでブログにアクセスすることになる。</p>

<h2>実施手順</h2>

<p>DNSへのCNAMEレコードの登録よりも <code>CNAME</code> ファイルの設置を先に行ってしまうと、
Github Pagesの元々のドメインへのアクセスが独自ドメインにリダイレクトされた際に名前解決が上手く行かず、適切なページが表示されない、
という状態になってしまうので、</p>

<ol>
<li>DNSホストにGithub Pagesのドメインを向いたCNAMEレコードを追加する</li>
<li>ブログのソースに <code>CNAME</code> ファイルを追加する</li>
</ol>


<p>という順序で行う</p>

<h2>実践</h2>

<h3>CNAMEレコードの登録</h3>

<p>今回はお名前.comでドメインを取得したのでお名前.comでのCNAMEレコード追加の手順となる</p>

<p>お名前Navi > ドメイン設定 > DNS関連機能の設定</p>

<p>から対象のドメインを選択して次へ進むと、</p>

<p>DNSレコード設定を利用する</p>

<p>という選択肢があるので、そこから以下のようにCNAMEレコードを設定する。</p>

<p><img src="http://sojiro14.github.io/images/onamae/add_cname_record.png"></p>

<p>通常CNAMEレコードのvalueに設定するドメインは最後に <code>.</code> を付ける必要があるが、お名前.comでは自動で設定してくれるので、最後の <code>.</code> を付ける必要はない。</p>

<p>また、レコードを追加後、ページ下部の確認ボタンから確認、完了の手続きを踏まないと登録されないので注意。</p>

<p>登録完了から反映まで10分ほどかかる。</p>

<h3>CNAMEファイルの設置</h3>

<p>Octopressの管理ディレクトリにて以下の手順で設置する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;blog.sojiro.me&#39;</span> &gt;&gt; <span class="nb">source</span>/CNAME
</span><span class='line'><span class="nv">$ </span>rake gen_deploy
</span></code></pre></td></tr></table></div></figure>


<p>これで <code>sojiro14.github.io</code> にアクセスすると <code>blog.sojiro.me</code> にリダイレクトされ、 <code>blog.sojiro.me</code> ではGithub Pagesの内容を表示することができるようになった。</p>

<h2>参照</h2>

<ul>
<li><a href="http://octopress.org/docs/deploying/github/">Deploying to Github Pages</a></li>
<li><a href="http://blog.livedoor.jp/techblog/archives/65340720.html">CNAMEの間違った使い方</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.jsを使ってWeb Serverを作ってみました]]></title>
    <link href="http://sojiro14.github.io/blog/2015/01/07/making-a-web-server-with-node-dot-js/"/>
    <updated>2015-01-07T00:55:25+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/01/07/making-a-web-server-with-node-dot-js</id>
    <content type="html"><![CDATA[<p>Node.jsを使って簡単なWeb Serverを作ってみた際のメモ。</p>

<p>今回使うNode.jsのバージョン</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>node -v
</span><span class='line'>v0.10.32
</span></code></pre></td></tr></table></div></figure>


<h2>Web Serverオブジェクトの準備</h2>

<p>Node.jsにはWeb Serverの機能を備えたオブジェクトが用意されている</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nodeの <code>http</code> モジュールを読み込んだ後、 <code>createServer()</code> メソッドでWeb Serverオブジェクトを取得できる</p>

<!-- more -->


<h2>requestイベントの追加</h2>

<p>取得したServerオブジェクトのリスナーとして、requestを受けたときに発火するrequestイベントを追加する</p>

<p>リスナーの追加には <code>emitter.on(event, listener)</code> という形式のメソッドを使う。今回はeventに <code>'request'</code> を指定する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">server</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;request&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span><span class="p">});</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s1">&#39;Hello World.&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここでリスナーとして指定するコールバック関数は以下の2つの引数を受ける</p>

<ul>
<li>requestの内容をもつ <code>http.IncomingMessage</code> クラスのインスタンス</li>
<li>responseの内容となる <code>http.ServerResponse</code> クラスのインスタンス</li>
</ul>


<h3>response.writeHead(statusCode, [reasonPhrase], [headers])</h3>

<p>responseのHeadを規定するメソッド</p>

<h3>response.write(chunk, [encoding])</h3>

<p>responseのbodyを規定するメソッド。 <code>chunk</code> に文字列を指定した場合は第二引数にencodingを指定することができる。デフォルトはUTF-8。</p>

<h3>response.end([data], [encoding])</h3>

<p>serverにresponseの完了を通知するメソッド。responseの終了時に必ず呼ばなければならない。</p>

<h2>接続を受け入れる</h2>

<p>ポートとホスト名を指定してWeb Serverへの接続を受け付ける</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">1337</span><span class="p">,</span> <span class="s1">&#39;xx.xxx.xxx.xxx&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>コードの全体像</h2>

<figure class='code'><figcaption><span>web.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">();</span>
</span><span class='line'><span class="nx">server</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;request&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span><span class="p">});</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s1">&#39;Hello World.&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">response</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">1337</span><span class="p">,</span> <span class="s1">&#39;xx.xxx.xxx.xxx&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;server listening...&#39;</span><span class="p">);</span>  <span class="c1">//起動時のメッセージ</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Web Serverの起動と確認</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>node web.js
</span><span class='line'>server listening...
</span></code></pre></td></tr></table></div></figure>


<p>Web Serverを起動したらブラウザで確認する</p>

<p><img src="http://sojiro14.github.io/images/nodejs/web_server/hello_world.png"></p>

<p>簡単なWeb Serverの完成</p>

<h2>参照</h2>

<ul>
<li><a href="http://nodejs.org/api/http.html#http_http">Node.js v0.10.35 Manual &amp; Documentation#HTTP</a></li>
<li><a href="http://nodejs.org/api/events.html#events_events">Node.js v0.10.35 Manual &amp; Documentation#Events</a></li>
<li><a href="http://dotinstall.com/lessons/basic_nodejs/26205">ドットインストール</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初めてのMongoDB]]></title>
    <link href="http://sojiro14.github.io/blog/2015/01/02/the-first-step-for-mongodb/"/>
    <updated>2015-01-02T02:20:55+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/01/02/the-first-step-for-mongodb</id>
    <content type="html"><![CDATA[<p>NoSQLの流れを汲むMongoDBを初めて使ってみるにあたり、基本的な操作をまとめてみる。</p>

<h1>基本的な用語</h1>

<ul>
<li>データベース(database)</li>
<li>コレクション(collection)</li>
<li>ドキュメント(document)</li>
</ul>


<h2>データベース</h2>

<p>MySQLなどのRDBMSにおけるデータベース、という言葉とほぼ同じ意味として使われる。
データ管理の大元となる単位。</p>

<h2>コレクション</h2>

<p>RDBMSにおけるテーブル(table)に相当するもの。
MongoDBはスキーマレスなので、テーブルのように厳格なスキーマが決まっている訳ではなく、特定の対象に対するデータの集まり(正にコレクション)と言える。</p>

<h2>ドキュメント</h2>

<p>RDBMSにおけるレコード(record)に相当するもの。
各コレクションを構成する要素であり、BSONと呼ばれるJSONライクな形式で記述される。</p>

<!-- more -->


<h2>MongoDBの起動</h2>

<p>MongoDBの起動、停止には <code>service mongod</code> コマンドを使う</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo service mongod status
</span><span class='line'>mongod is stopped
</span><span class='line'><span class="nv">$ </span>sudo service mongod start
</span><span class='line'>Starting mongod:                                           <span class="o">[</span>  OK  <span class="o">]</span>
</span><span class='line'><span class="nv">$ </span>sudo service mongod status
</span><span class='line'>mongod <span class="o">(</span>pid xxxx<span class="o">)</span> is running...
</span></code></pre></td></tr></table></div></figure>


<p>停止させる時には以下のようにする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo service mongod stop
</span><span class='line'>Stopping mongod:                                           <span class="o">[</span>  OK  <span class="o">]</span>
</span><span class='line'><span class="nv">$ </span>sudo service mongod status
</span><span class='line'>mongod is stopped
</span></code></pre></td></tr></table></div></figure>


<h2>DBの作成と選択</h2>

<p>MongoDBを起動したら、早速コンソールを立ち上げて操作してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongo testdb
</span><span class='line'>MongoDB shell version: 2.6.6
</span><span class='line'>connecting to: testdb
</span><span class='line'>&gt;
</span></code></pre></td></tr></table></div></figure>


<p> <code>mongo</code> の後にDB名を指定してコンソールに入る。
このとき、存在しないDB名を指定すると新規でDBが作られる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; show dbs<span class="p">;</span>
</span><span class='line'>admin   <span class="o">(</span>empty<span class="o">)</span>
</span><span class='line'><span class="nb">local   </span>0.078GB
</span><span class='line'>mydb    0.078GB
</span><span class='line'>testdb  <span class="o">(</span>empty<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>上記コマンドで既存のDBを確認することができる。 <code>testdb</code> は新規で作成された。</p>

<p>使用するDBを変更するときは以下のようにする。今回は既に作ってある <code>mydb</code> を使うことにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; use mydb
</span><span class='line'>switched to db mydb
</span></code></pre></td></tr></table></div></figure>


<p>これで <code>mydb</code> に操作対象が移った</p>

<h1>コレクションの操作</h1>

<h2>コレクションの確認</h2>

<p>まず対象DBに存在するコレクションを確認してみる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; show collections<span class="p">;</span>
</span><span class='line'>system.indexes
</span><span class='line'>users
</span></code></pre></td></tr></table></div></figure>


<p>いま <code>system.indexes</code> と <code>users</code> というコレクションが存在することがわかる。</p>

<p> <code>system.indexes</code> は各DBのインデックス情報を管理するコレクションで、各DBにそれぞれ1つ作成されるもの</p>

<h2>コレクションの作成</h2>

<p>次に新たにコレクションを作成してみる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.createCollection<span class="o">(</span><span class="s1">&#39;items&#39;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;ok&quot;</span> : <span class="m">1</span> <span class="o">}</span>
</span><span class='line'>&gt; show collections<span class="p">;</span>
</span><span class='line'>items
</span><span class='line'>system.indexes
</span><span class='line'>users
</span></code></pre></td></tr></table></div></figure>


<p> <code>items</code> という新たなコレクションが作成された</p>

<h2>コレクションの名前の変更</h2>

<p> <code>items</code> コレクションの名前を <code>weapons</code> に変更する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.items.renameCollection<span class="o">(</span><span class="s1">&#39;weapons&#39;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;ok&quot;</span> : <span class="m">1</span> <span class="o">}</span>
</span><span class='line'>&gt; show collections<span class="p">;</span>
</span><span class='line'>system.indexes
</span><span class='line'>users
</span><span class='line'>weapons
</span></code></pre></td></tr></table></div></figure>


<p>コレクションの名前が変わったことが確認できる</p>

<h2>コレクションの削除</h2>

<p> <code>weapons</code> コレクションを削除する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.weapons.drop<span class="o">()</span><span class="p">;</span>
</span><span class='line'><span class="nb">true</span>
</span><span class='line'>&gt; show collections<span class="p">;</span>
</span><span class='line'>system.indexes
</span><span class='line'>users
</span></code></pre></td></tr></table></div></figure>


<p> <code>weapons</code> コレクションが削除された</p>

<h1>ドキュメントの操作</h1>

<h2>ドキュメントの検索(find)</h2>

<p>コレクションの操作の次はドキュメントの操作について見ていく。
ドキュメントの検索には <code>find</code> メソッドを使う</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">()</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fd93ce8a5464641af4eb&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">10</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fee1ce8a5464641af4ec&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_1&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">20</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ed&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_2&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">67</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ee&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_3&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">51</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>対象のコレクションを指定して <code>find</code> を引数無しで実行すると全件検索となる</p>

<h2>条件を指定して検索</h2>

<p> <code>{key:value}</code> を指定して検索も可能</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">({</span>name:<span class="s2">&quot;sojiro&quot;</span><span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fd93ce8a5464641af4eb&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">10</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>{key:value}</code> の指定には正規表現を用いることもできる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">({</span>name:/sojiro_<span class="o">[</span>12<span class="o">]</span>/<span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fee1ce8a5464641af4ec&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_1&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">20</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ed&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_2&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">67</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ANDとOR</h2>

<p>検索で複数の条件を組み合わせるには <code>$and</code> や <code>$or</code> を使う</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">({</span>
</span><span class='line'>    <span class="nv">$and</span>: <span class="o">[</span>
</span><span class='line'>        <span class="o">{</span>name:/sojiro_<span class="o">[</span>12<span class="o">]</span>/<span class="o">}</span>,
</span><span class='line'>        <span class="o">{</span>score: <span class="o">{</span><span class="nv">$lt</span>: 60<span class="o">}}</span>,
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'><span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fee1ce8a5464641af4ec&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_1&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">20</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここで <code>$lt</code> は「〜より小さい」を表す演算子</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">({</span>
</span><span class='line'>    <span class="nv">$or</span>: <span class="o">[</span>
</span><span class='line'>        <span class="o">{</span>name:/sojiro_<span class="o">[</span>12<span class="o">]</span>/<span class="o">}</span>,
</span><span class='line'>        <span class="o">{</span>score: <span class="o">{</span><span class="nv">$gt</span>: 50<span class="o">}}</span>,
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'><span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fee1ce8a5464641af4ec&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_1&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">20</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ed&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_2&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">67</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ee&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_3&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">51</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここで <code>$gt</code> は「〜より大きい」を表す演算子</p>

<h2>検索結果の限定</h2>

<p>検索結果に特定のkeyだけを指定したい場合や、 <code>_id</code> を非表示にしたい場合がある</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">({}</span>, <span class="o">{</span>name:1<span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fd93ce8a5464641af4eb&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro&quot;</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fee1ce8a5464641af4ec&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_1&quot;</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ed&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_2&quot;</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ee&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_3&quot;</span> <span class="o">}</span>
</span><span class='line'>&gt; db.users.find<span class="o">({}</span>, <span class="o">{</span>name:0<span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fd93ce8a5464641af4eb&quot;</span><span class="o">)</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">10</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fee1ce8a5464641af4ec&quot;</span><span class="o">)</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">20</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ed&quot;</span><span class="o">)</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">67</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ee&quot;</span><span class="o">)</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">51</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>find()</code> の第二引数にkeyの表示、非表示を設定することができる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">({}</span>, <span class="o">{</span>name:1, score:1<span class="o">})</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように複数のkeyに対して表示非表示の設定ができるが、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">({}</span>, <span class="o">{</span>name:1, score:0<span class="o">})</span><span class="p">;</span>
</span><span class='line'>error: <span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;$err&quot;</span> : <span class="s2">&quot;Can&#39;t canonicalize query: BadValue Projection cannot have a mix of inclusion and exclusion.&quot;</span>,
</span><span class='line'>  <span class="s2">&quot;code&quot;</span> : 17287
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>key毎に表示非表示を別々に設定しようとすると怒られる</p>

<p>ただし、 <code>_id</code> だけは例外である</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">({}</span>, <span class="o">{</span>name:1, _id:0<span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro&quot;</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_1&quot;</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_2&quot;</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_3&quot;</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ドキュメントの挿入(insert)</h2>

<p>これまで見てきた <code>users</code> コレクションに新たなドキュメントを追加してみる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.insert<span class="o">({</span>name:<span class="s2">&quot;sojiro_4&quot;</span>, score:40<span class="o">})</span><span class="p">;</span>
</span><span class='line'>WriteResult<span class="o">({</span> <span class="s2">&quot;nInserted&quot;</span> : <span class="m">1</span> <span class="o">})</span>
</span><span class='line'>&gt; db.users.find<span class="o">({</span>name:<span class="s2">&quot;sojiro_4&quot;</span><span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a777d7a49abc8e743c71ac&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_4&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">40</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>JavaScriptの使用も可能</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.insert<span class="o">({</span>name:<span class="s2">&quot;sojiro_5&quot;</span>, score: Math.floor<span class="o">(</span>Math.random<span class="o">()</span> * 100<span class="o">)})</span><span class="p">;</span>
</span><span class='line'>WriteResult<span class="o">({</span> <span class="s2">&quot;nInserted&quot;</span> : <span class="m">1</span> <span class="o">})</span>
</span><span class='line'>&gt; db.users.find<span class="o">({</span>name:<span class="s2">&quot;sojiro_5&quot;</span><span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a77886a49abc8e743c71ad&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_5&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">38</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ドキュメントの更新(update)</h2>

<p>MongoDBのupdateには少し癖がある。</p>

<p>更新するドキュメントが属するコレクションと、対象ドキュメントの条件を指定するところは直感的だが、特定のkeyのみupdateする場合は <code>$set</code> を使う必要がある。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">({</span>name:<span class="s2">&quot;sojiro_4&quot;</span><span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a777d7a49abc8e743c71ac&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_4&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">40</span> <span class="o">}</span>
</span><span class='line'>&gt; db.users.update<span class="o">({</span>name:<span class="s2">&quot;sojiro_4&quot;</span><span class="o">}</span>, <span class="o">{</span><span class="nv">$set</span>: <span class="o">{</span>score:44<span class="o">}})</span><span class="p">;</span>
</span><span class='line'>WriteResult<span class="o">({</span> <span class="s2">&quot;nMatched&quot;</span> : 1, <span class="s2">&quot;nUpserted&quot;</span> : 0, <span class="s2">&quot;nModified&quot;</span> : <span class="m">1</span> <span class="o">})</span>
</span><span class='line'>&gt; db.users.find<span class="o">({</span>name:<span class="s2">&quot;sojiro_4&quot;</span><span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a777d7a49abc8e743c71ac&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_4&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">44</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>$set</code> を使わずにupdateを実行すると、対象ドキュメントの内容全てが書き変わる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">({</span>name:<span class="s2">&quot;sojiro_4&quot;</span><span class="o">})</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a777d7a49abc8e743c71ac&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_4&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">44</span> <span class="o">}</span>
</span><span class='line'>&gt; db.users.update<span class="o">({</span>name:<span class="s2">&quot;sojiro_4&quot;</span><span class="o">}</span>, <span class="o">{</span>score:100<span class="o">})</span><span class="p">;</span>
</span><span class='line'>WriteResult<span class="o">({</span> <span class="s2">&quot;nMatched&quot;</span> : 1, <span class="s2">&quot;nUpserted&quot;</span> : 0, <span class="s2">&quot;nModified&quot;</span> : <span class="m">1</span> <span class="o">})</span>
</span><span class='line'>&gt; db.users.find<span class="o">({</span>name:<span class="s2">&quot;sojiro_4&quot;</span><span class="o">})</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>{name: "sojiro_4"}</code> に該当するドキュメントが <code>{score:100}</code> に書き換えられたため、 <code>{name:"sojiro_4"}</code> では検索結果に出てこない</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">()</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fd93ce8a5464641af4eb&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">10</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fee1ce8a5464641af4ec&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_1&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">20</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ed&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_2&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">67</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ee&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_3&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">51</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a777d7a49abc8e743c71ac&quot;</span><span class="o">)</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">100</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a77886a49abc8e743c71ad&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_5&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">38</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ドキュメントの削除(remove)</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.find<span class="o">()</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fd93ce8a5464641af4eb&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">10</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fee1ce8a5464641af4ec&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_1&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">20</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ed&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_2&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">67</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ee&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_3&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">51</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a777d7a49abc8e743c71ac&quot;</span><span class="o">)</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">100</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a77886a49abc8e743c71ad&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_5&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">38</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ドキュメントの削除には <code>remove</code> メソッドを使い、このメソッドには <code>find</code> メソッドと同じように条件を指定することができる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.users.remove<span class="o">({</span>name:<span class="s2">&quot;sojiro_5&quot;</span><span class="o">})</span><span class="p">;</span>
</span><span class='line'>WriteResult<span class="o">({</span> <span class="s2">&quot;nRemoved&quot;</span> : <span class="m">1</span> <span class="o">})</span>
</span><span class='line'>&gt; db.users.find<span class="o">()</span><span class="p">;</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fd93ce8a5464641af4eb&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">10</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a3fee1ce8a5464641af4ec&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_1&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">20</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ed&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_2&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">67</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a40181ce8a5464641af4ee&quot;</span><span class="o">)</span>, <span class="s2">&quot;name&quot;</span> : <span class="s2">&quot;sojiro_3&quot;</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">51</span> <span class="o">}</span>
</span><span class='line'><span class="o">{</span> <span class="s2">&quot;_id&quot;</span> : ObjectId<span class="o">(</span><span class="s2">&quot;54a777d7a49abc8e743c71ac&quot;</span><span class="o">)</span>, <span class="s2">&quot;score&quot;</span> : <span class="m">100</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>以上MongoDBの基本的な操作</p>

<h2>参照</h2>

<p><a href="http://dotinstall.com/lessons/basic_mongodb_v2">ドットインストール</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AWSのLinuxにMongoDBをインストール]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/30/installing-mongodb-on-linux-aws/"/>
    <updated>2014-12-30T13:32:15+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/30/installing-mongodb-on-linux-aws</id>
    <content type="html"><![CDATA[<p>AWSで借りたサーバーにmongoDBが入っていなかったのでインストールした手順</p>

<h2>YUMの設定</h2>

<p>パッケージ管理システムであるYUMにmongoDB用の設定を追加する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo vim /etc/yum.repos.d/mongodb.repo
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>/etc/yum.repos.d/mongodb.repo </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>mongodb<span class="o">]</span>
</span><span class='line'><span class="nv">name</span><span class="o">=</span>MongoDB Repository
</span><span class='line'><span class="nv">baseurl</span><span class="o">=</span>http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/
</span><span class='line'><span class="nv">gpgcheck</span><span class="o">=</span>0
</span><span class='line'><span class="nv">enabled</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>


<p>これでYUMにmongoDBのリポジトリが追加される</p>

<!-- more -->


<h2>mongoDBのインストール</h2>

<p>今回は何も考えず最新のバージョンをインストールするので以下のコマンドで実行する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo yum install mongodb-org
</span><span class='line'>読み込んだプラグイン:priorities, update-motd, upgrade-helper
</span><span class='line'>...
</span><span class='line'><span class="o">============================================================================================================================================================================================================</span>
</span><span class='line'> Package                                                  アーキテクチャー                             バージョン                                       リポジトリー                                   容量
</span><span class='line'><span class="o">============================================================================================================================================================================================================</span>
</span><span class='line'>インストール中:
</span><span class='line'> mongodb-org                                              x86_64                                       2.6.6-1                                          mongodb                                       4.9 k
</span><span class='line'>依存性関連でのインストールをします:
</span><span class='line'> mongodb-org-mongos                                       x86_64                                       2.6.6-1                                          mongodb                                       6.8 M
</span><span class='line'> mongodb-org-server                                       x86_64                                       2.6.6-1                                          mongodb                                       9.0 M
</span><span class='line'> mongodb-org-shell                                        x86_64                                       2.6.6-1                                          mongodb                                       4.3 M
</span><span class='line'> mongodb-org-tools                                        x86_64                                       2.6.6-1                                          mongodb                                        <span class="m">90</span> M
</span><span class='line'>
</span><span class='line'>トランザクションの要約
</span><span class='line'><span class="o">============================================================================================================================================================================================================</span>
</span><span class='line'>インストール  <span class="m">1</span> パッケージ <span class="o">(</span>+4 個の依存関係のパッケージ<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>総ダウンロード容量: <span class="m">110</span> M
</span><span class='line'>インストール容量: <span class="m">277</span> M
</span><span class='line'>Is this ok <span class="o">[</span>y/d/N<span class="o">]</span>: y
</span><span class='line'>Downloading packages:
</span><span class='line'>...
</span><span class='line'>完了しました!
</span></code></pre></td></tr></table></div></figure>


<h2>確認</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongo --version
</span><span class='line'>MongoDB shell version: 2.6.6
</span></code></pre></td></tr></table></div></figure>


<p>インストール完了</p>

<h2>参照</h2>

<ul>
<li><a href="http://docs.mongodb.org/manual/tutorial/install-mongodb-on-red-hat-centos-or-fedora-linux/">Install MongoDB on Red Hat Enterprise, CentOS, Fedora, or Amazon Linux</a></li>
<li><a href="http://qiita.com/nownabe/items/123a8fd04ff5252b3036">CentOS6.5にMongoDBをインストールする</a></li>
<li><a href="http://qiita.com/ykyk1218/items/1c1824e77fb8af78bcf5">MongoDBをLinuxにインストール</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VimにおけるTABとスペースの扱いについて]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/26/tab-and-space-on-vim/"/>
    <updated>2014-12-26T10:52:26+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/26/tab-and-space-on-vim</id>
    <content type="html"><![CDATA[<p>Vimでは <code>&lt;TAB&gt;</code> やインデントについてその挙動を設定することができる。いくつか設定方法があるが、これまでこれらに関する <code>.vimrc</code> の設定は何も考えずにただコピペしていたので記述を見直してみた。</p>

<h2>tabstop</h2>

<p> <code>tabstop</code> で <code>&lt;TAB&gt;</code> にいくつのスペースを設定するか決めることができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">set</span> <span class="nb">tabstop</span><span class="p">=</span><span class="m">4</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで <code>&lt;TAB&gt;</code> に半角4つ分が設定される。</p>

<!-- more -->


<h2><code>&lt;TAB&gt;</code> の挙動</h2>

<p>そもそも <code>&lt;TAB&gt;</code> はどのような挙動をするのか。</p>

<p>何となく、指定した数の分だけ半角スペースを入れてくれるもの、と思っていたが、</p>

<p>正確には行頭からの文字数が<code>&lt;TAB&gt;</code> に指定された半角数の倍数になるようにスペースを補完するもの、というのが正しいかもしれない。何を言っているかわからないと思うので以下で実験する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">set</span> <span class="nb">tabstop</span><span class="p">=</span><span class="m">4</span>
</span><span class='line'><span class="k">set</span> <span class="nb">list</span>
</span><span class='line'><span class="k">set</span> <span class="nb">listchars</span><span class="p">=</span><span class="k">tab</span>:<span class="p">&gt;</span>.<span class="p">,</span>trail:_<span class="p">,</span><span class="nb">eol</span>:↲<span class="p">,</span>extends:<span class="p">&gt;,</span>precedes:<span class="p">&lt;,</span>nbsp:%
</span></code></pre></td></tr></table></div></figure>


<p>実験用に上記のように <code>.vimrc</code> を設定しておく。</p>

<figure class='code'><figcaption><span>sample1</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">&gt;</span>...↲
</span><span class='line'><span class="k">a</span><span class="p">&gt;</span>..↲
</span><span class='line'>bb<span class="p">&gt;</span>.↲
</span><span class='line'>ccc<span class="p">&gt;</span>↲
</span></code></pre></td></tr></table></div></figure>


<p>これは以下のように打ち込んだ結果で、 <code>&lt;TAB&gt;</code> により、それぞれの行が <code>tabstop</code> で設定した半角4つ分で終わるように（タブ文字により）スペースが補完されているのがわかる。</p>

<ul>
<li><code>&lt;TAB&gt;</code></li>
<li>a <code>&lt;TAB&gt;</code></li>
<li>bb <code>&lt;TAB&gt;</code></li>
<li>ccc <code>&lt;TAB&gt;</code></li>
</ul>


<figure class='code'><figcaption><span>sample2</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="p">&gt;</span>...<span class="p">&gt;</span>...↲
</span><span class='line'>test<span class="p">&gt;</span>...↲
</span><span class='line'>sample<span class="p">&gt;</span>.↲
</span></code></pre></td></tr></table></div></figure>


<p>一行に半角4つ分以上の文字が打ち込まれている場合も同じく、 <code>&lt;TAB&gt;</code> はそれぞれの行が <code>tabstop</code> で指定した半角4つの倍数の文字数になるようにタブ文字を補完する。（この場合は一行につき半角8文字）</p>

<h2>smarttabとshiftwidthとsmartindent</h2>

<p> <code>smarttab</code> をONにすることで <code>shiftwidth</code> を設定することが可能になる。</p>

<p> <code>shiftwidth</code> は行頭のインデントの幅を規定するもので、 <code>smarttab</code> が効いているときには行頭の <code>&lt;TAB&gt;</code> は <code>shiftwidth</code> の幅のスペース（タブ文字）を挿入する役目を果たす。</p>

<p> <code>smartindent</code> をONにすると改行時に前の行の行末を見て自動でインデントが挿入される。例えば行末が <code>{</code> の場合は次の行に自動的にインデントが入る。このインデントの幅は <code>shiftwidth</code> で指定された幅となる。</p>

<h2>autoindent</h2>

<p> <code>autoindent</code> は改行時に前の行のインデントと同じ幅でインデントを挿入する。</p>

<h2>expandtab</h2>

<p> <code>expandtab</code> は <code>&lt;TAB&gt;</code> により挿入されるタブ文字を純粋なスペースに変換する。</p>

<p>上記のsample1、2を以下の設定で記述してみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'><span class="k">set</span> <span class="nb">expandtab</span>
</span><span class='line'><span class="k">set</span> <span class="nb">tabstop</span><span class="p">=</span><span class="m">4</span>
</span><span class='line'><span class="k">set</span> <span class="nb">list</span>
</span><span class='line'><span class="k">set</span> <span class="nb">listchars</span><span class="p">=</span><span class="k">tab</span>:<span class="p">&gt;</span>.<span class="p">,</span>trail:_<span class="p">,</span><span class="nb">eol</span>:↲<span class="p">,</span>extends:<span class="p">&gt;,</span>precedes:<span class="p">&lt;,</span>nbsp:%
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>sample1&#8217;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>____↲
</span><span class='line'>a___↲
</span><span class='line'>bb__↲
</span><span class='line'>ccc_↲
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>sample2&#8217;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>________↲
</span><span class='line'>test____↲
</span><span class='line'>sample__↲
</span></code></pre></td></tr></table></div></figure>


<p> <code>expandtab</code> をONにした状態で一時的にタブ文字を記述したいときは、VimをINSERTモードにした状態で以下のように打つ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>Control<span class="p">-</span><span class="k">v</span> <span class="p">&lt;</span>TAB<span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="http://vimwiki.net/?FrontPage">VIM wiki</a></li>
<li><a href="http://nanasi.jp/articles/howto/editing/et-inserttab.html">:set expandtab（:set et）設定の時に、タブ文字を挿入する </a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HUBOTを使ったSlack Bot作成メモ]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/15/slack-bot-by-hubot/"/>
    <updated>2014-12-15T03:02:30+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/15/slack-bot-by-hubot</id>
    <content type="html"><![CDATA[<p>SlackにBotを入れたいと思い、少し調べてみたところHUBOTがやはり簡単らしいのでやってみた</p>

<h2>HUBOT用のAPI Tokenを取得する</h2>

<p>まずはSlackのチームメニューからConfigure Integrationsを選択</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/team_menu.png"></p>

<p>様々な外部サービスとの連携メニューからHUBOTを選択する</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/add_hubot.png"></p>

<p>追加するbotの名前を入力</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/set_botname.png"></p>

<p>ここまでのステップを踏むとAPI Tokenが記されたページが表示される</p>

<p>そしてこの段階でbotがSlackにjoinする</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/join_bot.png"></p>

<!-- more -->


<h2>HUBOTの設定をする</h2>

<p><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a>にも記したHUBOTのセットアップを進める。</p>

<p><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a>の「②HUBOTをインストールする」までを済ませておく。</p>

<p>新たなbotの生成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>hubot --create slack_sojiro_test
</span></code></pre></td></tr></table></div></figure>


<p>slack用のpluginをインストール</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>slack_sojiro_test/
</span><span class='line'><span class="nv">$ </span>npm install hubot-slack --save
</span></code></pre></td></tr></table></div></figure>


<p>起動用スクリプトの作成。先ほど取得したAPI Tokenを使用する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim runhubot
</span><span class='line'><span class="nv">$ </span>cat runhubot
</span><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_SLACK_TOKEN</span><span class="o">=</span>xxxx-123456789-ABCDEFGHIJKLMN
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_SLACK_TEAM</span><span class="o">=</span>Sojiro-test
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_SLACK_BOTNAME</span><span class="o">=</span><span class="nb">test</span>-bot
</span><span class='line'>
</span><span class='line'>bin/hubot --adapter slack
</span><span class='line'><span class="nv">$ </span>chmod u+x runhubot
</span></code></pre></td></tr></table></div></figure>


<p>botの起動</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./runhubot
</span></code></pre></td></tr></table></div></figure>


<p>これでSlack上のbotがHUBOTのスクリプトに沿って反応するようになったはず</p>

<h2>botを使ってみる</h2>

<p>HUBOTではデフォルトでいくつかのスクリプトが用意されているので使って試してみる</p>

<h3>ping</h3>

<p>生存確認</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/ping.png"></p>

<h3>image me</h3>

<p>画像検索</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/image_me.png"></p>

<h3>animate me</h3>

<p>アニメーション検索</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/animate_me.png"></p>

<h3>youtube me</h3>

<p>動画検索</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/youtube_me.png"></p>

<h3>translate me</h3>

<p>翻訳（日本語から英語）</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/translate_me_1.png"></p>

<p>翻訳（英語から日本語）</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/translate_me_2.png"></p>

<h3>map me</h3>

<p>地図検索</p>

<p><img src="http://sojiro14.github.io/images/slack_hubot/map_me.png"></p>

<h2>参照</h2>

<ul>
<li><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a></li>
<li><a href="http://memo.sanographix.net/post/88371442780">Hubotで西木野真姫bot作ってSlackに呼ぶ</a></li>
<li><a href="http://qiita.com/Katsumata_RYO/items/dc4543aa5827d4c3211c">slackにHubotを導入(Heroku経由)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacにNode.jsとMongoDBをインストールしたメモ]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/07/installing-node-dot-js-and-mongodb-in-mac/"/>
    <updated>2014-12-07T18:30:01+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/07/installing-node-dot-js-and-mongodb-in-mac</id>
    <content type="html"><![CDATA[<p>某勉強会でNode.jsとMongoDBを使うということがあったので、インストールした際のメモを残しておく。</p>

<h2>Homebrewのインストール</h2>

<p><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a>でも触れた通り、以下の方法でインストールを試みる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)&quot;</span>
</span><span class='line'>Whoops, the Homebrew installer has moved! Please instead run:
</span><span class='line'>
</span><span class='line'>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>
</span><span class='line'>
</span><span class='line'>Also, please ask wherever you got this link from to update it to the above.
</span><span class='line'>Thanks!
</span></code></pre></td></tr></table></div></figure>


<p>どうやらHomebrewのインストーラーの場所があれから変わったようで、以下のパスで再度実行。</p>

<p>コマンドのレスポンスとして新しいパスをメッセージに残してくれるのはありがたい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでHomebrewのインストールは完了したのであとはサクサク必要なものをインストールするのみ。</p>

<!-- more -->


<h2>Node.jsのインストール</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install node
</span></code></pre></td></tr></table></div></figure>


<p>これで完了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>node -v
</span><span class='line'>v0.10.33
</span></code></pre></td></tr></table></div></figure>


<p>npmもばっちり入っている</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>npm -v
</span><span class='line'>2.1.10
</span></code></pre></td></tr></table></div></figure>


<h2>MongoDBのインストール</h2>

<p>これも以下を実行するだけ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install mongodb
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongo --version
</span><span class='line'>MongoDB shell version: 2.6.5
</span></code></pre></td></tr></table></div></figure>


<p>おしまい。</p>

<h2>参照</h2>

<ul>
<li><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a></li>
<li><a href="http://qiita.com/hajimeni/items/3c93fd981e92f66a20ce">Macにhomebrewを使ってmongodbをインストール</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Screenを使ってみる]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/01/screen-introduction/"/>
    <updated>2014-12-01T17:15:25+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/01/screen-introduction</id>
    <content type="html"><![CDATA[<p>デタッチ/アタッチという強力な機能をもった仮想端末管理アプリケーションであるscreenを使ってみた。</p>

<h2>screenの設定ファイルを編集する</h2>

<p>screenの操作に使うほとんどのコマンドはプレフィックスを用いる。
このプレフィクスがデフォルトでは <code>ctrl + a</code> のため、Shellの行頭移動と被ってしまうので設定を編集する。</p>

<p>ついでに色々編集してみた。（ <code>ctrl +</code> を <code>^</code> で表す）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>escape ^j^j
</span><span class='line'>startup_message off
</span><span class='line'>defkanji utf-8
</span><span class='line'>defencoding utf-8
</span><span class='line'>encoding utf-8 utf-8
</span><span class='line'>caption always <span class="s2">&quot;%{= wb} %-w%{=bu dr}%n %t%{-}%+w %= %{=b wk} [%l] %{=b wb}%y/%m/%d(%D) %{=b wm}%c&quot;</span>
</span><span class='line'>autodetach on
</span><span class='line'>bell_msg <span class="s2">&quot;^G&quot;</span>
</span><span class='line'>defscrollback 10000
</span><span class='line'>vbell off
</span><span class='line'><span class="nb">bind </span>n screen
</span><span class='line'><span class="nb">bind </span>h prev
</span><span class='line'><span class="nb">bind </span>j next
</span><span class='line'><span class="nb">bind </span>l windowlist
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<ul>
<li>escape

<ul>
<li>escape keyの設定（ここでは <code>^j</code> をescape keyとして登録）</li>
</ul>
</li>
<li>startup_message

<ul>
<li>起動時に表示されるメッセージをoff</li>
</ul>
</li>
<li>encoding関連の設定</li>
<li>caption

<ul>
<li>画面下部に表示されるcaptionの設定</li>
</ul>
</li>
<li>autodetach

<ul>
<li>起動時に自動でデタッチ（後述）</li>
</ul>
</li>
<li>bell_msg

<ul>
<li>バックグラウンドで出力されたベル文字をscreenに出力する（ <code>^G</code> はベル文字に置換される）</li>
</ul>
</li>
<li>defscrollback

<ul>
<li>スクロールバックバッファの行数を設定</li>
</ul>
</li>
<li>vbell

<ul>
<li>可視ベルの設定</li>
</ul>
</li>
<li>windowlist

<ul>
<li>全ウィンドウをリスト表示し、使用するウィンドウを選択できるようにする</li>
</ul>
</li>
</ul>


<h2>screenを立ち上げてみる</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>screen
</span></code></pre></td></tr></table></div></figure>


<p>名前を付けて立ち上げる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>screen -t <span class="nb">test</span>
</span></code></pre></td></tr></table></div></figure>


<p>ウィンドウが複数立ち上がると用途に合わせて移動が必要になる。上記 <code>.screenrc</code> の設定がなされた状態で以下のように移動できる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>^j + <span class="o">[</span>number<span class="o">]</span>  <span class="c"># [number]に指定した番号のウィンドウに移動</span>
</span><span class='line'><span class="nv">$ </span>^j + h         <span class="c"># 1つ前のウィンドウに移動</span>
</span><span class='line'><span class="nv">$ </span>^j + j         <span class="c"># 1つ後のウィンドウに移動</span>
</span><span class='line'><span class="nv">$ </span>^j + l         <span class="c"># 表示されるウィンドウリストから移動先のウィンドウを選択</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ウィンドウの分割</h2>

<p>ウィンドウを上下に分割する（縦方向の分割はscreenのバージョンを変えないといけないようなので割愛）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>^j + S
</span></code></pre></td></tr></table></div></figure>


<p>分割された領域間の移動</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>^j + <span class="o">[</span>tab<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>領域の破棄</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>^j + X  <span class="c"># 現在の領域を破棄</span>
</span><span class='line'><span class="nv">$ </span>^j + Q  <span class="c"># 現在の領域以外の全ての領域を破棄</span>
</span></code></pre></td></tr></table></div></figure>


<h2>デタッチとアタッチ</h2>

<ul>
<li>デタッチ（detach）

<ul>
<li>screen上での作業をセッションという形で保存しておくこと</li>
</ul>
</li>
<li>アタッチ（attach）

<ul>
<li>デタッチによって保存されたセッションから作業に復帰すること</li>
</ul>
</li>
</ul>


<p>デタッチする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>^j + d
</span></code></pre></td></tr></table></div></figure>


<p>セッションを確認する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>screen -ls
</span><span class='line'>There is a screen on:
</span><span class='line'>    72181.ttys010.your-pc   <span class="o">(</span>Detached<span class="o">)</span>
</span><span class='line'><span class="m">1</span> Socket in /var/folders/56/dlftkv4d4191qwj6r_gxs_shmspdv_/T/.screen.
</span></code></pre></td></tr></table></div></figure>


<p>アタッチ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>screen -r <span class="o">[</span>session_number <span class="p">|</span> session_name<span class="o">]</span>
</span><span class='line'><span class="c"># 上の例では 72181 もしくは ttys010 を指定する</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="http://www.limy.org/program/screen.html">screenコマンド一覧 3.9.13対応 </a></li>
<li><a href="http://linuxjm.sourceforge.jp/html/GNU_screen/man1/screen.1.html">SCREEN</a></li>
<li><a href="http://sixeight.hatenablog.com/entry/20090730/1248973178">screenのデタッチ/アタッチ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #5 -controllerとviewの追加-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/29/making-first-app-with-rails-number-5-add-controller-and-view/"/>
    <updated>2014-11-29T23:58:09+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/29/making-first-app-with-rails-number-5-add-controller-and-view</id>
    <content type="html"><![CDATA[<p>生成したリソースに対応するcontrollerを作成し、このリソースに対するviewとそのためのアクションを追加していく。</p>

<h2>rails generate controller</h2>

<p>controllerを作成する。controllerの名前は1文字目が大文字で、複数形を指定するのがrailsの規約である。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails g controller Stocks
</span><span class='line'><span class="c"># rails generateコマンドは rails g と省略できる</span>
</span></code></pre></td></tr></table></div></figure>


<p>このコマンドでcontrollerのファイルとviewのファイルが生成される。</p>

<!-- more -->


<h2>routesの設定</h2>

<p>railsでは <code>config/routes</code> ファイルにてdispatch管理をしている。このファイルの設定でRESTfulなURLを自動生成してくれる。</p>

<p>今回追加したcontrollerの設定も追加する。
 <code>config/routes</code> に以下の行を追加する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:stocks</span>
</span></code></pre></td></tr></table></div></figure>


<p>この設定により、リソースの基本的な操作を行うURLが生成される。</p>

<p>この他にもroutesの設定方法はいくつかあり、それにより自由にエンドポイントの追加ができるがここでは省略。</p>

<h2>設定されているroutesの確認</h2>

<p>routesの設定が完了したら、生成されたURLの確認をする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake routes
</span><span class='line'>        Prefix Verb   URI Pattern                    Controller#Action
</span><span class='line'>        stocks GET    /stocks<span class="o">(</span>.:format<span class="o">)</span>              stocks#index
</span><span class='line'>               POST   /stocks<span class="o">(</span>.:format<span class="o">)</span>              stocks#create
</span><span class='line'>     new_stock GET    /stocks/new<span class="o">(</span>.:format<span class="o">)</span>          stocks#new
</span><span class='line'>    edit_stock GET    /stocks/:id/edit<span class="o">(</span>.:format<span class="o">)</span>     stocks#edit
</span><span class='line'>         stock GET    /stocks/:id<span class="o">(</span>.:format<span class="o">)</span>          stocks#show
</span><span class='line'>               PATCH  /stocks/:id<span class="o">(</span>.:format<span class="o">)</span>          stocks#update
</span><span class='line'>               PUT    /stocks/:id<span class="o">(</span>.:format<span class="o">)</span>          stocks#update
</span><span class='line'>               DELETE /stocks/:id<span class="o">(</span>.:format<span class="o">)</span>          stocks#destroy
</span></code></pre></td></tr></table></div></figure>


<h2>アクションの追加</h2>

<p> <code>$ rake routes</code> で示されたController#Actionに沿って、controllerにアクションを追加していく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">app</span><span class="o">/</span><span class="n">controllers</span><span class="o">/</span><span class="n">stocks_controller</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">StocksController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:set_stock</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:show</span><span class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span class="p">,</span> <span class="ss">:destroy</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># GET /stocks</span>
</span><span class='line'>  <span class="c1"># GET /stocks.json</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@stocks</span> <span class="o">=</span> <span class="no">Stock</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># GET /stocks/1</span>
</span><span class='line'>  <span class="c1"># GET /stocks/1.json</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># GET /stocks/new</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">new</span>
</span><span class='line'>    <span class="vi">@stock</span> <span class="o">=</span> <span class="no">Stock</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># GET /stocks/1/edit</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">edit</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># POST /stocks</span>
</span><span class='line'>  <span class="c1"># POST /stocks.json</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="vi">@stock</span> <span class="o">=</span> <span class="no">Stock</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">stock_params</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="vi">@stock</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="vi">@stock</span><span class="p">,</span> <span class="ss">notice</span><span class="p">:</span> <span class="s1">&#39;Stock was successfully created.&#39;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">action</span><span class="p">:</span> <span class="s1">&#39;show&#39;</span><span class="p">,</span> <span class="ss">status</span><span class="p">:</span> <span class="ss">:created</span><span class="p">,</span> <span class="ss">location</span><span class="p">:</span> <span class="vi">@stock</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">action</span><span class="p">:</span> <span class="s1">&#39;new&#39;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@stock</span><span class="o">.</span><span class="n">errors</span><span class="p">,</span> <span class="ss">status</span><span class="p">:</span> <span class="ss">:unprocessable_entity</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># PATCH/PUT /stocks/1</span>
</span><span class='line'>  <span class="c1"># PATCH/PUT /stocks/1.json</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">update</span>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="k">if</span> <span class="vi">@stock</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">stock_params</span><span class="p">)</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="vi">@stock</span><span class="p">,</span> <span class="ss">notice</span><span class="p">:</span> <span class="s1">&#39;Stock was successfully updated.&#39;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">head</span> <span class="ss">:no_content</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">action</span><span class="p">:</span> <span class="s1">&#39;edit&#39;</span> <span class="p">}</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@stock</span><span class="o">.</span><span class="n">errors</span><span class="p">,</span> <span class="ss">status</span><span class="p">:</span> <span class="ss">:unprocessable_entity</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># DELETE /stocks/1</span>
</span><span class='line'>  <span class="c1"># DELETE /stocks/1.json</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">destroy</span>
</span><span class='line'>    <span class="vi">@stock</span><span class="o">.</span><span class="n">destroy</span>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="n">stocks_url</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">head</span> <span class="ss">:no_content</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>    <span class="c1"># Use callbacks to share common setup or constraints between actions.</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">set_stock</span>
</span><span class='line'>      <span class="vi">@stock</span> <span class="o">=</span> <span class="no">Stock</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># Never trust parameters from the scary internet, only allow the white list through.</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">stock_params</span>
</span><span class='line'>      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:stock</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:title</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<p><a href="http://dotinstall.com/lessons/basic_rails_v2">ドットインストール</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #4 -リソースの生成-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/27/making-first-app-with-rails-number-4-creating-resources/"/>
    <updated>2014-11-27T16:32:38+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/27/making-first-app-with-rails-number-4-creating-resources</id>
    <content type="html"><![CDATA[<p><a href="http://sojiro14.github.io/blog/2014/11/16/making-first-app-with-rails-number-3-scaffold-generator/">Ruby on Railsで初めてアプリを作ってみる #3 -scaffoldジェネレータ-</a> で <code>scaffold</code> コマンドを使ったリソースの生成を行ったが、このコマンドでは決められた形式でのリソースの生成にしか対応できないため、手動で自由にリソースを作成してみる。</p>

<h2>rails generate model</h2>

<p>まずはモデルを作成する。railsの規約に従って、モデルは単数系、最初の文字を大文字で始める。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails generate model Stock title:string
</span></code></pre></td></tr></table></div></figure>


<p>このコマンドで <code>generate</code> は <code>g</code> と省略できる。また、要素の属性はデフォルトが <code>string</code> なので、 <code>string</code> も省略することができる。</p>

<p>省略したコマンドが以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails g model Stock title
</span></code></pre></td></tr></table></div></figure>


<p>このコマンドでmodelに加えてmigrateファイルが生成されるのでDBをmigrateする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake db:migrate
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<h2>rails db</h2>

<p>作成したmodelを確認するため、現在使用しているDBのクライアントを立ち上げてみる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails db
</span><span class='line'>sqlite&gt; .schema
</span><span class='line'>CREATE TABLE <span class="s2">&quot;schema_migrations&quot;</span> <span class="o">(</span><span class="s2">&quot;version&quot;</span> varchar<span class="o">(</span>255<span class="o">)</span> NOT NULL<span class="o">)</span><span class="p">;</span>
</span><span class='line'>CREATE UNIQUE INDEX <span class="s2">&quot;unique_schema_migrations&quot;</span> ON <span class="s2">&quot;schema_migrations&quot;</span> <span class="o">(</span><span class="s2">&quot;version&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>CREATE TABLE <span class="s2">&quot;users&quot;</span> <span class="o">(</span><span class="s2">&quot;id&quot;</span> INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, <span class="s2">&quot;name&quot;</span> varchar<span class="o">(</span>255<span class="o">)</span>, <span class="s2">&quot;email&quot;</span> varchar<span class="o">(</span>255<span class="o">)</span>, <span class="s2">&quot;created_at&quot;</span> datetime, <span class="s2">&quot;updated_at&quot;</span> datetime<span class="o">)</span><span class="p">;</span>
</span><span class='line'>CREATE TABLE <span class="s2">&quot;microposts&quot;</span> <span class="o">(</span><span class="s2">&quot;id&quot;</span> INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, <span class="s2">&quot;content&quot;</span> varchar<span class="o">(</span>255<span class="o">)</span>, <span class="s2">&quot;user_id&quot;</span> integer, <span class="s2">&quot;created_at&quot;</span> datetime, <span class="s2">&quot;updated_at&quot;</span> datetime<span class="o">)</span><span class="p">;</span>
</span><span class='line'>CREATE TABLE <span class="s2">&quot;stocks&quot;</span> <span class="o">(</span><span class="s2">&quot;id&quot;</span> INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, <span class="s2">&quot;title&quot;</span> varchar<span class="o">(</span>255<span class="o">)</span>, <span class="s2">&quot;created_at&quot;</span> datetime, <span class="s2">&quot;updated_at&quot;</span> datetime<span class="o">)</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>sqliteのクライアントが立ち上がったら <code>.schema</code> コマンドでこれまで作成されてきたテーブルが確認できる。
 <code>id</code> や <code>created_at</code> 、 <code>updated_at</code> はrailsが自動で生成する</p>

<p>ちなみにsqliteクライアントから抜けるには <code>.exit</code> とする。 <code>.</code> が付くことに注意。</p>

<h2>rails console</h2>

<p>railsが用意しているconsoleを立ち上げてリソースを追加したり、確認したりすることもできる。</p>

<p>Stockオブジェクトを生成して保存する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails console
</span><span class='line'>2.0.0-p594 :001 &gt; <span class="nv">s</span> <span class="o">=</span> Stock.new<span class="o">(</span>title: <span class="s2">&quot;stock1&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="c">#&lt;Stock id: nil, title: &quot;stock1&quot;, created_at: nil, updated_at: nil&gt; </span>
</span><span class='line'>2.0.0-p594 :002 &gt; s.save
</span><span class='line'>  <span class="o">(</span>0.1ms<span class="o">)</span>  begin transaction
</span><span class='line'> SQL <span class="o">(</span>2.1ms<span class="o">)</span>  INSERT INTO <span class="s2">&quot;stocks&quot;</span> <span class="o">(</span><span class="s2">&quot;created_at&quot;</span>, <span class="s2">&quot;title&quot;</span>, <span class="s2">&quot;updated_at&quot;</span><span class="o">)</span> VALUES <span class="o">(</span>?, ?, ?<span class="o">)</span>  <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span>, Sat, <span class="m">15</span> Nov <span class="m">2014</span> 15:02:39 UTC +00:00<span class="o">]</span>, <span class="o">[</span><span class="s2">&quot;title&quot;</span>, <span class="s2">&quot;stock1&quot;</span><span class="o">]</span>, <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span>, Sat, <span class="m">15</span> Nov <span class="m">2014</span> 15:02:39 UTC +00:00<span class="o">]]</span>
</span><span class='line'>  <span class="o">(</span>4.9ms<span class="o">)</span>  commit <span class="nv">transaction</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>作られたオブジェクトを確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>2.0.0-p594 :003 &gt; <span class="nv">s</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="c">#&lt;Stock id: 1, title: &quot;stock1&quot;, created_at: &quot;2014-11-15 15:02:39&quot;, updated_at: &quot;2014-11-15 15:02:39&quot;&gt; </span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>new</code> と <code>save</code> を一括で行ってくれるコマンドが <code>create</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>2.0.0-p594 :004 &gt; Stock.create<span class="o">(</span>title: <span class="s2">&quot;stock2&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="o">(</span>0.1ms<span class="o">)</span>  begin transaction
</span><span class='line'> SQL <span class="o">(</span>0.3ms<span class="o">)</span>  INSERT INTO <span class="s2">&quot;stocks&quot;</span> <span class="o">(</span><span class="s2">&quot;created_at&quot;</span>, <span class="s2">&quot;title&quot;</span>, <span class="s2">&quot;updated_at&quot;</span><span class="o">)</span> VALUES <span class="o">(</span>?, ?, ?<span class="o">)</span>  <span class="o">[[</span><span class="s2">&quot;created_at&quot;</span>, Sat, <span class="m">15</span> Nov <span class="m">2014</span> 15:03:44 UTC +00:00<span class="o">]</span>, <span class="o">[</span><span class="s2">&quot;title&quot;</span>, <span class="s2">&quot;stock2&quot;</span><span class="o">]</span>, <span class="o">[</span><span class="s2">&quot;updated_at&quot;</span>, Sat, <span class="m">15</span> Nov <span class="m">2014</span> 15:03:44 UTC +00:00<span class="o">]]</span>
</span><span class='line'>  <span class="o">(</span>5.8ms<span class="o">)</span>  commit <span class="nv">transaction</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="c">#&lt;Stock id: 2, title: &quot;stock2&quot;, created_at: &quot;2014-11-15 15:03:44&quot;, updated_at: &quot;2014-11-15 15:03:44&quot;&gt; </span>
</span></code></pre></td></tr></table></div></figure>


<p>作られたオブジェクト全てを確認</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>2.0.0-p594 :005 &gt; Stock.all
</span><span class='line'> Stock Load <span class="o">(</span>0.2ms<span class="o">)</span>  SELECT <span class="s2">&quot;stocks&quot;</span>.* FROM <span class="s2">&quot;stocks&quot;</span>
</span><span class='line'><span class="o">=</span>&gt; <span class="c">#&lt;ActiveRecord::Relation [#&lt;Stock id: 1, title: &quot;stock1&quot;, created_at: &quot;2014-11-15 15:02:39&quot;, updated_at: &quot;2014-11-15 15:02:39&quot;&gt;, #&lt;Stock id: 2, title: &quot;stock2&quot;, created_at: &quot;2014-11-15 15:03:44&quot;, updated_at: &quot;2014-11-15 15:03:44&quot;&gt;]&gt; </span>
</span><span class='line'>2.0.0-p594 :006 &gt; quit
</span></code></pre></td></tr></table></div></figure>


<h2>最後にもう一度 <code>rails db</code> で直接確認する</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>sojiro@ip-172-31-2-112 demo_app<span class="o">]</span><span class="nv">$ </span>rails db
</span><span class='line'>SQLite version 3.7.17 2013-05-20 00:56:22
</span><span class='line'>Enter <span class="s2">&quot;.help&quot;</span> <span class="k">for</span> instructions
</span><span class='line'>Enter SQL statements terminated with a <span class="s2">&quot;;&quot;</span>
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from stocks<span class="p">;</span>
</span><span class='line'>1<span class="p">|</span>stock1<span class="p">|</span>2014-11-15 15:02:39.781183<span class="p">|</span>2014-11-15 15:02:39.781183
</span><span class='line'>2<span class="p">|</span>stock2<span class="p">|</span>2014-11-15 15:03:44.294543<span class="p">|</span>2014-11-15 15:03:44.294543
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<p><a href="http://dotinstall.com/lessons/basic_rails_v2">ドットインストール</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #3 -scaffoldジェネレータ-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/16/making-first-app-with-rails-number-3-scaffold-generator/"/>
    <updated>2014-11-16T23:59:05+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/16/making-first-app-with-rails-number-3-scaffold-generator</id>
    <content type="html"><![CDATA[<p>railsには <code>scaffold</code> という単純なリソースを一気に生成するコマンドが存在する。
今回はこのコマンドを使ってみる。</p>

<h2>Usersリソースの生成</h2>

<p>今回は <code>scaffold</code> コマンドを使ってリソースを生成する。
ここでは以下の要素をもつUsersリソースを生成する。</p>

<ul>
<li>id int</li>
<li>name string</li>
<li>email string</li>
</ul>


<p> <code>rails generate</code> スクリプトに <code>scaffold</code> コマンドを指定し、リソースの単数系と要素の情報を渡す</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails generate scaffold User name:string email:string
</span></code></pre></td></tr></table></div></figure>


<p>id要素はRailsが主キーとしてデフォルトで設定する</p>

<h2>DBにusersのセットアップを行う</h2>

<p> <code>rake</code> コマンドを使ってDBをmigrate（更新）する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake db:migrate
</span><span class='line'><span class="o">==</span> <span class="m">20141111170736</span> CreateUsers: <span class="nv">migrating</span> <span class="o">======================================</span>
</span><span class='line'>-- create_table<span class="o">(</span>:users<span class="o">)</span>
</span><span class='line'>   -&gt; 0.0012s
</span><span class='line'><span class="o">==</span> <span class="m">20141111170736</span> CreateUsers: migrated <span class="o">(</span>0.0014s<span class="o">)</span> <span class="o">=============================</span>
</span></code></pre></td></tr></table></div></figure>


<p>出力から <code>users</code> テーブルが作られたことがわかる</p>

<h2>ブラウザで確認</h2>

<p> <code>rails server</code> コマンドの短縮版である <code>rails s</code> を使って3000番portにアプリを立ち上げる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails s
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://xx.xxx.xxx.xxx:3000">http://xx.xxx.xxx.xxx:3000</a></p>

<p>にブラウザでアクセスすると <code>#1 railsのセットアップ</code> で見たデフォルトのRailsページが表示される</p>

<p>次に以下のエンドポイントにアクセスしてみる</p>

<p><a href="http://xx.xxx.xxx.xxx:3000/users">http://xx.xxx.xxx.xxx:3000/users</a></p>

<p>すると既にUser一覧ページができあがっているのがわかる。この他に</p>

<ul>
<li>新規ユーザーを作成するページ</li>
<li>特定のidのユーザー情報を表示するページ</li>
<li>特定のidのユーザー情報を編集するページ</li>
</ul>


<p>が作られている。</p>

<h2>Micropostsリソースの生成</h2>

<p>Usersリソースと同様に <code>scaffold</code> コマンドと <code>rake</code> の <code>migrate</code> タスクで生成する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails generate scaffold Micropost content:string user_id:integer
</span><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake db:migrate
</span><span class='line'><span class="o">==</span> <span class="m">20141112174234</span> CreateMicroposts: <span class="nv">migrating</span> <span class="o">=================================</span>
</span><span class='line'>-- create_table<span class="o">(</span>:microposts<span class="o">)</span>
</span><span class='line'>   -&gt; 0.0029s
</span><span class='line'><span class="o">==</span> <span class="m">20141112174234</span> CreateMicroposts: migrated <span class="o">(</span>0.0031s<span class="o">)</span> <span class="o">========================</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>config/routes.rb</code> にmicropostsリソースの設定が追加された</p>

<h2>参照</h2>

<p><a href="http://railstutorial.jp">Ruby on Rails チュートリアル</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #2 -Herokuのセットアップ-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/12/first-app-with-rails-number-2-setup-heroku/"/>
    <updated>2014-11-12T12:06:23+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/12/first-app-with-rails-number-2-setup-heroku</id>
    <content type="html"><![CDATA[<p>Ruby on Railsのアプリケーション構築に適したPaaSであるHerokuのセットアップをする。</p>

<h2>Herokuに必要なgemのインストール</h2>

<p>Herokuで使用するDBであるPostgreSQLと通信するための <code>pg</code> とHerokuで画像やスタイルシートなどの静的アセットを提供するための <code>rails_12factor</code> を本番（production）環境にインストールするための内容をGemfileに追記する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:production</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;pg&#39;</span><span class="p">,</span> <span class="s1">&#39;0.15.1&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;rails_12factor&#39;</span><span class="p">,</span> <span class="s1">&#39;0.0.2&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>production環境用のgemをインストールしないオプションをつけて <code>bundle install</code> を実行する。
これによりGemfile.lockが更新され、production環境に備えることができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle install --without production
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span><span class='line'>Gems in the group production were not installed.
</span><span class='line'>Use <span class="sb">`</span>bundle show <span class="o">[</span>gemname<span class="o">]</span><span class="sb">`</span> to see where a bundled gem is installed.
</span></code></pre></td></tr></table></div></figure>


<p>ここまでできたらgitにcommitしておく。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git commit -a -m <span class="s2">&quot;Update Gemfile.lock for Heroku&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>git commit</code> の <code>-a</code> は変更のあったファイルを自動で <code>add</code> するオプション。</p>

<h2>herokuコマンドが使えるようにする</h2>

<p>まずは以下のURLからHerokuにアカウント登録をする。</p>

<p><a href="https://signup.heroku.com/identity">https://signup.heroku.com/identity</a></p>

<p>アカウント登録が完了したら <code>heroku</code> コマンドをインストールする。
今回はAWSのLinux環境へのインストールなので以下のURL（ <code>Heroku Toolbelt</code> のStandalone）を参照して以下の手順を得る。</p>

<p><a href="https://toolbelt.heroku.com/standalone">https://toolbelt.heroku.com/standalone</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget -qO- https://toolbelt.heroku.com/install.sh <span class="p">|</span> sh
</span><span class='line'>This script requires superuser access to install software.
</span><span class='line'>You will be prompted <span class="k">for</span> your password by sudo.
</span><span class='line'><span class="o">[</span>sudo<span class="o">]</span> password <span class="k">for</span> sojiro:
</span><span class='line'>Add the Heroku CLI to your PATH using:
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;PATH=&quot;/usr/local/heroku/bin:$PATH&quot;&#39;</span> &gt;&gt; ~/.profile
</span><span class='line'>Installation <span class="nb">complete</span>
</span></code></pre></td></tr></table></div></figure>


<p>自動で <code>sudo</code> をつけて実行してくれる。インストールが完了したら出力にあるようにPATHを通す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;PATH=&quot;/usr/local/heroku/bin:$PATH&quot;&#39;</span> &gt;&gt; ~/.bashrc
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bashrc
</span><span class='line'><span class="nv">$ </span>heroku version
</span><span class='line'>heroku-toolbelt/3.15.2 <span class="o">(</span>x86_64-linux<span class="o">)</span> ruby/2.0.0
</span></code></pre></td></tr></table></div></figure>


<h2>Herokuのセットアップ</h2>

<p> <code>heroku</code> コマンドがインストールされたことを確認できたらコマンドラインからHerokuの認証を行う。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>heroku login
</span><span class='line'>Enter your Heroku credentials.
</span><span class='line'>Email: your.account@email.com
</span><span class='line'>Password <span class="o">(</span>typing will be hidden<span class="o">)</span>:
</span><span class='line'>Your Heroku account does not have a public ssh key uploaded.
</span><span class='line'>Could not find an existing public key at ~/.ssh/id_rsa.pub
</span><span class='line'>Would you like to generate one? <span class="o">[</span>Yn<span class="o">]</span> Y
</span><span class='line'>Generating new SSH public key.
</span><span class='line'>Uploading SSH public key /home/user/.ssh/id_rsa.pub... <span class="k">done</span>
</span><span class='line'>Authentication successful.
</span></code></pre></td></tr></table></div></figure>


<p>認証が完了したらHerokuのセットアップをする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>heroku create
</span><span class='line'>Creating infinite-peak-4923... <span class="k">done</span>, stack is cedar-14
</span><span class='line'>https://infinite-peak-4923.herokuapp.com/ <span class="p">|</span> git@heroku.com:infinite-peak-4923.git
</span><span class='line'>Git remote heroku added
</span></code></pre></td></tr></table></div></figure>


<p>これでgitのremoteにherokuが追加される</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote -v
</span><span class='line'>heroku  git@heroku.com:infinite-peak-4923.git <span class="o">(</span>fetch<span class="o">)</span>
</span><span class='line'>heroku  git@heroku.com:infinite-peak-4923.git <span class="o">(</span>push<span class="o">)</span>
</span><span class='line'>origin  https://github.com/sojiro14/first_app.git <span class="o">(</span>fetch<span class="o">)</span>
</span><span class='line'>origin  https://github.com/sojiro14/first_app.git <span class="o">(</span>push<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Herokuへデプロイ</h2>

<p>追加されたremoteに <code>push</code> をすればHerokuへのデプロイが完了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git push heroku master
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://infinite-peak-4923.herokuapp.com/">https://infinite-peak-4923.herokuapp.com/</a></p>

<p> <code>heroku create</code> 時に出力された上記URL（アプリケーションごとに異なる）にアクセスするとHerokuにデプロイしたアプリケーションが確認できる。Rails 4.0ではこの時点で <code>The page you were looking for doesn't exist.</code> と表示されてしまう模様。</p>

<h2>参照</h2>

<p><a href="http://railstutorial.jp">Ruby on Rails チュートリアル</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #1 -railsのセットアップ-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/10/making-first-app-with-rails-number-1-setup-rails/"/>
    <updated>2014-11-10T03:27:49+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/10/making-first-app-with-rails-number-1-setup-rails</id>
    <content type="html"><![CDATA[<p>Ruby on Railsで初めてアプリを作ってみます。
今回はRailsの立ち上がりを確認するところまで。</p>

<h2>アプリのセットアップ（rails new）</h2>

<p>railsのアプリ作成は <code>rails new</code> コマンドで始まる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir rails_projects
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>rails_projects
</span></code></pre></td></tr></table></div></figure>


<p>今回のアプリ作成の為にディレクトリを作成し、早速コマンドを実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails new first_app
</span><span class='line'>...
</span><span class='line'>An error occurred <span class="k">while</span> installing sqlite3 <span class="o">(</span>1.3.10<span class="o">)</span>, and Bundler cannot <span class="k">continue</span>.
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>いくつかのディレクトリやファイルが作成されるが、最後にこのようなエラーが出てbundle失敗。
そこでGemfileを編集してbundleをやり直す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>first_app/
</span></code></pre></td></tr></table></div></figure>


<p>Gemfileを編集。内容は<a href="http://railstutorial.jp/chapters/beginning?version=4.0#sec-bundler">Ruby on Rails #Bundler</a>を参照。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle update
</span><span class='line'>...
</span><span class='line'>Building native extensions.  This could take a <span class="k">while</span>...
</span><span class='line'>ERROR:  Error installing sqlite3:
</span><span class='line'>    ERROR: Failed to build gem native extension.
</span><span class='line'>
</span><span class='line'>    /home/sojiro/.rvm/rubies/ruby-2.0.0-p594/bin/ruby extconf.rb
</span><span class='line'>checking <span class="k">for</span> sqlite3.h... no
</span><span class='line'>sqlite3.h is missing. Try <span class="s1">&#39;port install sqlite3 +universal&#39;</span>
</span><span class='line'>or <span class="s1">&#39;yum install sqlite-devel&#39;</span> and check your shared library search path <span class="o">(</span>the
</span><span class='line'>location where your sqlite3 shared library is located<span class="o">)</span>.
</span><span class='line'>*** extconf.rb failed ***
</span><span class='line'>Could not create Makefile due to some reason, probably lack of necessary
</span><span class='line'>libraries and/or headers.  Check the mkmf.log file <span class="k">for</span> more details.  You may
</span><span class='line'>need configuration options.
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>またも失敗。よく見るとsqlite-develが足りていないらしい</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo yum install sqlite-devel
</span></code></pre></td></tr></table></div></figure>


<p>sqlite-develをインストール後再度bundleによるgemのインストールを試みる</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle update
</span><span class='line'>Installing sqlite3 1.3.8
</span><span class='line'>Installing turbolinks 1.1.1
</span><span class='line'>Installing uglifier 2.1.1
</span><span class='line'>Your bundle is updated!
</span><span class='line'><span class="nv">$ </span>bundle install
</span><span class='line'>Your bundle is <span class="nb">complete</span>!
</span><span class='line'>Use <span class="sb">`</span>bundle show <span class="o">[</span>gemname<span class="o">]</span><span class="sb">`</span> to see where a bundled gem is installed.
</span></code></pre></td></tr></table></div></figure>


<p>インストール成功。</p>

<h2>サーバーの立ち上げ（rails server）</h2>

<p>ローカルでrailsを立ち上げるコマンド <code>rails server</code> を実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails server
</span><span class='line'>...
</span><span class='line'>Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs <span class="k">for</span> a list of available runtimes. <span class="o">(</span>ExecJS::RuntimeUnavailable<span class="o">)</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h3>Node.jsのインストール</h3>

<p> <code>rails server</code> コマンド実行でエラーが出てしまう。JavaScript runtimeがインストールされていないことが原因のよう。メッセージ通り <a href="https://github.com/sstephenson/execjs">https://github.com/sstephenson/execjs</a> に行ってみるとJavaScript runtimeとしてNode.jsが有効と書いてあるのでNode.jsをインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo rpm -ivh http://ftp.riken.jp/Linux/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm
</span><span class='line'><span class="nv">$ </span>sudo yum install nodejs npm --enablerepo<span class="o">=</span>epel
</span></code></pre></td></tr></table></div></figure>


<p>今回はyumでインストールした。そして再度 <code>rails server</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails <span class="nv">server</span>
</span><span class='line'><span class="o">=</span>&gt; Booting <span class="nv">WEBrick</span>
</span><span class='line'><span class="o">=</span>&gt; Rails 4.0.5 application starting in development on http://0.0.0.0:3000
</span><span class='line'><span class="o">=</span>&gt; Run <span class="sb">`</span>rails server -h<span class="sb">`</span> <span class="k">for</span> more startup <span class="nv">options</span>
</span><span class='line'><span class="o">=</span>&gt; Ctrl-C to shutdown server
</span></code></pre></td></tr></table></div></figure>


<p>ローカルでサーバーが立ち上がる。
今回はAWS上で作業しているので、AWS該当インスタンスのSecurity Groupで3000番portを空ける。</p>

<p><a href="http://xx.xxx.xxx.xxx:3000">http://xx.xxx.xxx.xxx:3000</a></p>

<p>にブラウザでアクセスして以下の画面が見えればOK</p>

<p><img src="http://sojiro14.github.io/images/rails/rails_starting.png"></p>

<h2>GitHubに上げておく</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git init
</span><span class='line'><span class="nv">$ </span>git remote add origin https://github.com/sojiro14/first_app.git
</span></code></pre></td></tr></table></div></figure>


<p>GitHubでリポジトリ作成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s1">&#39;Initialize repository&#39;</span>
</span><span class='line'><span class="nv">$ </span>git push -u origin master
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="http://qiita.com/you21979@github/items/4efd9fc4363573191b5c">node.jsをyumでインストールする(centos6.5)</a></li>
<li><a href="http://railstutorial.jp">Ruby on Rails チュートリアル</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LinuxにRuby on Railsをインストールする]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/05/installing-ruby-on-rails-on-linux/"/>
    <updated>2014-11-05T03:58:11+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/05/installing-ruby-on-rails-on-linux</id>
    <content type="html"><![CDATA[<p>Ruby on Railsを使ってみたいと思い、AWSにインストールした手順。</p>

<h2>Ruby version 2.0.0 を RVMを使ってインストール</h2>

<p><a href="http://sojiro14.github.io/blog/2014/10/31/installing-latest-ruby-in-linux/">Linuxに最新のRubyをインストールする</a>を参照</p>

<h2>gemsetの作成</h2>

<blockquote><p>Rubyをインストールしたら、Railsのアプリケーションを実行するために必要な他のソフトウェア向けにシステムを構成する必要があります。通常、これはgemのインストールに関連します。gemとは自己完結型のRubyコードのパッケージです。バージョン番号の異なるgem同士がコンフリクトすることがあるため、一連のgemを自己完結的にまとめたgemsetというものを作成してバージョンを使い分けるのが便利です。
（引用: <a href="http://railstutorial.jp/chapters/beginning?version=4.0#top">Ruby on Rails チュートリアル</a>）</p></blockquote>

<p>以下のコマンドでgemsetを作成する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm use 2.0.0@railstutorial_rails_4_0 --create --default
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>上のコマンドを実行すると、Ruby 2.0.0に関連付けられたrailstutorial_rails_4_0というgemsetを作成し (&ndash;create)、その場でgemsetを有効にし (use)、gemsetをデフォルトに設定 (&ndash;default) します。これにより、ターミナルウィンドウを開いたときに2.0.0@railstutorial_rails_4_0というRubyとgemsetの組み合わせが常に選択されるようになります。
（引用: <a href="http://railstutorial.jp/chapters/beginning?version=4.0#top">Ruby on Rails チュートリアル</a>）</p></blockquote>

<h2>RubyGemsのインストール</h2>

<p>AWSには始めからgemがインストールされていて、PATHは以下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>which gem
</span><span class='line'>/usr/bin/gem
</span></code></pre></td></tr></table></div></figure>


<p>RVMでRubyをインストールするとPATHが上書きされる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>which gem
</span><span class='line'>~/.rvm/rubies/ruby-2.0.0-p594/bin/gem
</span></code></pre></td></tr></table></div></figure>


<p>今回はチュートリアルに合わせてgemのバージョンを更新する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem update --system 2.0.3
</span></code></pre></td></tr></table></div></figure>


<p>gemの設定ファイルである <code>.gemrc</code> に自動生成されるドキュメントである <code>ri</code> と <code>rdoc</code> の自動生成を抑制する設定をする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim .gemrc
</span><span class='line'><span class="nv">$ </span>cat .gemrc
</span><span class='line'>install: --no-rdoc --no-ri
</span><span class='line'>update:  --no-rdoc --no-ri
</span></code></pre></td></tr></table></div></figure>


<h2>Railsをインストールする</h2>

<p>いよいよRailsをインストールする</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install rails --version 4.0.5
</span></code></pre></td></tr></table></div></figure>


<p>インストール完了。
以下のコマンドで確認する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails -v
</span><span class='line'>Rails 4.0.5
</span></code></pre></td></tr></table></div></figure>


<p>Railsがインストールされたことを確認できた</p>

<h2>参照</h2>

<p><a href="http://railstutorial.jp/chapters/beginning?version=4.0#top">Ruby on Rails チュートリアル</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linuxに最新のRubyをインストールする]]></title>
    <link href="http://sojiro14.github.io/blog/2014/10/31/installing-latest-ruby-in-linux/"/>
    <updated>2014-10-31T05:29:00+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/10/31/installing-latest-ruby-in-linux</id>
    <content type="html"><![CDATA[<p>Ruby on Railsを使ってみたいと思い、調べてみるとRails4ではRubyのバージョンは1.9以降が必須のようである。</p>

<p>自分がさくらで借りているサーバーではRubyのバージョンが1.8.7だったのでこれを新しくしてみた。</p>

<h2>RVMのインストール</h2>

<p>新しいRubyをインストールする前にRVM(Ruby Version Manager)をインストールする。これはRubyをバージョンごとに管理するツール</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -L https://get.rvm.io <span class="p">|</span> bash -s
</span></code></pre></td></tr></table></div></figure>


<p>このコマンドで自分のホームディレクトリ以下に <code>.rvm/</code> が作られ、ここにRVMがインストールされる。</p>

<p>そして <code>.profile</code> <code>.bashrc</code> <code>.zshrc</code> にPATHを通す記述が追加される。</p>

<p>また、 <code>.bash_profile</code> <code>.zlogin</code> にRVMをロードする記述が追加される。</p>

<p>RVMのインストールが完了したらロードする。ここではbashを使っているので以下のようにする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">source</span> .bash_profile
</span></code></pre></td></tr></table></div></figure>


<h2>Rubyのインストール</h2>

<h3>さくらのレンタルサーバーでの失敗</h3>

<p>まずはRubyのインストールに必要なパーツを調べ、無ければインストールする。
以下のコマンドで必要なものをピックアップしインストールまで行ってくれる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm requirements
</span><span class='line'>/your/home/directry/.rvm/scripts/functions/support: line 314: rvm_debug: <span class="nb">command </span>not found
</span><span class='line'>Checking requirements <span class="k">for</span> freebsd.
</span><span class='line'>Installing requirements <span class="k">for</span> freebsd.
</span><span class='line'>Updating system.
</span><span class='line'>Installing required packages: automake, bison, readline, libyaml...
</span><span class='line'>Error running <span class="s1">&#39;requirements_freebsd_libs_install automake bison readline libyaml&#39;</span>,
</span></code></pre></td></tr></table></div></figure>


<p>ここでErrorが発生。内容は必要なパッケージがインストールできなかったということ。
そこでFreeBSDのパッケージ管理コマンドである <code>pkg</code> コマンドを使ってインストールを試みる。</p>

<p>が、サーバーの設定的に自分でパッケージを追加することができなかったのでさくらのサーバーを断念してAWSに移行した。</p>

<h3>AWSに移行</h3>

<p>AWSに移行して <code>$ rvm requirements</code> までを実行する。（AWSは始めからRubyのバージョンが2.0.0だったが構わず実行）
ここでも <code>$ rvm requirements</code> が転ける。</p>

<p>そこで今度はCentOSだったので <code>yum</code> を使ってインストールを試みる。以下のコマンドは <code>$ rvm requirements</code> が教えてくれる。Errorの原因が <code>sudo</code> で実行していなかったことなので <code>sudo</code> 付きで実行する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install -y patch libyaml-devel libffi-devel glibc-headers autoconf gcc-c++ glibc-devel patch readline-devel zlib-devel openssl-devel automake libtool bison
</span></code></pre></td></tr></table></div></figure>


<p>これで成功。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm requirements
</span><span class='line'>Checking requirements <span class="k">for</span> amazon.
</span><span class='line'>Requirements installation successful.
</span></code></pre></td></tr></table></div></figure>


<p> <code>$ rvm requirements</code>も成功。</p>

<p>このサーバーではすでにバージョン2.0.0のRubyがインストールされていたが、RVMの配下に新たにバージョン2.0.0のRubyをインストールする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm install 2.0.0 --with-openssl-dir<span class="o">=</span><span class="nv">$HOME</span>/.rvm/usr
</span></code></pre></td></tr></table></div></figure>


<p>インストール完了。</p>

<h2>参考</h2>

<p><a href="http://railstutorial.jp/chapters/beginning?version=4.0#top">Ruby on Rails チュートリアル</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQLにおけるNOT NULLカラムへのインサート時の挙動]]></title>
    <link href="http://sojiro14.github.io/blog/2014/10/20/behavior-of-inserting-rows-at-not-null-column-on-mysql/"/>
    <updated>2014-10-20T13:44:28+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/10/20/behavior-of-inserting-rows-at-not-null-column-on-mysql</id>
    <content type="html"><![CDATA[<p>MySQLでカラムにNOT NULLを指定した際、そのカラムに対するインサート操作による挙動が特殊なのでまとめる。</p>

<h2>単列インサートと複数列インサートで挙動が変わる</h2>

<p> <code>NOT NULL</code>を指定したカラムを含むテーブルへのインサートでは、一度に1行のみ挿入する単列インサートと、一度に複数行を挿入する複数列インサート（バルクインサート）で挙動が変わる。</p>

<p><a href="http://dev.mysql.com/doc/refman/5.6/en/insert.html">MySQLマニュアル</a>からの抜粋</p>

<blockquote><p>Inserting NULL into a column that has been declared NOT NULL. For multiple-row INSERT statements or INSERT INTO &hellip; SELECT statements, the column is set to the implicit default value for the column data type. This is 0 for numeric types, the empty string (&lsquo;&rsquo;) for string types, and the “zero” value for date and time types. INSERT INTO &hellip; SELECT statements are handled the same way as multiple-row inserts because the server does not examine the result set from the SELECT to see whether it returns a single row. (For a single-row INSERT, no warning occurs when NULL is inserted into a NOT NULL column. Instead, the statement fails with an error.)</p></blockquote>

<p>単列インサートの場合は<code>NOT NULL</code>が指定されたカラムに<code>NULL</code>値が挿入されるとそのクエリはエラーとなって失敗するが、複数列インサートの場合は警告(warning)を発するものの、クエリは正常に受け付けられる。</p>

<p>その際、<code>NULL</code>値が指定された各カラムにはそれぞれのカラムのデータ型の暗黙的なデフォルト値が挿入される。（数値型なら<code>0</code>、文字列型なら空文字<code>''</code>、etc&hellip;）</p>

<h2>検証</h2>

<ul>
<li>MySQLのバージョンは5.1.69

<ul>
<li>ただしマニュアルの該当箇所はバージョン5.7まで変更がないため、どのバージョンでも同じ挙動と思われる</li>
</ul>
</li>
<li>テーブル定義は以下</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="ss">`not_null_test`</span> <span class="p">(</span>
</span><span class='line'>  <span class="ss">`id`</span> <span class="kt">int</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">unsigned</span> <span class="k">NOT</span> <span class="no">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">`test_score`</span> <span class="kt">int</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="k">unsigned</span> <span class="k">NOT</span> <span class="no">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">`created_at`</span> <span class="kt">timestamp</span> <span class="k">NOT</span> <span class="no">NULL</span> <span class="k">DEFAULT</span> <span class="s1">&#39;0000-00-00 00:00:00&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="p">(</span><span class="ss">`id`</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span> <span class="kp">ENGINE</span><span class="o">=</span><span class="n">InnoDB</span> <span class="k">DEFAULT</span> <span class="kp">CHARSET</span><span class="o">=</span><span class="n">utf8</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>単列インサート</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span>
</span><span class='line'><span class="nf">not_null_test</span>
</span><span class='line'><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">test_score</span><span class="p">,</span> <span class="n">created_at</span><span class="p">)</span>
</span><span class='line'><span class="k">values</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="no">NULL</span><span class="p">,</span> <span class="no">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">ERROR</span> <span class="mi">1048</span> <span class="p">(</span><span class="mi">23000</span><span class="p">):</span> <span class="k">Column</span> <span class="s1">&#39;test_score&#39;</span> <span class="n">cannot</span> <span class="n">be</span> <span class="no">null</span>
</span></code></pre></td></tr></table></div></figure>


<h3>複数列インサート</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">insert</span> <span class="k">into</span>
</span><span class='line'><span class="nf">not_null_test</span>
</span><span class='line'><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="n">test_score</span><span class="p">,</span> <span class="n">created_at</span><span class="p">)</span>
</span><span class='line'><span class="k">values</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="no">NULL</span><span class="p">,</span> <span class="no">NULL</span><span class="p">),</span>
</span><span class='line'><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="no">NULL</span><span class="p">,</span> <span class="no">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">2</span> <span class="n">rows</span> <span class="n">affected</span><span class="p">,</span> <span class="mi">2</span> <span class="nf">warnings</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span><span class='line'><span class="n">Records</span><span class="p">:</span> <span class="mi">2</span>  <span class="n">Duplicates</span><span class="p">:</span> <span class="mi">0</span>  <span class="n">Warnings</span><span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">not_null_test</span><span class="p">;</span>
</span><span class='line'><span class="o">+----+------------+---------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">id</span> <span class="o">|</span> <span class="n">test_score</span> <span class="o">|</span> <span class="n">created_at</span>          <span class="o">|</span>
</span><span class='line'><span class="o">+----+------------+---------------------+</span>
</span><span class='line'><span class="o">|</span>  <span class="mi">1</span> <span class="o">|</span>          <span class="mi">0</span> <span class="o">|</span> <span class="mi">2014</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">18</span> <span class="mi">13</span><span class="p">:</span><span class="mi">35</span><span class="p">:</span><span class="mi">10</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span>  <span class="mi">2</span> <span class="o">|</span>          <span class="mi">0</span> <span class="o">|</span> <span class="mi">2014</span><span class="o">-</span><span class="mi">10</span><span class="o">-</span><span class="mi">18</span> <span class="mi">13</span><span class="p">:</span><span class="mi">35</span><span class="p">:</span><span class="mi">10</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----+------------+---------------------+</span>
</span><span class='line'><span class="mi">2</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>※ timestampにテーブル定義で設定したデフォルト値<code>'0000-00-00 00:00:00'</code>ではなく、型のデフォルト値である現在時刻が入っている点に注意</p>
]]></content>
  </entry>
  
</feed>
