<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Shell | Sojiro's Blog]]></title>
  <link href="http://sojiro14.github.io/blog/categories/shell/atom.xml" rel="self"/>
  <link href="http://sojiro14.github.io/"/>
  <updated>2016-06-30T04:10:38+09:00</updated>
  <id>http://sojiro14.github.io/</id>
  <author>
    <name><![CDATA[Sojiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Screenを使ってみる]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/01/screen-introduction/"/>
    <updated>2014-12-01T17:15:25+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/01/screen-introduction</id>
    <content type="html"><![CDATA[<p>デタッチ/アタッチという強力な機能をもった仮想端末管理アプリケーションであるscreenを使ってみた。</p>

<h2>screenの設定ファイルを編集する</h2>

<p>screenの操作に使うほとんどのコマンドはプレフィックスを用いる。
このプレフィクスがデフォルトでは <code>ctrl + a</code> のため、Shellの行頭移動と被ってしまうので設定を編集する。</p>

<p>ついでに色々編集してみた。（ <code>ctrl +</code> を <code>^</code> で表す）
<code>bash
escape ^j^j
startup_message off
defkanji utf-8
defencoding utf-8
encoding utf-8 utf-8
caption always "%{= wb} %-w%{=bu dr}%n %t%{-}%+w %= %{=b wk} [%l] %{=b wb}%y/%m/%d(%D) %{=b wm}%c"
autodetach on
bell_msg "^G"
defscrollback 10000
vbell off
bind n screen
bind h prev
bind j next
bind l windowlist
</code></p>

<!-- more -->


<ul>
<li>escape

<ul>
<li>escape keyの設定（ここでは <code>^j</code> をescape keyとして登録）</li>
</ul>
</li>
<li>startup_message

<ul>
<li>起動時に表示されるメッセージをoff</li>
</ul>
</li>
<li>encoding関連の設定</li>
<li>caption

<ul>
<li>画面下部に表示されるcaptionの設定</li>
</ul>
</li>
<li>autodetach

<ul>
<li>起動時に自動でデタッチ（後述）</li>
</ul>
</li>
<li>bell_msg

<ul>
<li>バックグラウンドで出力されたベル文字をscreenに出力する（ <code>^G</code> はベル文字に置換される）</li>
</ul>
</li>
<li>defscrollback

<ul>
<li>スクロールバックバッファの行数を設定</li>
</ul>
</li>
<li>vbell

<ul>
<li>可視ベルの設定</li>
</ul>
</li>
<li>windowlist

<ul>
<li>全ウィンドウをリスト表示し、使用するウィンドウを選択できるようにする</li>
</ul>
</li>
</ul>


<h2>screenを立ち上げてみる</h2>

<pre><code class="bash">$ screen
</code></pre>

<p>名前を付けて立ち上げる
<code>bash
$ screen -t test
</code>
ウィンドウが複数立ち上がると用途に合わせて移動が必要になる。上記 <code>.screenrc</code> の設定がなされた状態で以下のように移動できる。
<code>bash
$ ^j + [number]  # [number]に指定した番号のウィンドウに移動
$ ^j + h         # 1つ前のウィンドウに移動
$ ^j + j         # 1つ後のウィンドウに移動
$ ^j + l         # 表示されるウィンドウリストから移動先のウィンドウを選択
</code></p>

<h2>ウィンドウの分割</h2>

<p>ウィンドウを上下に分割する（縦方向の分割はscreenのバージョンを変えないといけないようなので割愛）
<code>bash
$ ^j + S
</code>
分割された領域間の移動
<code>bash
$ ^j + [tab]
</code>
領域の破棄
<code>bash
$ ^j + X  # 現在の領域を破棄
$ ^j + Q  # 現在の領域以外の全ての領域を破棄
</code></p>

<h2>デタッチとアタッチ</h2>

<ul>
<li>デタッチ（detach）

<ul>
<li>screen上での作業をセッションという形で保存しておくこと</li>
</ul>
</li>
<li>アタッチ（attach）

<ul>
<li>デタッチによって保存されたセッションから作業に復帰すること</li>
</ul>
</li>
</ul>


<p>デタッチする
<code>bash
$ ^j + d
</code>
セッションを確認する
<code>bash
$ screen -ls
There is a screen on:
    72181.ttys010.your-pc   (Detached)
1 Socket in /var/folders/56/dlftkv4d4191qwj6r_gxs_shmspdv_/T/.screen.
</code>
アタッチ
&#8220;` bash
$ screen -r [session_number | session_name]</p>

<h1>上の例では 72181 もしくは ttys010 を指定する</h1>

<p>&#8220;`</p>

<h2>参照</h2>

<ul>
<li><a href="http://www.limy.org/program/screen.html">screenコマンド一覧 3.9.13対応 </a></li>
<li><a href="http://linuxjm.sourceforge.jp/html/GNU_screen/man1/screen.1.html">SCREEN</a></li>
<li><a href="http://sixeight.hatenablog.com/entry/20090730/1248973178">screenのデタッチ/アタッチ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[シェルの変更について]]></title>
    <link href="http://sojiro14.github.io/blog/2014/07/06/changing-login-shell/"/>
    <updated>2014-07-06T20:43:22+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/07/06/changing-login-shell</id>
    <content type="html"><![CDATA[<p>さくらでレンタルサーバーを借りたが、デフォルトのシェルが使い慣れたbashではなかったので変更した際のメモ。</p>

<h2>現在のシェルを確認</h2>

<pre><code class="csh">% echo $SHELL
/bin/csh
</code></pre>

<p>環境変数 <code>$SHELL</code> に現在のシェルのパスが入っている。</p>

<h2>変更できるシェルの確認</h2>

<pre><code class="csh">% cat /etc/shells 
# $FreeBSD: release/9.1.0/etc/shells 59717 2000-04-27 21:58:46Z ache $
#
# List of acceptable shells for chpass(1).
# Ftpd will not allow users to connect who are not using
# one of these shells.

/bin/sh
/bin/csh
/bin/tcsh
/usr/local/bin/bash
/usr/local/bin/rbash
/usr/local/bin/zsh
/usr/local/bin/rzsh
/usr/bin/passwd
</code></pre>

<p>bashが使えることが確認できる。</p>

<h2>シェルを変更する</h2>

<pre><code class="csh">% chsh -s /usr/local/bin/bash
</code></pre>

<p> <code>chsh</code> はログインシェルを変更するコマンド。 <code>-s</code> オプションを付けないとインタラクティブに動作する。</p>

<p>ログインシェルはユーザー毎に設定できるログイン時に起動されるシェルのことで、 <code>/etc/passwd</code> ファイルで設定されている。</p>

<p> <code>chsh</code> はこのファイルを書き換える。</p>

<h2>bashの設定ファイルを書く</h2>

<p>ログインシェルをbashに変更したら</p>

<ul>
<li>.bash_profile</li>
<li>.bashrc</li>
</ul>


<p>など、いつもの設定ファイルを記述する</p>

<h2>再度サーバーにログイン</h2>

<p>設定を終えて再度サーバーにログインするとbashが立ち上がる。</p>

<h2>メモ</h2>

<pre><code class="csh">% exec /usr/local/bin/bash -l
</code></pre>

<p>でbashをログインシェルとして立ち上げることもできるが設定ファイルは変わらないのでログインの度にデフォルトのシェルに戻る。</p>

<p><code>exec</code> コマンドは引数で渡された処理にプロセスを置き換える。</p>

<p>よって上記コマンドが実行されるとbashがログインシェルとして置き換わる。</p>
]]></content>
  </entry>
  
</feed>
