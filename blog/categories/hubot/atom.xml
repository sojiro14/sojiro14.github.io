<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Hubot | Sojiro's Blog]]></title>
  <link href="http://sojiro14.github.io/blog/categories/hubot/atom.xml" rel="self"/>
  <link href="http://sojiro14.github.io/"/>
  <updated>2015-11-14T20:32:53+09:00</updated>
  <id>http://sojiro14.github.io/</id>
  <author>
    <name><![CDATA[Sojiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA['Hubot --create' は古い]]></title>
    <link href="http://sojiro14.github.io/blog/2015/05/05/hubot-create-is-now-old/"/>
    <updated>2015-05-05T17:50:15+09:00</updated>
    <id>http://sojiro14.github.io/blog/2015/05/05/hubot-create-is-now-old</id>
    <content type="html"><![CDATA[<p>このブログで過去に何度かHubotについて書いたときに、新しいbotを作るときのコマンドは <code>hubot --create bot_name</code> だったのですが、このコマンドが非推奨になったようなのでメモ。</p>

<h2>hubot &ndash;create が使えない</h2>

<p>新しいbotを作ろうとして <code>hubot --create</code> コマンドを打つと以下のように怒られた</p>

<pre><code class="bash">$ hubot --create test_bot
'hubot --create' is deprecated. Use the yeoman generator instead:
    npm install -g yo generator-hubot
    mkdir -p test_bot
    yo hubot
See https://github.com/github/hubot/blob/master/docs/README.md for more details on getting started.
</code></pre>

<p>ところがseeとなっているREADMEファイルは存在しない模様&hellip;</p>

<h2>yo と generator-hubot とは何か</h2>

<p>よくわからないが <code>yo</code> と <code>generator-hubot</code> をインストールしろと言われているのはわかるので調べてみる</p>

<h3>yo と generator-xxx</h3>

<p>yoはYeomanというGoole社が開発した統合開発ツール群に属するツールの一つで、「雛形作成ツール」であるらしい</p>

<p>そしてその雛形は &ldquo;generator-xxx&rdquo; という形でさまざま用意されており、そのHubot版が <code>generator-hubot</code> と言う訳である</p>

<p>つまり上記エラーメッセージは</p>

<ul>
<li>雛形作成ツールである <code>yo</code> と、Hubotの雛形である <code>generator-hubot</code> をインストールし</li>
<li>新規ディレクトリ上で <code>yo</code> を実行してHubotの雛形を作るべし</li>
</ul>


<p>ということのようである</p>

<h2>yo と generator-hubot のインストール</h2>

<p>指定された通り以下のようにインストールする</p>

<pre><code class="bash">$ npm install -g yo generator-hubot
</code></pre>

<p>（余談：私の場合はNode.jsのインストールされたpathとnpmのrootが違っていたため少々上手くいかなかった。エラーメッセージは素直によく読むべきだ。。。）</p>

<h2>yo の実行</h2>

<p>インストールが成功したら、新しいbotのディレクトリを作ってそこで <code>yo</code> を実行する</p>

<pre><code class="bash">$ mkdir test_bot
$ cd test_bot
$ yo hubot  # これは generator-hubot の雛形を作る、という意味
</code></pre>

<p> <code>yo hubot</code> を実行するとHubotのAAが表示され、いくつかのやり取りが立ち上がる</p>

<pre><code class="bash">$ yo hubot
                     _____________________________  
                    /                             \ 
   //\              |      Extracting input for    |
  ////\    _____    |   self-replication process   |
 //////\  /_____\   \                             / 
 ======= |[^_/\_]|   /----------------------------  
  |   | _|___@@__|__                                
  +===+/  ///     \_\                               
   | |_\ /// HUBOT/\\                             
   |___/\//      /  \\                            
         \      /   +---+                            
          \____/    |   |                            
           | //|    +===+                            
            \//      |xx|                            

? Owner: sojiro
? Bot name: slack-test-bot
? Description: Slack Bot test
? Bot adapter: (campfire) slack
? Bot adapter: slack
   create bin/hubot
   create bin/hubot.cmd
   create Procfile
   create README.md
   create external-scripts.json
   create hubot-scripts.json
   create .gitignore
   create package.json
   create scripts/example.coffee
   create .editorconfig
                     _____________________________  
 _____              /                             \ 
 \    \             |   Self-replication process   |
 |    |    _____    |          complete...         |
 |__\\|   /_____\   \     Good luck with that.    / 
   |//+  |[^_/\_]|   /----------------------------  
  |   | _|___@@__|__                                
  +===+/  ///     \_\                               
   | |_\ /// HUBOT/\\                             
   |___/\//      /  \\                            
         \      /   +---+                            
          \____/    |   |                            
           | //|    +===+                            
            \//      |xx|      
...
...
</code></pre>

<p>各項目それぞれデフォルト値が設定されており、なにも入力せずEnterを押していくとその通りになる</p>

<p>今回はSlack用のbotだったので Bot adapter: の欄で <code>slack</code> と入力した</p>

<p>他にも用途に合わせてadapterが用意されているようである</p>

<p>この <code>yo</code> 実行により、Hubotの雛形が作成され、 <code>hubot --create</code> と同様にセットアップが完了する</p>

<p>なおかつadapterを予め設定できる分、セットアップが楽になっている</p>

<h2>最後に</h2>

<p>今回はHubotに絡んで偶発的に <code>yo</code> を知りましたが、かなり便利そうなのでYeoman含めて今後も使ってみたいところです</p>

<h2>参照</h2>

<ul>
<li><a href="http://yosuke-furukawa.hatenablog.com/entry/2013/07/04/085814">Yeoman入門(第一部、yoを使う)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HUBOTを使ったSlack Bot作成メモ]]></title>
    <link href="http://sojiro14.github.io/blog/2014/12/15/slack-bot-by-hubot/"/>
    <updated>2014-12-15T03:02:30+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/12/15/slack-bot-by-hubot</id>
    <content type="html"><![CDATA[<p>SlackにBotを入れたいと思い、少し調べてみたところHUBOTがやはり簡単らしいのでやってみた</p>

<h2>HUBOT用のAPI Tokenを取得する</h2>

<p>まずはSlackのチームメニューからConfigure Integrationsを選択</p>

<p><img src="/images/slack_hubot/team_menu.png"></p>

<p>様々な外部サービスとの連携メニューからHUBOTを選択する</p>

<p><img src="/images/slack_hubot/add_hubot.png"></p>

<p>追加するbotの名前を入力</p>

<p><img src="/images/slack_hubot/set_botname.png"></p>

<p>ここまでのステップを踏むとAPI Tokenが記されたページが表示される</p>

<p>そしてこの段階でbotがSlackにjoinする</p>

<p><img src="/images/slack_hubot/join_bot.png"></p>

<!-- more -->


<h2>HUBOTの設定をする</h2>

<p><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a>にも記したHUBOTのセットアップを進める。</p>

<p><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a>の「②HUBOTをインストールする」までを済ませておく。</p>

<p>新たなbotの生成
<code>bash
$ hubot --create slack_sojiro_test
</code>
slack用のpluginをインストール
<code>bash
$ cd slack_sojiro_test/
$ npm install hubot-slack --save
</code>
起動用スクリプトの作成。先ほど取得したAPI Tokenを使用する。
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim runhubot
</span><span class='line'><span class="nv">$ </span>cat runhubot&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;export <span class="nv">HUBOT_SLACK_TOKEN</span><span class="o">=</span>xxxx-123456789-ABCDEFGHIJKLMN
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_SLACK_TEAM</span><span class="o">=</span>Sojiro-test
</span><span class='line'><span class="nb">export </span><span class="nv">HUBOT_SLACK_BOTNAME</span><span class="o">=</span><span class="nb">test</span>-bot&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;bin/hubot <span class="p">&amp;</span>ndash<span class="p">;</span>adapter slack
</span><span class='line'><span class="nv">$ </span>chmod u+x runhubot
</span><span class='line'>&lt;code&gt;
</span><span class='line'>botの起動
</span><span class='line'>&lt;/code&gt; bash
</span><span class='line'><span class="nv">$ </span>./runhubot
</span></code></pre></td></tr></table></div></figure>
これでSlack上のbotがHUBOTのスクリプトに沿って反応するようになったはず</p>

<h2>botを使ってみる</h2>

<p>HUBOTではデフォルトでいくつかのスクリプトが用意されているので使って試してみる</p>

<h3>ping</h3>

<p>生存確認</p>

<p><img src="/images/slack_hubot/ping.png"></p>

<h3>image me</h3>

<p>画像検索</p>

<p><img src="/images/slack_hubot/image_me.png"></p>

<h3>animate me</h3>

<p>アニメーション検索</p>

<p><img src="/images/slack_hubot/animate_me.png"></p>

<h3>youtube me</h3>

<p>動画検索</p>

<p><img src="/images/slack_hubot/youtube_me.png"></p>

<h3>translate me</h3>

<p>翻訳（日本語から英語）</p>

<p><img src="/images/slack_hubot/translate_me_1.png"></p>

<p>翻訳（英語から日本語）</p>

<p><img src="/images/slack_hubot/translate_me_2.png"></p>

<h3>map me</h3>

<p>地図検索</p>

<p><img src="/images/slack_hubot/map_me.png"></p>

<h2>参照</h2>

<ul>
<li><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">HUBOTを使ったirc-bot作成メモ</a></li>
<li><a href="http://memo.sanographix.net/post/88371442780">Hubotで西木野真姫bot作ってSlackに呼ぶ</a></li>
<li><a href="http://qiita.com/Katsumata_RYO/items/dc4543aa5827d4c3211c">slackにHubotを導入(Heroku経由)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HUBOTを使ったirc-bot改修メモ #1 -noticeで発言させる-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/07/31/irc-bot-by-hubot-repair-number-1/"/>
    <updated>2014-07-31T04:45:04+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/07/31/irc-bot-by-hubot-repair-number-1</id>
    <content type="html"><![CDATA[<p><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">こちらの記事</a>でつくったirc-botの発言をnoticeにしたい。（botの発言内容に名前やALLなどの文字列が含まれると当人にmentionが飛んでしまうため）</p>

<h2>HUBOT_IRC_SEND_NOTICE_MODE</h2>

<p>環境変数 <code>HUBOT_IRC_SEND_NOTICE_MODE</code> を <code>true</code> とすれば良い</p>

<p>実行ファイル(runhubot)に追記</p>

<pre><code class="bash">#!/bin/bash

export HUBOT_IRC_NICK="bot_kun"
export HUBOT_IRC_ROOMS="#target_channel"
export HUBOT_IRC_SERVER="irc.hogehoge.local"
export HUBOT_IRC_SEND_NOTICE_MODE=true
#export HUBOT_IRC_PASSWORD="hoge"

bin/hubot -a irc --name myhubot
</code></pre>

<p>この実行ファイルからirc-botを起動すると当該irc-botの発言はすべてnoticeとなる。</p>

<h2>処理の実体</h2>

<p>HUBOT_IRC_SEND_NOTICE_MODEフラグが立っている場合は <code>bot</code> オブジェクトから <code>notice</code> メソッドが呼ばれる。</p>

<ul>
<li><a href="https://github.com/nandub/hubot-irc/blob/master/src/irc.coffee#L18">フラグの確認</a></li>
<li><a href="https://github.com/nandub/hubot-irc/blob/master/src/irc.coffee#L56-76">noticeメソッド呼び出し</a></li>
</ul>


<p><code>notice</code> メソッドが呼ばれている <code>bot</code> オブジェクトの実体は <code>new Irc.Client</code> である。</p>

<ul>
<li><a href="https://github.com/nandub/hubot-irc/blob/master/src/irc.coffee#L192">botオブジェクトの生成</a></li>
</ul>


<p>参考: <a href="http://node-irc.readthedocs.org/en/latest/API.html">http://node-irc.readthedocs.org/en/latest/API.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HUBOTを使ったirc-bot作成メモ]]></title>
    <link href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/"/>
    <updated>2014-04-19T21:05:49+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot</id>
    <content type="html"><![CDATA[<h2>①HUBOTを動かすために必要な諸々のインストール</h2>

<h3>準備として以下をインストールする</h3>

<ul>
<li>node.js（サーバー）</li>
<li>npm（パッケージ管理コマンド）</li>
<li>Redis（KVS）</li>
</ul>


<h3>上記をインストールするためにHomebrewのインストールから始める</h3>

<pre><code class="bash">$ ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)"
</code></pre>

<p>これでHomebrewが入るはず</p>

<h3>次にHomebrewを使ってそれぞれインストールする</h3>

<p>まずnode.jsとnpm</p>

<pre><code class="bash">$ brew install node
</code></pre>

<p>このコマンド一発でnode.jsとnpmが入るはず</p>

<pre><code class="bash">$ node -v
v0.10.26
$ npm -v
1.4.6
</code></pre>

<h3>Redisもインストール</h3>

<pre><code class="bash">$ brew install redis
</code></pre>

<h3>Redisを起動しておく</h3>

<pre><code class="bash">$ redis-server &amp;
</code></pre>

<h2>②HUBOTをインストールする</h2>

<h3>GitHubからリポジトリをクローンしてインストール</h3>

<pre><code class="bash">$ cd git/
$ git clone git://github.com/github/hubot.git
$ cd hubot/
$ npm install -g hubot coffee-script
</code></pre>

<h3>動くか確認</h3>

<pre><code class="bash">$ hubot
Hubot&gt; 
</code></pre>

<p>OK</p>

<h2>③HUBOTをircと連携させる</h2>

<h3>自分用のHUBOTを作る</h3>

<pre><code class="bash">$ hubot --create myhubot
</code></pre>

<p>myhubotの部分は自由に変更可。この名前のディレクトリが作られる</p>

<h3>自分用HUBOTにhubot-ircをインストール</h3>

<pre><code class="bash">$ cd myhubot/
$ npm install hubot-irc --save &amp;&amp; npm install
</code></pre>

<h3>irc連携のためのスクリプトを書く</h3>

<pre><code class="bash">$ vim runhubot
</code></pre>

<p>中身はこんな感じ</p>

<pre><code class="bash">$ cat runhubot
#!/bin/bash

export HUBOT_IRC_NICK="bot_kun"
export HUBOT_IRC_ROOMS="#target_channel"
export HUBOT_IRC_SERVER="irc.hogehoge.local"
#export HUBOT_IRC_PASSWORD="hoge"

bin/hubot -a irc --name myhubot
</code></pre>

<h3>スクリプトの実行権限追加</h3>

<pre><code class="bash">$ chmod u+x runhubot 
</code></pre>

<h3>起動スクリプト実行！</h3>

<pre><code class="bash">$ ./runhubot &amp;
</code></pre>

<h3>irc上でbotがいるか確認する</h3>

<p>bot_kunがいたのでOK</p>

<h2>④botにさせたいことを設定する</h2>

<h3>HUBOTにさせたいことはscriptsディレクトリ以下にCoffeeScriptもしくはJavaScriptで記述する</h3>

<p>最初からいくつかのスクリプトが存在するので、それを参考に書けばOK</p>

<pre><code class="bash">$ vim scripts/tell_fuga.coffee
$ cat scripts/tell_fuga.coffee
module.exports = (robot) -&gt;

    robot.hear /hoge/, (msg) -&gt;
        msg.send "fuga"
</code></pre>

<h3>スクリプトを書いたら、再起動すると読み込んでくれる</h3>

<pre><code class="bash">$ ./runhubot &amp;
</code></pre>

<h2>⑤cronが使えるようにする</h2>

<h3>node-cronをインストール</h3>

<pre><code class="bash">$ npm install cron
</code></pre>

<h3>cronを使ったスクリプトを書く</h3>

<pre><code class="bash">$ vim scripts/mention_hoge.coffee
</code></pre>

<h3>今回は2時間おきに発言するスクリプトを書いてみた</h3>

<pre><code class="bash">$ cat scripts/mention_hoge.coffee 
cron = require('cron').CronJob
module.exports = (robot) -&gt;
  robot.enter -&gt;
  new cron
    cronTime: "0 0 */2 * * *"
    start: true
    timeZone: "Asia/Tokyo"
    onTick: -&gt;
      robot.send {room: "#target_channel"}, "hoge"
</code></pre>

<h2>参考資料</h2>

<ul>
<li><a href="http://www.tettori.net/post/293/">5分で終了。node.jsの環境構築が拍子抜けするほど簡単だったのでサンプルプログラム付きでまとめてみました【Mac編】</a></li>
<li><a href="http://bulblub.com/2013/04/20/install_nodejs_with_homebrew/">Homebrewでnode.jsとnpmをインストール</a></li>
<li><a href="http://tech-sketch.jp/2013/12/hubot-install-heroku.html">GitHubがOpsツールの中心として活用しているHubotを使ってみる</a></li>
<li><a href="http://d.hatena.ne.jp/anatoo/20120204/1328368042">github社製ボットフレームワーク、hubotをIRCボットとして導入した話</a></li>
<li><a href="http://mayo.hatenablog.com/entry/2013/10/15/074237">Redis 入門</a></li>
<li>GitHub

<ul>
<li><a href="https://github.com/nandub/hubot-irc">https://github.com/nandub/hubot-irc</a></li>
<li><a href="https://github.com/ncb000gt/node-cron">https://github.com/ncb000gt/node-cron</a></li>
</ul>
</li>
<li><a href="http://com4tis.net/2013/05/30/node-js-background-pid-stop/">Node.jsをバックグラウンドでプロセスとして動かしたものを停止させる</a>

<ul>
<li>→もっといい方法あるはず。。。</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
