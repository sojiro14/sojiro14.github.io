<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | Sojiro's Blog]]></title>
  <link href="http://sojiro14.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://sojiro14.github.io/"/>
  <updated>2016-06-30T04:01:38+09:00</updated>
  <id>http://sojiro14.github.io/</id>
  <author>
    <name><![CDATA[Sojiro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #2 -Herokuのセットアップ-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/12/first-app-with-rails-number-2-setup-heroku/"/>
    <updated>2014-11-12T12:06:23+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/12/first-app-with-rails-number-2-setup-heroku</id>
    <content type="html"><![CDATA[<p>Ruby on Railsのアプリケーション構築に適したPaaSであるHerokuのセットアップをする。</p>

<h2>Herokuに必要なgemのインストール</h2>

<p>Herokuで使用するDBであるPostgreSQLと通信するための <code>pg</code> とHerokuで画像やスタイルシートなどの静的アセットを提供するための <code>rails_12factor</code> を本番（production）環境にインストールするための内容をGemfileに追記する
<code>ruby
group :production do
  gem 'pg', '0.15.1'
  gem 'rails_12factor', '0.0.2'
end
</code>
production環境用のgemをインストールしないオプションをつけて <code>bundle install</code> を実行する。
これによりGemfile.lockが更新され、production環境に備えることができる。
<code>bash
$ bundle install --without production
Your bundle is complete!
Gems in the group production were not installed.
Use `bundle show [gemname]` to see where a bundled gem is installed.
</code>
ここまでできたらgitにcommitしておく。
<code>bash
$ git commit -a -m "Update Gemfile.lock for Heroku"
</code>
 <code>git commit</code> の <code>-a</code> は変更のあったファイルを自動で <code>add</code> するオプション。</p>

<h2>herokuコマンドが使えるようにする</h2>

<p>まずは以下のURLからHerokuにアカウント登録をする。</p>

<p><a href="https://signup.heroku.com/identity">https://signup.heroku.com/identity</a></p>

<p>アカウント登録が完了したら <code>heroku</code> コマンドをインストールする。
今回はAWSのLinux環境へのインストールなので以下のURL（ <code>Heroku Toolbelt</code> のStandalone）を参照して以下の手順を得る。</p>

<p><a href="https://toolbelt.heroku.com/standalone">https://toolbelt.heroku.com/standalone</a></p>

<pre><code class="bash">$ wget -qO- https://toolbelt.heroku.com/install.sh | sh
This script requires superuser access to install software.
You will be prompted for your password by sudo.
[sudo] password for sojiro: 
Add the Heroku CLI to your PATH using:
$ echo 'PATH="/usr/local/heroku/bin:$PATH"' &gt;&gt; ~/.profile
Installation complete
</code></pre>

<p>自動で <code>sudo</code> をつけて実行してくれる。インストールが完了したら出力にあるようにPATHを通す。
<code>bash
$ echo 'PATH="/usr/local/heroku/bin:$PATH"' &gt;&gt; ~/.bashrc
$ source ~/.bashrc
$ heroku version
heroku-toolbelt/3.15.2 (x86_64-linux) ruby/2.0.0
</code></p>

<h2>Herokuのセットアップ</h2>

<p> <code>heroku</code> コマンドがインストールされたことを確認できたらコマンドラインからHerokuの認証を行う。
<code>bash
$ heroku login
Enter your Heroku credentials.
Email: your.account@email.com
Password (typing will be hidden):
Your Heroku account does not have a public ssh key uploaded.
Could not find an existing public key at ~/.ssh/id_rsa.pub
Would you like to generate one? [Yn] Y
Generating new SSH public key.
Uploading SSH public key /home/user/.ssh/id_rsa.pub... done
Authentication successful.
</code>
認証が完了したらHerokuのセットアップをする
<code>bash
$ heroku create
Creating infinite-peak-4923... done, stack is cedar-14
https://infinite-peak-4923.herokuapp.com/ | git@heroku.com:infinite-peak-4923.git
Git remote heroku added
</code>
これでgitのremoteにherokuが追加される
<code>bash
$ git remote -v
heroku  git@heroku.com:infinite-peak-4923.git (fetch)
heroku  git@heroku.com:infinite-peak-4923.git (push)
origin  https://github.com/sojiro14/first_app.git (fetch)
origin  https://github.com/sojiro14/first_app.git (push)
</code></p>

<h2>Herokuへデプロイ</h2>

<p>追加されたremoteに <code>push</code> をすればHerokuへのデプロイが完了
<code>bash
$ git push heroku master
</code></p>

<p><a href="https://infinite-peak-4923.herokuapp.com/">https://infinite-peak-4923.herokuapp.com/</a></p>

<p> <code>heroku create</code> 時に出力された上記URL（アプリケーションごとに異なる）にアクセスするとHerokuにデプロイしたアプリケーションが確認できる。Rails 4.0ではこの時点で <code>The page you were looking for doesn't exist.</code> と表示されてしまう模様。</p>

<h2>参照</h2>

<p><a href="http://railstutorial.jp">Ruby on Rails チュートリアル</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Railsで初めてアプリを作ってみる #1 -railsのセットアップ-]]></title>
    <link href="http://sojiro14.github.io/blog/2014/11/10/making-first-app-with-rails-number-1-setup-rails/"/>
    <updated>2014-11-10T03:27:49+09:00</updated>
    <id>http://sojiro14.github.io/blog/2014/11/10/making-first-app-with-rails-number-1-setup-rails</id>
    <content type="html"><![CDATA[<p>Ruby on Railsで初めてアプリを作ってみます。
今回はRailsの立ち上がりを確認するところまで。</p>

<h2>アプリのセットアップ（rails new）</h2>

<p>railsのアプリ作成は <code>rails new</code> コマンドで始まる。
<code>bash
$ mkdir rails_projects
$ cd rails_projects
</code>
今回のアプリ作成の為にディレクトリを作成し、早速コマンドを実行。
<code>bash
$ rails new first_app
...
An error occurred while installing sqlite3 (1.3.10), and Bundler cannot continue.
...
</code>
いくつかのディレクトリやファイルが作成されるが、最後にこのようなエラーが出てbundle失敗。
そこでGemfileを編集してbundleをやり直す。</p>

<pre><code class="bash">$ cd first_app/
</code></pre>

<p>Gemfileを編集。内容は<a href="http://railstutorial.jp/chapters/beginning?version=4.0#sec-bundler">Ruby on Rails #Bundler</a>を参照。
&#8220;` bash
$ bundle update
&hellip;
Building native extensions.  This could take a while&hellip;
ERROR:  Error installing sqlite3:
    ERROR: Failed to build gem native extension.</p>

<pre><code>/home/sojiro/.rvm/rubies/ruby-2.0.0-p594/bin/ruby extconf.rb
</code></pre>

<p>checking for sqlite3.h&hellip; no
sqlite3.h is missing. Try &lsquo;port install sqlite3 +universal&rsquo;
or &lsquo;yum install sqlite-devel&rsquo; and check your shared library search path (the
location where your sqlite3 shared library is located).
<strong><em> extconf.rb failed </em></strong>
Could not create Makefile due to some reason, probably lack of necessary
libraries and/or headers.  Check the mkmf.log file for more details.  You may
need configuration options.
&hellip;
<code>
またも失敗。よく見るとsqlite-develが足りていないらしい
</code> bash
$ sudo yum install sqlite-devel
<code>
sqlite-develをインストール後再度bundleによるgemのインストールを試みる
</code> bash
$ bundle update
Installing sqlite3 1.3.8
Installing turbolinks 1.1.1
Installing uglifier 2.1.1
Your bundle is updated!
$ bundle install
Your bundle is complete!
Use <code>bundle show [gemname]</code> to see where a bundled gem is installed.
&#8220;`
インストール成功。</p>

<h2>サーバーの立ち上げ（rails server）</h2>

<p>ローカルでrailsを立ち上げるコマンド <code>rails server</code> を実行。
<code>bash
$ rails server
...
Could not find a JavaScript runtime. See https://github.com/sstephenson/execjs for a list of available runtimes. (ExecJS::RuntimeUnavailable)
...
</code></p>

<h3>Node.jsのインストール</h3>

<p> <code>rails server</code> コマンド実行でエラーが出てしまう。JavaScript runtimeがインストールされていないことが原因のよう。メッセージ通り <a href="https://github.com/sstephenson/execjs">https://github.com/sstephenson/execjs</a> に行ってみるとJavaScript runtimeとしてNode.jsが有効と書いてあるのでNode.jsをインストールする。</p>

<pre><code class="bash">$ sudo rpm -ivh http://ftp.riken.jp/Linux/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm
$ sudo yum install nodejs npm --enablerepo=epel
</code></pre>

<p>今回はyumでインストールした。そして再度 <code>rails server</code>
<code>bash
$ rails server
=&gt; Booting WEBrick
=&gt; Rails 4.0.5 application starting in development on http://0.0.0.0:3000
=&gt; Run `rails server -h` for more startup options
=&gt; Ctrl-C to shutdown server
</code>
ローカルでサーバーが立ち上がる。
今回はAWS上で作業しているので、AWS該当インスタンスのSecurity Groupで3000番portを空ける。</p>

<p><a href="http://xx.xxx.xxx.xxx:3000">http://xx.xxx.xxx.xxx:3000</a></p>

<p>にブラウザでアクセスして以下の画面が見えればOK</p>

<p>{% img /images/rails/rails_starting.png %}</p>

<h2>GitHubに上げておく</h2>

<pre><code class="bash">$ git init
$ git remote add origin https://github.com/sojiro14/first_app.git
</code></pre>

<p>GitHubでリポジトリ作成
<code>bash
$ git add .
$ git commit -m 'Initialize repository'
$ git push -u origin master
</code></p>

<h2>参照</h2>

<ul>
<li><a href="http://qiita.com/you21979@github/items/4efd9fc4363573191b5c">node.jsをyumでインストールする(centos6.5)</a></li>
<li><a href="http://railstutorial.jp">Ruby on Rails チュートリアル</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
